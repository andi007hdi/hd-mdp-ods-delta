{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v1.json", "dbt_version": "0.19.1", "generated_at": "2021-11-30T12:43:08.925853Z", "invocation_id": "a966d402-1d50-4bc8-88f3-ca2a9f66cc62", "env": {}, "project_id": "40e6ebaf3c3737fb8b5a8630d5255814", "user_id": "7d630396-a7c4-4ddf-8ba7-f544f3231714", "send_anonymous_usage_stats": true, "adapter_type": "snowflake"}, "nodes": {"model.dbt_ods_delta.ad_anzahl_akt_verarbeitung": {"raw_sql": "-- depends_on: {{ ref('ad_verarb_ods') }}\r\n{{ config( materialized='incremental' ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT t.tabelle, T.dml_flag,T.anzahl, CURRENT_TIMESTAMP AS  t_aend_dat\r\n,\r\n(SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS) AS ods_lauf_id\r\nFROM (\r\nSELECT 'VG_ANSCHRIFT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ANSCHRIFT_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_BANKVERBINDUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BANKVERBINDUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_BETRIEBSWIRTSCHAFTDATEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BETRIEBSWIRTSCHAFTDATEN_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_COC_AUFTRAG_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_COC_AUFTRAG_PARTNER_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_COC_AUFTRAG_VERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_COC_AUFTRAG_VERTRAG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_CODE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_CODE_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_EXTERNEREFERENZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_EXTERNEREFERENZ_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_EXTERNEREFERENZ_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_EXTERNEREFERENZ_PARTNER_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_INTERNEREFERENZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_INTERNEREFERENZ_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_KOMMUNIKATIONSKANAL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOMMUNIKATIONSKANAL_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_KOSTENSTELLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOSTENSTELLE_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_KOSTENSTELLE_ZUORDNUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOSTENSTELLE_ZUORDNUNG_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_LV_BEZUGSRECHT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_BEZUGSRECHT_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_FOND_KURS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FOND_KURS_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_LV_FOND_STAMM_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FOND_STAMM_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_FONDSPORTFOLIO_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FONDSPORTFOLIO_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_LEISTUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_LV_SCHWEBEGRUND_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_SCHWEBEGRUND_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_STICHTAGSWERTSATZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_STICHTAGSWERTSATZ_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_MAHNUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_MAHNUNG_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_MARKETINGMASSNAHME_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_MARKETINGMASSNAHME_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNER_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_PARTNER_KENNZEICHEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNER_KENNZEICHEN_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_PARTNERBEZIEHUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNERBEZIEHUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_ROLLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ROLLE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_SCHADEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADEN_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_SCHADEN_ART_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADEN_ART_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_SCHADENEREIGNIS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENEREIGNIS_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_SCHADENEREIGNIS_BEZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENEREIGNIS_BEZ_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_SCHADENKATEGORIE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENKATEGORIE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_SCHADENROLLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENROLLE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_SCHADENZAHLUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENZAHLUNG_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_VERMITTLERVEREINBARUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERMITTLERVEREINBARUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERMITTLERVERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERMITTLERVERTRAG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERTRAGSBEZIEHUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSBEZIEHUNG_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_VERTRAGSKONTEXT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSKONTEXT_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_BEITRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BEITRAG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_DRITTRECHTGLAEUBIGER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_DRITTRECHTGLAEUBIGER_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_FREMDVERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_FREMDVERTRAG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_KFZSPEZIFISCHEMERKMALE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KFZSPEZIFISCHEMERKMALE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_KLAUSELNBEDINGUNGEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KLAUSELNBEDINGUNGEN_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_KONSORTE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KONSORTE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_KRAFTFAHRZEUG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KRAFTFAHRZEUG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_NUTZER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_NUTZER_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_SELBSTBEHALTE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SELBSTBEHALTE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_STUFUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_STUFUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERSICHERTESOBJEKT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERSICHERTESOBJEKT_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_VERSICHERTESOBJEKTKFZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERSICHERTESOBJEKTKFZ_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERTRAGSTANDARD_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTANDARD_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_VERTRAGSTEIL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTEIL_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_VERTRAGSTEILBUENDEL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTEILBUENDEL_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_ZUSCHL_NACHL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ZUSCHL_NACHL_AKT group by dml_flag \r\nUNION\r\nSELECT 'VG_VVO_BLZ_ZESSIONARE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VVO_BLZ_ZESSIONARE_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_WERTUNGSGRUNDLTEILUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_WERTUNGSGRUNDLTEILUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_WIRTSCHAFTSZWEIG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_WIRTSCHAFTSZWEIG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_DECKUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_DECKUNG_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_BONUSMALUS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BONUSMALUS_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_TYPREGIO_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_TYPREGIO_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_LEISTUNG_FLV_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_FLV_AKT group by dml_flag\r\nUNION\r\nSELECT 'VG_LV_LEISTUNG_KONV_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_KONV_AKT group by dml_flag\r\n)  T\r\nORDER BY 1, 2\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.ad_verarb_ods"]}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_anzahl_akt_verarbeitung"], "unique_id": "model.dbt_ods_delta.ad_anzahl_akt_verarbeitung", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_anzahl_akt_verarbeitung.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_anzahl_akt_verarbeitung.sql", "name": "ad_anzahl_akt_verarbeitung", "alias": "ad_anzahl_akt_verarbeitung", "checksum": {"name": "sha256", "checksum": "b54141cc8e0a682917f001d20ca3540ba12182dee0a5dceee92402e2e7699e94"}, "tags": [], "refs": [["ad_verarb_ods"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_anzahl_akt_verarbeitung.sql", "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "INM_DATASHARING"}, "compiled_sql": "-- depends_on: DWHHD_DEV.INM_DATASHARING.ad_verarb_ods\n\n\nwith source_data as (\n\nSELECT t.tabelle, T.dml_flag,T.anzahl, CURRENT_TIMESTAMP AS  t_aend_dat\n,\n(SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS) AS ods_lauf_id\nFROM (\nSELECT 'VG_ANSCHRIFT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ANSCHRIFT_AKT group by dml_flag \nUNION\nSELECT 'VG_BANKVERBINDUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BANKVERBINDUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_BETRIEBSWIRTSCHAFTDATEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BETRIEBSWIRTSCHAFTDATEN_AKT group by dml_flag\nUNION\nSELECT 'VG_COC_AUFTRAG_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_COC_AUFTRAG_PARTNER_AKT group by dml_flag \nUNION\nSELECT 'VG_COC_AUFTRAG_VERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_COC_AUFTRAG_VERTRAG_AKT group by dml_flag\nUNION\nSELECT 'VG_CODE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_CODE_AKT group by dml_flag \nUNION\nSELECT 'VG_EXTERNEREFERENZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_EXTERNEREFERENZ_AKT group by dml_flag\nUNION\nSELECT 'VG_EXTERNEREFERENZ_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_EXTERNEREFERENZ_PARTNER_AKT group by dml_flag \nUNION\nSELECT 'VG_INTERNEREFERENZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_INTERNEREFERENZ_AKT group by dml_flag \nUNION\nSELECT 'VG_KOMMUNIKATIONSKANAL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOMMUNIKATIONSKANAL_AKT group by dml_flag\nUNION\nSELECT 'VG_KOSTENSTELLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOSTENSTELLE_AKT group by dml_flag \nUNION\nSELECT 'VG_KOSTENSTELLE_ZUORDNUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KOSTENSTELLE_ZUORDNUNG_AKT group by dml_flag \nUNION\nSELECT 'VG_LV_BEZUGSRECHT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_BEZUGSRECHT_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_FOND_KURS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FOND_KURS_AKT group by dml_flag \nUNION\nSELECT 'VG_LV_FOND_STAMM_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FOND_STAMM_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_FONDSPORTFOLIO_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_FONDSPORTFOLIO_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_LEISTUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_AKT group by dml_flag \nUNION\nSELECT 'VG_LV_SCHWEBEGRUND_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_SCHWEBEGRUND_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_STICHTAGSWERTSATZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_STICHTAGSWERTSATZ_AKT group by dml_flag \nUNION\nSELECT 'VG_MAHNUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_MAHNUNG_AKT group by dml_flag \nUNION\nSELECT 'VG_MARKETINGMASSNAHME_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_MARKETINGMASSNAHME_AKT group by dml_flag\nUNION\nSELECT 'VG_PARTNER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNER_AKT group by dml_flag\nUNION\nSELECT 'VG_PARTNER_KENNZEICHEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNER_KENNZEICHEN_AKT group by dml_flag \nUNION\nSELECT 'VG_PARTNERBEZIEHUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_PARTNERBEZIEHUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_ROLLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ROLLE_AKT group by dml_flag\nUNION\nSELECT 'VG_SCHADEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADEN_AKT group by dml_flag \nUNION\nSELECT 'VG_SCHADEN_ART_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADEN_ART_AKT group by dml_flag\nUNION\nSELECT 'VG_SCHADENEREIGNIS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENEREIGNIS_AKT group by dml_flag\nUNION\nSELECT 'VG_SCHADENEREIGNIS_BEZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENEREIGNIS_BEZ_AKT group by dml_flag \nUNION\nSELECT 'VG_SCHADENKATEGORIE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENKATEGORIE_AKT group by dml_flag\nUNION\nSELECT 'VG_SCHADENROLLE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENROLLE_AKT group by dml_flag\nUNION\nSELECT 'VG_SCHADENZAHLUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SCHADENZAHLUNG_AKT group by dml_flag \nUNION\nSELECT 'VG_VERMITTLERVEREINBARUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERMITTLERVEREINBARUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_VERMITTLERVERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERMITTLERVERTRAG_AKT group by dml_flag\nUNION\nSELECT 'VG_VERTRAGSBEZIEHUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSBEZIEHUNG_AKT group by dml_flag \nUNION\nSELECT 'VG_VERTRAGSKONTEXT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSKONTEXT_AKT group by dml_flag\nUNION\nSELECT 'VG_BEITRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BEITRAG_AKT group by dml_flag\nUNION\nSELECT 'VG_DRITTRECHTGLAEUBIGER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_DRITTRECHTGLAEUBIGER_AKT group by dml_flag \nUNION\nSELECT 'VG_FREMDVERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_FREMDVERTRAG_AKT group by dml_flag\nUNION\nSELECT 'VG_KFZSPEZIFISCHEMERKMALE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KFZSPEZIFISCHEMERKMALE_AKT group by dml_flag\nUNION\nSELECT 'VG_KLAUSELNBEDINGUNGEN_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KLAUSELNBEDINGUNGEN_AKT group by dml_flag \nUNION\nSELECT 'VG_KONSORTE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KONSORTE_AKT group by dml_flag\nUNION\nSELECT 'VG_KRAFTFAHRZEUG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_KRAFTFAHRZEUG_AKT group by dml_flag\nUNION\nSELECT 'VG_NUTZER_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_NUTZER_AKT group by dml_flag \nUNION\nSELECT 'VG_SELBSTBEHALTE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_SELBSTBEHALTE_AKT group by dml_flag\nUNION\nSELECT 'VG_STUFUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_STUFUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_VERSICHERTESOBJEKT_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERSICHERTESOBJEKT_AKT group by dml_flag \nUNION\nSELECT 'VG_VERSICHERTESOBJEKTKFZ_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERSICHERTESOBJEKTKFZ_AKT group by dml_flag\nUNION\nSELECT 'VG_VERTRAG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAG_AKT group by dml_flag\nUNION\nSELECT 'VG_VERTRAGSTANDARD_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTANDARD_AKT group by dml_flag \nUNION\nSELECT 'VG_VERTRAGSTEIL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTEIL_AKT group by dml_flag\nUNION\nSELECT 'VG_VERTRAGSTEILBUENDEL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VERTRAGSTEILBUENDEL_AKT group by dml_flag\nUNION\nSELECT 'VG_ZUSCHL_NACHL_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_ZUSCHL_NACHL_AKT group by dml_flag \nUNION\nSELECT 'VG_VVO_BLZ_ZESSIONARE_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_VVO_BLZ_ZESSIONARE_AKT group by dml_flag\nUNION\nSELECT 'VG_WERTUNGSGRUNDLTEILUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_WERTUNGSGRUNDLTEILUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_WIRTSCHAFTSZWEIG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_WIRTSCHAFTSZWEIG_AKT group by dml_flag\nUNION\nSELECT 'VG_DECKUNG_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_DECKUNG_AKT group by dml_flag\nUNION\nSELECT 'VG_BONUSMALUS_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_BONUSMALUS_AKT group by dml_flag\nUNION\nSELECT 'VG_TYPREGIO_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_TYPREGIO_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_LEISTUNG_FLV_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_FLV_AKT group by dml_flag\nUNION\nSELECT 'VG_LV_LEISTUNG_KONV_AKT' AS TABELLE, dml_flag, count(*) as anzahl FROM DA.VG_LV_LEISTUNG_KONV_AKT group by dml_flag\n)  T\nORDER BY 1, 2\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_anzahl_akt_verarbeitung"}, "model.dbt_ods_delta.ad_chng_vertrag_status": {"raw_sql": "{{ config( materialized='table' ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT\r\n\tTIK_POLICE,\r\n\tTIK_VERTRAG,\r\n\tDWH_POLICE_ID,\r\n\tDWH_VERTRAG_ID,\r\n\tVERTRAGSTDOB,\r\n\tVERTRAGSOB,\r\n\tSTATUSVERTRAG,\r\n\tISTSTORNIERTIND,\r\n\tSTORNOGRUND,\r\n\tSTATUS,\r\n\t314 AS ODS_LAUF_ID,\r\n\tCURRENT_TIMESTAMP AS T_AEND_DAT\r\nFROM\r\n\t(\r\n\tSELECT\r\n\t\tROW_NUMBER() OVER (PARTITION BY vert.DWH_VERTRAG_ID,\r\n\t\tvert.VERTRAGSTDOB\r\n\tORDER BY\r\n\t\tvertStornogrund.BIZPRCNR DESC) SORTER,\r\n\t\tvert.TIK_POLICE,\r\n\t\tvert.TIK_VERTRAG,\r\n\t\tvert.DWH_POLICE_ID,\r\n\t\tvert.DWH_VERTRAG_ID,\r\n\t\tvert.VERTRAGSTDOB,\r\n\t\tvert.VERTRAGSOB,\r\n\t\tvert.STATUSVERTRAG,\r\n\t\tvert.ISTSTORNIERTIND,\r\n\t\tvv.STATUS,\r\n\t\tvertStornogrund.STORNOGRUND\r\n\tFROM\r\n\t\t{{ref('od_vertrag_akt')}} vert\r\n\tINNER JOIN {{ref('od_vertragskontext_akt')}} vv\r\n        ON\r\n\t\tvert.TIK_VERTRAG = vv.TIK_VERTRAG\r\n\t\tAND CURRENT_TIMESTAMP < vv.UNGUELTIGAB\r\n\t\tAND CURRENT_TIMESTAMP >= vv.GUELTIGVON\r\n\t\tAND vv.STATUS = 'STOR'\r\n\t\tAND vv.STATUSDATUM < CURRENT_TIMESTAMP\r\n\tINNER JOIN {{ref('vs_vertrag')}} vertStornogrund\r\n        ON\r\n\t\tvert.DWH_VERTRAG_ID = vertStornogrund.DWH_VERTRAG_ID\r\n\t\tAND vertStornogrund.BIZPRCNR < vert.BIZPRCNR\r\n\t\tAND vertStornogrund.ISTSTORNIERTIND = 1\r\n\tWHERE\r\n\t\tvert.ISTSTORNIERTIND = 0\r\n)\r\nWHERE\r\n\tSORTER = 1\r\n\tAND TIK_POLICE IS NOT NULL\r\n\tAND TIK_VERTRAG IS NOT NULL\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.od_vertrag_akt", "model.dbt_ods_delta.od_vertragskontext_akt", "model.dbt_ods_delta.vs_vertrag"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_chng_vertrag_status"], "unique_id": "model.dbt_ods_delta.ad_chng_vertrag_status", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_chng_vertrag_status.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_chng_vertrag_status.sql", "name": "ad_chng_vertrag_status", "alias": "ad_chng_vertrag_status", "checksum": {"name": "sha256", "checksum": "5535eac1e8af7d5f1fde240de985029beae59b782ae80dfc34cb69e740906c3f"}, "tags": [], "refs": [["od_vertrag_akt"], ["od_vertragskontext_akt"], ["vs_vertrag"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_chng_vertrag_status.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__od_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertrag_akt\n),  __dbt__CTE__od_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertragskontext_akt\n),  __dbt__CTE__vs_vertrag as (\nselect *\nfrom DWHHD_DEV.da.vs_vertrag\n),source_data as (\n\nSELECT\n\tTIK_POLICE,\n\tTIK_VERTRAG,\n\tDWH_POLICE_ID,\n\tDWH_VERTRAG_ID,\n\tVERTRAGSTDOB,\n\tVERTRAGSOB,\n\tSTATUSVERTRAG,\n\tISTSTORNIERTIND,\n\tSTORNOGRUND,\n\tSTATUS,\n\t314 AS ODS_LAUF_ID,\n\tCURRENT_TIMESTAMP AS T_AEND_DAT\nFROM\n\t(\n\tSELECT\n\t\tROW_NUMBER() OVER (PARTITION BY vert.DWH_VERTRAG_ID,\n\t\tvert.VERTRAGSTDOB\n\tORDER BY\n\t\tvertStornogrund.BIZPRCNR DESC) SORTER,\n\t\tvert.TIK_POLICE,\n\t\tvert.TIK_VERTRAG,\n\t\tvert.DWH_POLICE_ID,\n\t\tvert.DWH_VERTRAG_ID,\n\t\tvert.VERTRAGSTDOB,\n\t\tvert.VERTRAGSOB,\n\t\tvert.STATUSVERTRAG,\n\t\tvert.ISTSTORNIERTIND,\n\t\tvv.STATUS,\n\t\tvertStornogrund.STORNOGRUND\n\tFROM\n\t\t__dbt__CTE__od_vertrag_akt vert\n\tINNER JOIN __dbt__CTE__od_vertragskontext_akt vv\n        ON\n\t\tvert.TIK_VERTRAG = vv.TIK_VERTRAG\n\t\tAND CURRENT_TIMESTAMP < vv.UNGUELTIGAB\n\t\tAND CURRENT_TIMESTAMP >= vv.GUELTIGVON\n\t\tAND vv.STATUS = 'STOR'\n\t\tAND vv.STATUSDATUM < CURRENT_TIMESTAMP\n\tINNER JOIN __dbt__CTE__vs_vertrag vertStornogrund\n        ON\n\t\tvert.DWH_VERTRAG_ID = vertStornogrund.DWH_VERTRAG_ID\n\t\tAND vertStornogrund.BIZPRCNR < vert.BIZPRCNR\n\t\tAND vertStornogrund.ISTSTORNIERTIND = 1\n\tWHERE\n\t\tvert.ISTSTORNIERTIND = 0\n)\nWHERE\n\tSORTER = 1\n\tAND TIK_POLICE IS NOT NULL\n\tAND TIK_VERTRAG IS NOT NULL\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.od_vertrag_akt", "sql": " __dbt__CTE__od_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertrag_akt\n)"}, {"id": "model.dbt_ods_delta.od_vertragskontext_akt", "sql": " __dbt__CTE__od_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertragskontext_akt\n)"}, {"id": "model.dbt_ods_delta.vs_vertrag", "sql": " __dbt__CTE__vs_vertrag as (\nselect *\nfrom DWHHD_DEV.da.vs_vertrag\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_chng_vertrag_status"}, "model.dbt_ods_delta.ad_mod_partner": {"raw_sql": "{{ config( materialized='table', unique_key=\"dwh_partner_id\", \r\npost_hook = \"ALTER TABLE {{ this }} ADD CONSTRAINT AD_MOD_PARTNER_PK PRIMARY KEY (DWH_PARTNER_ID)\" ) }} \r\n\r\nwith source_data as (\r\n\r\nSELECT DISTINCT DWH_PARTNER_ID  FROM (\r\nSELECT DWH_PARTNER_ID  FROM {{ref('vg_anschrift_akt')}}\r\nUNION ALL\r\nSELECT DWH_PARTNER_ID  FROM {{ref('vg_bankverbindung_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_betriebswirtschaftdaten_akt')}}\r\nUNION ALL \r\nSELECT PARTNER_ID AS DWH_PARTNER_ID FROM {{ref('vg_coc_auftrag_partner_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_externereferenz_partner_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_kommunikationskanal_akt')}}\r\nUNION ALL \r\nSELECT DWH_KOSTENSTELLEN_ID AS DWH_PARTNER_ID FROM {{ref('vg_kostenstelle_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_kostenstelle_zuordnung_akt')}} WHERE TYP = 'KST-MA'\r\nUNION ALL \r\nSELECT DWH_KOSTENSTELLEN_ID AS DWH_PARTNER_ID FROM {{ref('vg_kostenstelle_zuordnung_akt')}} WHERE TYP = 'OE-KST'\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_marketingmassnahme_akt')}} \r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_partner_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_partner_kennzeichen_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_partnerbeziehung_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_vermittlervereinbarung_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_vermittlervertrag_akt')}}\r\nUNION ALL \r\nSELECT DWH_PARTNER_ID FROM {{ref('vg_wirtschaftszweig_akt')}}\r\n)\r\nORDER BY 1\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.vg_anschrift_akt", "model.dbt_ods_delta.vg_bankverbindung_akt", "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt", "model.dbt_ods_delta.vg_coc_auftrag_partner_akt", "model.dbt_ods_delta.vg_externereferenz_partner_akt", "model.dbt_ods_delta.vg_kommunikationskanal_akt", "model.dbt_ods_delta.vg_kostenstelle_akt", "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "model.dbt_ods_delta.vg_marketingmassnahme_akt", "model.dbt_ods_delta.vg_partner_akt", "model.dbt_ods_delta.vg_partner_kennzeichen_akt", "model.dbt_ods_delta.vg_partnerbeziehung_akt", "model.dbt_ods_delta.vg_vermittlervereinbarung_akt", "model.dbt_ods_delta.vg_vermittlervertrag_akt", "model.dbt_ods_delta.vg_wirtschaftszweig_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "unique_key": "dwh_partner_id", "post-hook": [{"sql": "ALTER TABLE {{ this }} ADD CONSTRAINT AD_MOD_PARTNER_PK PRIMARY KEY (DWH_PARTNER_ID)", "transaction": true, "index": null}], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_partner"], "unique_id": "model.dbt_ods_delta.ad_mod_partner", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_partner.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_partner.sql", "name": "ad_mod_partner", "alias": "ad_mod_partner", "checksum": {"name": "sha256", "checksum": "2f84e359e9e2e8b2af28ac554f0613e0801e5095b4131ad7a15bb292b711af3d"}, "tags": [], "refs": [["vg_anschrift_akt"], ["vg_bankverbindung_akt"], ["vg_betriebswirtschaftdaten_akt"], ["vg_coc_auftrag_partner_akt"], ["vg_externereferenz_partner_akt"], ["vg_kommunikationskanal_akt"], ["vg_kostenstelle_akt"], ["vg_kostenstelle_zuordnung_akt"], ["vg_kostenstelle_zuordnung_akt"], ["vg_marketingmassnahme_akt"], ["vg_partner_akt"], ["vg_partner_kennzeichen_akt"], ["vg_partnerbeziehung_akt"], ["vg_vermittlervereinbarung_akt"], ["vg_vermittlervertrag_akt"], ["vg_wirtschaftszweig_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_partner.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING", "unique_key": "dwh_partner_id", "post-hook": "ALTER TABLE {{ this }} ADD CONSTRAINT AD_MOD_PARTNER_PK PRIMARY KEY (DWH_PARTNER_ID)"}, "compiled_sql": " \n\nwith  __dbt__CTE__vg_anschrift_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_anschrift_akt\n),  __dbt__CTE__vg_bankverbindung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_bankverbindung_akt\n),  __dbt__CTE__vg_betriebswirtschaftdaten_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_betriebswirtschaftdaten_akt\n),  __dbt__CTE__vg_coc_auftrag_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_coc_auftrag_partner_akt\n),  __dbt__CTE__vg_externereferenz_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_externereferenz_partner_akt\n),  __dbt__CTE__vg_kommunikationskanal_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kommunikationskanal_akt\n),  __dbt__CTE__vg_kostenstelle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kostenstelle_akt\n),  __dbt__CTE__vg_kostenstelle_zuordnung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kostenstelle_zuordnung_akt\n),  __dbt__CTE__vg_marketingmassnahme_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_marketingmassnahme_akt\n),  __dbt__CTE__vg_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partner_akt\n),  __dbt__CTE__vg_partner_kennzeichen_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partner_kennzeichen_akt\n),  __dbt__CTE__vg_partnerbeziehung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partnerbeziehung_akt\n),  __dbt__CTE__vg_vermittlervereinbarung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vermittlervereinbarung_akt\n),  __dbt__CTE__vg_vermittlervertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vermittlervertrag_akt\n),  __dbt__CTE__vg_wirtschaftszweig_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_wirtschaftszweig_akt\n),source_data as (\n\nSELECT DISTINCT DWH_PARTNER_ID  FROM (\nSELECT DWH_PARTNER_ID  FROM __dbt__CTE__vg_anschrift_akt\nUNION ALL\nSELECT DWH_PARTNER_ID  FROM __dbt__CTE__vg_bankverbindung_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_betriebswirtschaftdaten_akt\nUNION ALL \nSELECT PARTNER_ID AS DWH_PARTNER_ID FROM __dbt__CTE__vg_coc_auftrag_partner_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_externereferenz_partner_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_kommunikationskanal_akt\nUNION ALL \nSELECT DWH_KOSTENSTELLEN_ID AS DWH_PARTNER_ID FROM __dbt__CTE__vg_kostenstelle_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_kostenstelle_zuordnung_akt WHERE TYP = 'KST-MA'\nUNION ALL \nSELECT DWH_KOSTENSTELLEN_ID AS DWH_PARTNER_ID FROM __dbt__CTE__vg_kostenstelle_zuordnung_akt WHERE TYP = 'OE-KST'\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_marketingmassnahme_akt \nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_partner_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_partner_kennzeichen_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_partnerbeziehung_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_vermittlervereinbarung_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_vermittlervertrag_akt\nUNION ALL \nSELECT DWH_PARTNER_ID FROM __dbt__CTE__vg_wirtschaftszweig_akt\n)\nORDER BY 1\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.vg_anschrift_akt", "sql": " __dbt__CTE__vg_anschrift_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_anschrift_akt\n)"}, {"id": "model.dbt_ods_delta.vg_bankverbindung_akt", "sql": " __dbt__CTE__vg_bankverbindung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_bankverbindung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt", "sql": " __dbt__CTE__vg_betriebswirtschaftdaten_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_betriebswirtschaftdaten_akt\n)"}, {"id": "model.dbt_ods_delta.vg_coc_auftrag_partner_akt", "sql": " __dbt__CTE__vg_coc_auftrag_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_coc_auftrag_partner_akt\n)"}, {"id": "model.dbt_ods_delta.vg_externereferenz_partner_akt", "sql": " __dbt__CTE__vg_externereferenz_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_externereferenz_partner_akt\n)"}, {"id": "model.dbt_ods_delta.vg_kommunikationskanal_akt", "sql": " __dbt__CTE__vg_kommunikationskanal_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kommunikationskanal_akt\n)"}, {"id": "model.dbt_ods_delta.vg_kostenstelle_akt", "sql": " __dbt__CTE__vg_kostenstelle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kostenstelle_akt\n)"}, {"id": "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "sql": " __dbt__CTE__vg_kostenstelle_zuordnung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kostenstelle_zuordnung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_marketingmassnahme_akt", "sql": " __dbt__CTE__vg_marketingmassnahme_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_marketingmassnahme_akt\n)"}, {"id": "model.dbt_ods_delta.vg_partner_akt", "sql": " __dbt__CTE__vg_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partner_akt\n)"}, {"id": "model.dbt_ods_delta.vg_partner_kennzeichen_akt", "sql": " __dbt__CTE__vg_partner_kennzeichen_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partner_kennzeichen_akt\n)"}, {"id": "model.dbt_ods_delta.vg_partnerbeziehung_akt", "sql": " __dbt__CTE__vg_partnerbeziehung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_partnerbeziehung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vermittlervereinbarung_akt", "sql": " __dbt__CTE__vg_vermittlervereinbarung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vermittlervereinbarung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vermittlervertrag_akt", "sql": " __dbt__CTE__vg_vermittlervertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vermittlervertrag_akt\n)"}, {"id": "model.dbt_ods_delta.vg_wirtschaftszweig_akt", "sql": " __dbt__CTE__vg_wirtschaftszweig_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_wirtschaftszweig_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_partner"}, "model.dbt_ods_delta.ad_mod_partner_coc": {"raw_sql": "{{ config( materialized='table'  ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT\r\n\tDWH_PARTNER_ID\r\nFROM\r\n\t{{ref('ad_mod_partner')}} \r\nWHERE\r\nDWH_PARTNER_ID NOT IN\r\n     (\r\nSELECT\r\n\tTIK_PARTNER\r\nFROM\r\n\t{{ref('od_coc_auftrag_partner_akt')}}\r\nWHERE\r\n\tDT_COC_SPERRE <= CURRENT_TIMESTAMP\r\n\tOR AENDERUNGS_KZ = 'L'\r\n    )\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.ad_mod_partner", "model.dbt_ods_delta.od_coc_auftrag_partner_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_partner_coc"], "unique_id": "model.dbt_ods_delta.ad_mod_partner_coc", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_partner_coc.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_partner_coc.sql", "name": "ad_mod_partner_coc", "alias": "ad_mod_partner_coc", "checksum": {"name": "sha256", "checksum": "7c68f7b641510d2516e5aeaa4f833f0cab4a0dec36e6a2f19c3bb1993b19007d"}, "tags": [], "refs": [["ad_mod_partner"], ["od_coc_auftrag_partner_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_partner_coc.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__od_coc_auftrag_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_partner_akt\n),source_data as (\n\nSELECT\n\tDWH_PARTNER_ID\nFROM\n\tDWHHD_DEV.INM_DATASHARING.ad_mod_partner \nWHERE\nDWH_PARTNER_ID NOT IN\n     (\nSELECT\n\tTIK_PARTNER\nFROM\n\t__dbt__CTE__od_coc_auftrag_partner_akt\nWHERE\n\tDT_COC_SPERRE <= CURRENT_TIMESTAMP\n\tOR AENDERUNGS_KZ = 'L'\n    )\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.od_coc_auftrag_partner_akt", "sql": " __dbt__CTE__od_coc_auftrag_partner_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_partner_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_partner_coc"}, "model.dbt_ods_delta.ad_mod_schaden": {"raw_sql": "{{ config( materialized='table'  ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT DISTINCT DWH_SCHADEN_ID  FROM (\r\nSELECT DWH_SCHADEN_ID  FROM {{ref('vg_schaden_akt')}}  \r\nUNION ALL\r\nSELECT DWH_EREIGNIS_ID AS DWH_SCHADEN_ID FROM {{ref('vg_schadenereignis_akt')}} \r\nUNION ALL \r\nSELECT DWH_SCHADEN_ID FROM {{ref('vg_schadenereignis_bez_akt')}} \r\nUNION ALL \r\nSELECT DWH_SCHADEN_ID FROM {{ref('vg_schadenkategorie_akt')}} \r\nUNION ALL \r\nSELECT DWH_SCHADEN_ID FROM {{ref('vg_schadenzahlung_akt')}} \r\nUNION ALL\r\nSELECT ID AS DWH_SCHADEN_ID FROM {{ref('vg_schadenrolle_akt')}}  \r\nUNION ALL \r\nSELECT DWH_SCHADEN_ID AS DWH_SCHADEN_ID FROM {{ref('vg_schaden_art_akt')}}   \r\n)\r\nORDER BY 1\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.vg_schaden_akt", "model.dbt_ods_delta.vg_schadenereignis_akt", "model.dbt_ods_delta.vg_schadenereignis_bez_akt", "model.dbt_ods_delta.vg_schadenkategorie_akt", "model.dbt_ods_delta.vg_schadenzahlung_akt", "model.dbt_ods_delta.vg_schadenrolle_akt", "model.dbt_ods_delta.vg_schaden_art_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_schaden"], "unique_id": "model.dbt_ods_delta.ad_mod_schaden", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_schaden.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_schaden.sql", "name": "ad_mod_schaden", "alias": "ad_mod_schaden", "checksum": {"name": "sha256", "checksum": "b33a6ff70d7e1b74e21e8e8039800b6a9d832d47d8690a8c02b60f4ef9f1514e"}, "tags": [], "refs": [["vg_schaden_akt"], ["vg_schadenereignis_akt"], ["vg_schadenereignis_bez_akt"], ["vg_schadenkategorie_akt"], ["vg_schadenzahlung_akt"], ["vg_schadenrolle_akt"], ["vg_schaden_art_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_schaden.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__vg_schaden_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schaden_akt\n),  __dbt__CTE__vg_schadenereignis_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenereignis_akt\n),  __dbt__CTE__vg_schadenereignis_bez_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenereignis_bez_akt\n),  __dbt__CTE__vg_schadenkategorie_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenkategorie_akt\n),  __dbt__CTE__vg_schadenzahlung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenzahlung_akt\n),  __dbt__CTE__vg_schadenrolle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenrolle_akt\n),  __dbt__CTE__vg_schaden_art_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schaden_art_akt\n),source_data as (\n\nSELECT DISTINCT DWH_SCHADEN_ID  FROM (\nSELECT DWH_SCHADEN_ID  FROM __dbt__CTE__vg_schaden_akt  \nUNION ALL\nSELECT DWH_EREIGNIS_ID AS DWH_SCHADEN_ID FROM __dbt__CTE__vg_schadenereignis_akt \nUNION ALL \nSELECT DWH_SCHADEN_ID FROM __dbt__CTE__vg_schadenereignis_bez_akt \nUNION ALL \nSELECT DWH_SCHADEN_ID FROM __dbt__CTE__vg_schadenkategorie_akt \nUNION ALL \nSELECT DWH_SCHADEN_ID FROM __dbt__CTE__vg_schadenzahlung_akt \nUNION ALL\nSELECT ID AS DWH_SCHADEN_ID FROM __dbt__CTE__vg_schadenrolle_akt  \nUNION ALL \nSELECT DWH_SCHADEN_ID AS DWH_SCHADEN_ID FROM __dbt__CTE__vg_schaden_art_akt   \n)\nORDER BY 1\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.vg_schaden_akt", "sql": " __dbt__CTE__vg_schaden_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schaden_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schadenereignis_akt", "sql": " __dbt__CTE__vg_schadenereignis_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenereignis_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schadenereignis_bez_akt", "sql": " __dbt__CTE__vg_schadenereignis_bez_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenereignis_bez_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schadenkategorie_akt", "sql": " __dbt__CTE__vg_schadenkategorie_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenkategorie_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schadenzahlung_akt", "sql": " __dbt__CTE__vg_schadenzahlung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenzahlung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schadenrolle_akt", "sql": " __dbt__CTE__vg_schadenrolle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schadenrolle_akt\n)"}, {"id": "model.dbt_ods_delta.vg_schaden_art_akt", "sql": " __dbt__CTE__vg_schaden_art_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_schaden_art_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_schaden"}, "model.dbt_ods_delta.ad_mod_schaden_coc": {"raw_sql": "{{ config( materialized='table'  ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT\r\n\tad.DWH_SCHADEN_ID\r\nFROM\r\n\t{{ref('ad_mod_schaden')}} ad\r\nINNER JOIN {{ref('od_schaden_akt')}} s\r\nON\r\n\tad.DWH_SCHADEN_ID = s.DWH_SCHADEN_ID\r\nWHERE\r\n\ts.TIK_VERTRAG NOT IN\r\n  (\r\n\tSELECT\r\n\t\tTIK_VERTRAG\r\n\tFROM\r\n\t\t{{ref('od_coc_auftrag_vertrag_akt')}} \r\n\tWHERE\r\n\t\tDT_COC_SPERRE <= current_timestamp\r\n\t\tOR AENDERUNGS_KZ = 'L'\r\n  )\r\nGROUP BY\r\n\tad.DWH_SCHADEN_ID\r\nORDER BY\r\n\t1\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.ad_mod_schaden", "model.dbt_ods_delta.od_schaden_akt", "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_schaden_coc"], "unique_id": "model.dbt_ods_delta.ad_mod_schaden_coc", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_schaden_coc.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_schaden_coc.sql", "name": "ad_mod_schaden_coc", "alias": "ad_mod_schaden_coc", "checksum": {"name": "sha256", "checksum": "fad85617f657057d181f699921dc6e4089ad7e9dec396360a0c6968e1258ac5f"}, "tags": [], "refs": [["ad_mod_schaden"], ["od_schaden_akt"], ["od_coc_auftrag_vertrag_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_schaden_coc.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__od_schaden_akt as (\nselect *\nfrom DWHHD_DEV.da.od_schaden_akt\n),  __dbt__CTE__od_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_vertrag_akt\n),source_data as (\n\nSELECT\n\tad.DWH_SCHADEN_ID\nFROM\n\tDWHHD_DEV.INM_DATASHARING.ad_mod_schaden ad\nINNER JOIN __dbt__CTE__od_schaden_akt s\nON\n\tad.DWH_SCHADEN_ID = s.DWH_SCHADEN_ID\nWHERE\n\ts.TIK_VERTRAG NOT IN\n  (\n\tSELECT\n\t\tTIK_VERTRAG\n\tFROM\n\t\t__dbt__CTE__od_coc_auftrag_vertrag_akt \n\tWHERE\n\t\tDT_COC_SPERRE <= current_timestamp\n\t\tOR AENDERUNGS_KZ = 'L'\n  )\nGROUP BY\n\tad.DWH_SCHADEN_ID\nORDER BY\n\t1\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.od_schaden_akt", "sql": " __dbt__CTE__od_schaden_akt as (\nselect *\nfrom DWHHD_DEV.da.od_schaden_akt\n)"}, {"id": "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt", "sql": " __dbt__CTE__od_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_vertrag_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_schaden_coc"}, "model.dbt_ods_delta.ad_mod_vertrag": {"raw_sql": "{{ config( materialized='table' ) }}\r\n\r\nwith source_data as (\r\n\r\n\r\nselect distinct tik_vertrag  from (\r\nselect tik_vertrag from {{ref('vg_coc_auftrag_vertrag_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_externereferenz_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_internereferenz_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_lv_bezugsrecht_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_lv_leistung_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_mahnung_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_rolle_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_vertrag_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_vertragsbeziehung_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_vertragskontext_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_beitrag_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_bonusmalus_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_deckung_akt')}}\r\nunion all\r\nselect tik_police as tik_vertrag from {{ref('vg_drittrechtglaeubiger_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_fremdvertrag_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_kfzspezifischemerkmale_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_klauselnbedingungen_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_kraftfahrzeug_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_lv_leistung_flv_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_lv_leistung_konv_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_nutzer_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_selbstbehalte_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_stufung_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_typregio_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_versichertesobjekt_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_versichertesobjektkfz_akt')}} \r\nunion all\r\nselect tik_police as tik_vertrag from {{ref('vg_vertragstandard_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_vertragsteil_akt')}}\r\nunion all\r\nselect tik_vertrag from {{ref('vg_vertragsteilbuendel_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_zuschl_nachl_akt')}} \r\nunion all\r\nselect tik_vertrag from {{ref('vg_wertungsgrundlteilung_akt')}}\r\n) \r\nORDER BY 1\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt", "model.dbt_ods_delta.vg_externereferenz_akt", "model.dbt_ods_delta.vg_internereferenz_akt", "model.dbt_ods_delta.vg_lv_bezugsrecht_akt", "model.dbt_ods_delta.vg_lv_leistung_akt", "model.dbt_ods_delta.vg_mahnung_akt", "model.dbt_ods_delta.vg_rolle_akt", "model.dbt_ods_delta.vg_vertrag_akt", "model.dbt_ods_delta.vg_vertragsbeziehung_akt", "model.dbt_ods_delta.vg_vertragskontext_akt", "model.dbt_ods_delta.vg_beitrag_akt", "model.dbt_ods_delta.vg_bonusmalus_akt", "model.dbt_ods_delta.vg_deckung_akt", "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt", "model.dbt_ods_delta.vg_fremdvertrag_akt", "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt", "model.dbt_ods_delta.vg_klauselnbedingungen_akt", "model.dbt_ods_delta.vg_kraftfahrzeug_akt", "model.dbt_ods_delta.vg_lv_leistung_flv_akt", "model.dbt_ods_delta.vg_lv_leistung_konv_akt", "model.dbt_ods_delta.vg_nutzer_akt", "model.dbt_ods_delta.vg_selbstbehalte_akt", "model.dbt_ods_delta.vg_stufung_akt", "model.dbt_ods_delta.vg_typregio_akt", "model.dbt_ods_delta.vg_versichertesobjekt_akt", "model.dbt_ods_delta.vg_versichertesobjektkfz_akt", "model.dbt_ods_delta.vg_vertragstandard_akt", "model.dbt_ods_delta.vg_vertragsteil_akt", "model.dbt_ods_delta.vg_vertragsteilbuendel_akt", "model.dbt_ods_delta.vg_zuschl_nachl_akt", "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_vertrag"], "unique_id": "model.dbt_ods_delta.ad_mod_vertrag", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_vertrag.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_vertrag.sql", "name": "ad_mod_vertrag", "alias": "ad_mod_vertrag", "checksum": {"name": "sha256", "checksum": "f92f8ac55e023c59d52cc5984cfa5bfa7bdf686d3d3eeee33084bc2941f76884"}, "tags": [], "refs": [["vg_coc_auftrag_vertrag_akt"], ["vg_externereferenz_akt"], ["vg_internereferenz_akt"], ["vg_lv_bezugsrecht_akt"], ["vg_lv_leistung_akt"], ["vg_mahnung_akt"], ["vg_rolle_akt"], ["vg_vertrag_akt"], ["vg_vertragsbeziehung_akt"], ["vg_vertragskontext_akt"], ["vg_beitrag_akt"], ["vg_bonusmalus_akt"], ["vg_deckung_akt"], ["vg_drittrechtglaeubiger_akt"], ["vg_fremdvertrag_akt"], ["vg_kfzspezifischemerkmale_akt"], ["vg_klauselnbedingungen_akt"], ["vg_kraftfahrzeug_akt"], ["vg_lv_leistung_flv_akt"], ["vg_lv_leistung_konv_akt"], ["vg_nutzer_akt"], ["vg_selbstbehalte_akt"], ["vg_stufung_akt"], ["vg_typregio_akt"], ["vg_versichertesobjekt_akt"], ["vg_versichertesobjektkfz_akt"], ["vg_vertragstandard_akt"], ["vg_vertragsteil_akt"], ["vg_vertragsteilbuendel_akt"], ["vg_zuschl_nachl_akt"], ["vg_wertungsgrundlteilung_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_vertrag.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__vg_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_coc_auftrag_vertrag_akt\n),  __dbt__CTE__vg_externereferenz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_externereferenz_akt\n),  __dbt__CTE__vg_internereferenz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_internereferenz_akt\n),  __dbt__CTE__vg_lv_bezugsrecht_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_bezugsrecht_akt\n),  __dbt__CTE__vg_lv_leistung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_akt\n),  __dbt__CTE__vg_mahnung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_mahnung_akt\n),  __dbt__CTE__vg_rolle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_rolle_akt\n),  __dbt__CTE__vg_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertrag_akt\n),  __dbt__CTE__vg_vertragsbeziehung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsbeziehung_akt\n),  __dbt__CTE__vg_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragskontext_akt\n),  __dbt__CTE__vg_beitrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_beitrag_akt\n),  __dbt__CTE__vg_bonusmalus_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_bonusmalus_akt\n),  __dbt__CTE__vg_deckung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_deckung_akt\n),  __dbt__CTE__vg_drittrechtglaeubiger_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_drittrechtglaeubiger_akt\n),  __dbt__CTE__vg_fremdvertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_fremdvertrag_akt\n),  __dbt__CTE__vg_kfzspezifischemerkmale_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kfzspezifischemerkmale_akt\n),  __dbt__CTE__vg_klauselnbedingungen_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_klauselnbedingungen_akt\n),  __dbt__CTE__vg_kraftfahrzeug_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kraftfahrzeug_akt\n),  __dbt__CTE__vg_lv_leistung_flv_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_flv_akt\n),  __dbt__CTE__vg_lv_leistung_konv_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_konv_akt\n),  __dbt__CTE__vg_nutzer_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_nutzer_akt\n),  __dbt__CTE__vg_selbstbehalte_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_selbstbehalte_akt\n),  __dbt__CTE__vg_stufung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_stufung_akt\n),  __dbt__CTE__vg_typregio_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_typregio_akt\n),  __dbt__CTE__vg_versichertesobjekt_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_versichertesobjekt_akt\n),  __dbt__CTE__vg_versichertesobjektkfz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_versichertesobjektkfz_akt\n),  __dbt__CTE__vg_vertragstandard_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragstandard_akt\n),  __dbt__CTE__vg_vertragsteil_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsteil_akt\n),  __dbt__CTE__vg_vertragsteilbuendel_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsteilbuendel_akt\n),  __dbt__CTE__vg_zuschl_nachl_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_zuschl_nachl_akt\n),  __dbt__CTE__vg_wertungsgrundlteilung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_wertungsgrundlteilung_akt\n),source_data as (\n\n\nselect distinct tik_vertrag  from (\nselect tik_vertrag from __dbt__CTE__vg_coc_auftrag_vertrag_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_externereferenz_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_internereferenz_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_lv_bezugsrecht_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_lv_leistung_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_mahnung_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_rolle_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_vertrag_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_vertragsbeziehung_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_vertragskontext_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_beitrag_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_bonusmalus_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_deckung_akt\nunion all\nselect tik_police as tik_vertrag from __dbt__CTE__vg_drittrechtglaeubiger_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_fremdvertrag_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_kfzspezifischemerkmale_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_klauselnbedingungen_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_kraftfahrzeug_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_lv_leistung_flv_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_lv_leistung_konv_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_nutzer_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_selbstbehalte_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_stufung_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_typregio_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_versichertesobjekt_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_versichertesobjektkfz_akt \nunion all\nselect tik_police as tik_vertrag from __dbt__CTE__vg_vertragstandard_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_vertragsteil_akt\nunion all\nselect tik_vertrag from __dbt__CTE__vg_vertragsteilbuendel_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_zuschl_nachl_akt \nunion all\nselect tik_vertrag from __dbt__CTE__vg_wertungsgrundlteilung_akt\n) \nORDER BY 1\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt", "sql": " __dbt__CTE__vg_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_coc_auftrag_vertrag_akt\n)"}, {"id": "model.dbt_ods_delta.vg_externereferenz_akt", "sql": " __dbt__CTE__vg_externereferenz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_externereferenz_akt\n)"}, {"id": "model.dbt_ods_delta.vg_internereferenz_akt", "sql": " __dbt__CTE__vg_internereferenz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_internereferenz_akt\n)"}, {"id": "model.dbt_ods_delta.vg_lv_bezugsrecht_akt", "sql": " __dbt__CTE__vg_lv_bezugsrecht_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_bezugsrecht_akt\n)"}, {"id": "model.dbt_ods_delta.vg_lv_leistung_akt", "sql": " __dbt__CTE__vg_lv_leistung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_mahnung_akt", "sql": " __dbt__CTE__vg_mahnung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_mahnung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_rolle_akt", "sql": " __dbt__CTE__vg_rolle_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_rolle_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertrag_akt", "sql": " __dbt__CTE__vg_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertrag_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertragsbeziehung_akt", "sql": " __dbt__CTE__vg_vertragsbeziehung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsbeziehung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertragskontext_akt", "sql": " __dbt__CTE__vg_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragskontext_akt\n)"}, {"id": "model.dbt_ods_delta.vg_beitrag_akt", "sql": " __dbt__CTE__vg_beitrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_beitrag_akt\n)"}, {"id": "model.dbt_ods_delta.vg_bonusmalus_akt", "sql": " __dbt__CTE__vg_bonusmalus_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_bonusmalus_akt\n)"}, {"id": "model.dbt_ods_delta.vg_deckung_akt", "sql": " __dbt__CTE__vg_deckung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_deckung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt", "sql": " __dbt__CTE__vg_drittrechtglaeubiger_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_drittrechtglaeubiger_akt\n)"}, {"id": "model.dbt_ods_delta.vg_fremdvertrag_akt", "sql": " __dbt__CTE__vg_fremdvertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_fremdvertrag_akt\n)"}, {"id": "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt", "sql": " __dbt__CTE__vg_kfzspezifischemerkmale_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kfzspezifischemerkmale_akt\n)"}, {"id": "model.dbt_ods_delta.vg_klauselnbedingungen_akt", "sql": " __dbt__CTE__vg_klauselnbedingungen_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_klauselnbedingungen_akt\n)"}, {"id": "model.dbt_ods_delta.vg_kraftfahrzeug_akt", "sql": " __dbt__CTE__vg_kraftfahrzeug_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_kraftfahrzeug_akt\n)"}, {"id": "model.dbt_ods_delta.vg_lv_leistung_flv_akt", "sql": " __dbt__CTE__vg_lv_leistung_flv_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_flv_akt\n)"}, {"id": "model.dbt_ods_delta.vg_lv_leistung_konv_akt", "sql": " __dbt__CTE__vg_lv_leistung_konv_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_lv_leistung_konv_akt\n)"}, {"id": "model.dbt_ods_delta.vg_nutzer_akt", "sql": " __dbt__CTE__vg_nutzer_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_nutzer_akt\n)"}, {"id": "model.dbt_ods_delta.vg_selbstbehalte_akt", "sql": " __dbt__CTE__vg_selbstbehalte_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_selbstbehalte_akt\n)"}, {"id": "model.dbt_ods_delta.vg_stufung_akt", "sql": " __dbt__CTE__vg_stufung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_stufung_akt\n)"}, {"id": "model.dbt_ods_delta.vg_typregio_akt", "sql": " __dbt__CTE__vg_typregio_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_typregio_akt\n)"}, {"id": "model.dbt_ods_delta.vg_versichertesobjekt_akt", "sql": " __dbt__CTE__vg_versichertesobjekt_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_versichertesobjekt_akt\n)"}, {"id": "model.dbt_ods_delta.vg_versichertesobjektkfz_akt", "sql": " __dbt__CTE__vg_versichertesobjektkfz_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_versichertesobjektkfz_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertragstandard_akt", "sql": " __dbt__CTE__vg_vertragstandard_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragstandard_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertragsteil_akt", "sql": " __dbt__CTE__vg_vertragsteil_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsteil_akt\n)"}, {"id": "model.dbt_ods_delta.vg_vertragsteilbuendel_akt", "sql": " __dbt__CTE__vg_vertragsteilbuendel_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_vertragsteilbuendel_akt\n)"}, {"id": "model.dbt_ods_delta.vg_zuschl_nachl_akt", "sql": " __dbt__CTE__vg_zuschl_nachl_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_zuschl_nachl_akt\n)"}, {"id": "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt", "sql": " __dbt__CTE__vg_wertungsgrundlteilung_akt as (\nselect *\nfrom DWHHD_DEV.da.vg_wertungsgrundlteilung_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_vertrag"}, "model.dbt_ods_delta.ad_mod_vertrag_coc": {"raw_sql": "{{ config( materialized='table' ) }}  \r\n\r\nwith source_data as (\r\n\r\nSELECT\r\n\tTIK_VERTRAG\r\nFROM\r\n\t{{ref('ad_mod_vertrag')}} \r\nWHERE\r\n\tTIK_VERTRAG NOT IN\r\n     (\r\n\tSELECT\r\n\t\tTIK_VERTRAG\r\n\tFROM\r\n\t\t{{ref('od_coc_auftrag_vertrag_akt')}}\r\n\tWHERE\r\n\t\tDT_COC_SPERRE <= current_timestamp\r\n\t\tOR AENDERUNGS_KZ = 'L'\r\n    )\r\n\r\n\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.ad_mod_vertrag", "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_mod_vertrag_coc"], "unique_id": "model.dbt_ods_delta.ad_mod_vertrag_coc", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_mod_vertrag_coc.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_mod_vertrag_coc.sql", "name": "ad_mod_vertrag_coc", "alias": "ad_mod_vertrag_coc", "checksum": {"name": "sha256", "checksum": "ff8d53a381b0ebc44a3a22c2058f125f3e343f65b2e3642c7d3b886a4c4f4789"}, "tags": [], "refs": [["ad_mod_vertrag"], ["od_coc_auftrag_vertrag_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_mod_vertrag_coc.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "  \n\nwith  __dbt__CTE__od_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_vertrag_akt\n),source_data as (\n\nSELECT\n\tTIK_VERTRAG\nFROM\n\tDWHHD_DEV.INM_DATASHARING.ad_mod_vertrag \nWHERE\n\tTIK_VERTRAG NOT IN\n     (\n\tSELECT\n\t\tTIK_VERTRAG\n\tFROM\n\t\t__dbt__CTE__od_coc_auftrag_vertrag_akt\n\tWHERE\n\t\tDT_COC_SPERRE <= current_timestamp\n\t\tOR AENDERUNGS_KZ = 'L'\n    )\n\n\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt", "sql": " __dbt__CTE__od_coc_auftrag_vertrag_akt as (\nselect *\nfrom DWHHD_DEV.da.od_coc_auftrag_vertrag_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_mod_vertrag_coc"}, "model.dbt_ods_delta.ad_verarb_ods": {"raw_sql": "{{ config( materialized='incremental'  ) }}\r\n\r\nwith source_data as (\r\n\r\nSELECT da.seq_ods.nextval AS ods_lauf_id, CURRENT_TIMESTAMP AS startzeit, NULL AS endezeit, CURRENT_TIMESTAMP AS lauf_dat, 'running' as status FROM DUAL\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "ad_verarb_ods"], "unique_id": "model.dbt_ods_delta.ad_verarb_ods", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\ad_verarb_ods.sql", "original_file_path": "models\\ods_delta_tabellen\\ad_verarb_ods.sql", "name": "ad_verarb_ods", "alias": "ad_verarb_ods", "checksum": {"name": "sha256", "checksum": "f46e11406cee14aee2ea7eef3fbabbe01de1048a529f3be25abd5cffd1fc779e"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\ad_verarb_ods.sql", "deferred": false, "unrendered_config": {"materialized": "incremental", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith source_data as (\n\nSELECT da.seq_ods.nextval AS ods_lauf_id, CURRENT_TIMESTAMP AS startzeit, NULL AS endezeit, CURRENT_TIMESTAMP AS lauf_dat, 'running' as status FROM DUAL\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DWHHD_DEV.INM_DATASHARING.ad_verarb_ods"}, "model.dbt_ods_delta.filter_vertrag_crm": {"raw_sql": "{{ config( materialized='table'  ) }}\r\n\r\nwith source_data as (\r\n\r\n SELECT vk.TIK_VERTRAG\r\n  FROM {{ref('od_vertragskontext_akt')}} VK\r\n  WHERE VK.BESTANDSSCHLUESSEL NOT IN ('22','25')\r\n  AND ( VK.BESTANDSSCHLUESSEL NOT IN ('44')\r\n  OR VK.BESTANDSFUEHRUNG           ='23' )\r\n  AND ( VK.VERTRAGTYP             <> '18'\r\n  OR VK.VERTRAGTYP                IS NULL\r\n  OR vk.BESTANDSFUEHRUNG          <> '28'\r\n  OR vk.BESTANDSFUEHRUNG          IS NULL )\r\n  AND ( VK.VERTRAGTYP NOT         IN ('18','20')\r\n  OR VK.VERTRAGTYP                IS NULL\r\n  OR vk.BESTANDSFUEHRUNG          <> '29'\r\n  OR vk.BESTANDSFUEHRUNG          IS NULL )\r\n  AND ( VK.STATUS NOT             IN ('ABG','ABGNG','ANGEB','ANGEBO','ANTR','KB','RUH','STOR')\r\n  OR VK.STATUS                    IS NULL\r\n  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\r\n  OR VK.BESTANDSSCHLUESSEL        <> '80' )\r\n  AND ( VK.STATUS NOT             IN ('ABG','ABGNG','ANGEB','ANGEBO','ANTR','KB','RUH','STOR')\r\n  OR VK.STATUS                    IS NULL\r\n  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\r\n  OR VK.BESTANDSSCHLUESSEL         = '80' )\r\n  AND VK.VERTRAGOB                <>'000000000'\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.od_vertragskontext_akt"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "filter_vertrag_crm"], "unique_id": "model.dbt_ods_delta.filter_vertrag_crm", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\filter_vertrag_crm.sql", "original_file_path": "models\\ods_delta_tabellen\\filter_vertrag_crm.sql", "name": "filter_vertrag_crm", "alias": "filter_vertrag_crm", "checksum": {"name": "sha256", "checksum": "21ba64c4ab04abe6a25f4fc1424ad6a3cc58b3995b3c41899579f46bdc121f93"}, "tags": [], "refs": [["od_vertragskontext_akt"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\filter_vertrag_crm.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING"}, "compiled_sql": "\n\nwith  __dbt__CTE__od_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertragskontext_akt\n),source_data as (\n\n SELECT vk.TIK_VERTRAG\n  FROM __dbt__CTE__od_vertragskontext_akt VK\n  WHERE VK.BESTANDSSCHLUESSEL NOT IN ('22','25')\n  AND ( VK.BESTANDSSCHLUESSEL NOT IN ('44')\n  OR VK.BESTANDSFUEHRUNG           ='23' )\n  AND ( VK.VERTRAGTYP             <> '18'\n  OR VK.VERTRAGTYP                IS NULL\n  OR vk.BESTANDSFUEHRUNG          <> '28'\n  OR vk.BESTANDSFUEHRUNG          IS NULL )\n  AND ( VK.VERTRAGTYP NOT         IN ('18','20')\n  OR VK.VERTRAGTYP                IS NULL\n  OR vk.BESTANDSFUEHRUNG          <> '29'\n  OR vk.BESTANDSFUEHRUNG          IS NULL )\n  AND ( VK.STATUS NOT             IN ('ABG','ABGNG','ANGEB','ANGEBO','ANTR','KB','RUH','STOR')\n  OR VK.STATUS                    IS NULL\n  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\n  OR VK.BESTANDSSCHLUESSEL        <> '80' )\n  AND ( VK.STATUS NOT             IN ('ABG','ABGNG','ANGEB','ANGEBO','ANTR','KB','RUH','STOR')\n  OR VK.STATUS                    IS NULL\n  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\n  OR VK.BESTANDSSCHLUESSEL         = '80' )\n  AND VK.VERTRAGOB                <>'000000000'\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.dbt_ods_delta.od_vertragskontext_akt", "sql": " __dbt__CTE__od_vertragskontext_akt as (\nselect *\nfrom DWHHD_DEV.da.od_vertragskontext_akt\n)"}], "relation_name": "DWHHD_DEV.INM_DATASHARING.filter_vertrag_crm"}, "model.dbt_ods_delta.s0_vertrag": {"raw_sql": "{{ config( materialized='table',\r\n           post_hook = \"UPDATE INM_DATASHARING.AD_VERARB_ODS SET endezeit = CURRENT_TIMESTAMP, STATUS = 'done' WHERE ODS_LAUF_ID  = (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)\" ) }}  \r\n\r\nwith source_data as (\r\n\r\n SELECT\r\n    (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)                                 AS LOAD_NR,\r\n    VK.TIK_VERTRAG                        AS VERTRAG_ID,\r\n    VK.VERTRAGTYP_ID                      AS VERTRAGSART_ID,\r\n    VK.PRODUKTPARTNER_ID                  AS PRODUKTPARTNER_ID,\r\n    cast(NVL(\r\n        (\r\n            CASE\r\n                WHEN VSV.STATUSVERTRAG IS NOT NULL\r\n                     AND CVS.TIK_VERTRAG IS NULL THEN\r\n                    'M||ZUSTAND||' || VSV.STATUSVERTRAG\r\n                ELSE\r\n                    NULL\r\n            END\r\n        ),\r\n        (\r\n            CASE\r\n                WHEN VK.STATUS = 'ABGNG'     THEN\r\n                    'M||ZUSTAND||abgegangen'\r\n                WHEN VK.STATUS = 'KB'        THEN\r\n                    'M||ZUSTAND||keine Bear'\r\n                WHEN VK.STATUS = 'RUH'       THEN\r\n                    'M||ZUSTAND||ruhend'\r\n                WHEN VK.STATUS = 'STOR'      THEN\r\n                    'M||ZUSTAND||storniert'\r\n                WHEN VK.STATUS = 'ABG'       THEN\r\n                    'M||ZUSTAND||abgelehnt'\r\n                WHEN VK.STATUS = 'AKT'       THEN\r\n                    'M||ZUSTAND||ausgefert.'\r\n                WHEN VK.STATUS = 'ANGEB'     THEN\r\n                    'M||ZUSTAND||angebahnt'\r\n                WHEN VK.STATUS = 'ANGEBO'    THEN\r\n                    'M||ZUSTAND||angeboten'\r\n                WHEN VK.STATUS = 'ANTR'      THEN\r\n                    'M||ZUSTAND||beantragt'\r\n                WHEN VK.STATUS = 'BEIFR'     THEN\r\n                    'M||ZUSTAND||beitragsfrei'\r\n                WHEN VK.STATUS = 'BULEIS'    THEN\r\n                    'M||ZUSTAND||BU-Leistungsfall'\r\n                WHEN VK.STATUS = 'LP'        THEN\r\n                    'M||ZUSTAND||leistungspflichtig'\r\n                ELSE\r\n                    NULL\r\n            END\r\n        )\r\n    )  as varchar(255) )                                   AS STATUS_ID,\r\n    COALESCE(\r\n        VSV.SPARTE_REPORTING,\r\n        VK.SPARTE_ID\r\n    )                                     AS SPARTE_ID,\r\n    (\r\n        CASE\r\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\r\n                VK.EXTERNEROB\r\n            ELSE\r\n                SOR.EXTERNEGRAUEOBS(\r\n                    VK.VERTRAGOB,\r\n                    'V'\r\n                )\r\n        END\r\n    )                                     AS OB_GRAU,\r\n    EXV2.OB                               AS VSNR_EXTERN,\r\n    (\r\n        CASE\r\n            WHEN ( VSV.VERTRAGSTDOB IS NOT NULL\r\n                   AND VSV.VERTRAGSTDOB NOT LIKE '%||%' ) THEN\r\n                SOR.EXTERNEGRAUEOBS(\r\n                    VSV.VERTRAGSTDOB,\r\n                    'V'\r\n                )\r\n            WHEN IR5.OB IS NOT NULL THEN\r\n                SOR.EXTERNEGRAUEOBS(\r\n                    LTRIM(\r\n                        IR5.OB,\r\n                        '0'\r\n                    ),\r\n                    'V'\r\n                )  --ir5.ob ohne f\u00fchrende Nullen\r\n            ELSE\r\n                NULL\r\n        END\r\n    )                                     AS POLICENNR,\r\n    (\r\n        CASE\r\n            WHEN VSVS.RAHMENVERTRAGNR_LEBEN IS NULL THEN\r\n                VSVS.RAHMENVERTRAGNRREF\r\n            ELSE\r\n                VSVS.RAHMENVERTRAGNR_LEBEN\r\n        END\r\n    )                                     AS SAMMELNR_RVNR,\r\n    cast(null AS varchar(255))            AS RAHMENVERTRAG_NAME,\r\n    IROB.OB                               AS BUENDELNR,\r\n    NVL(\r\n        VSV.BEGINNVERTRAG,\r\n        VK.VERTRAGSBEGINN\r\n    )                                     AS BEGINN,\r\n    CASE\r\n        WHEN VSV.VERTRAGSTDOB LIKE '%||TVP' THEN\r\n            NULL\r\n        ELSE\r\n            NVL(\r\n                VSV.ENDEVERTRAG,\r\n                VK.VERTRAGSABLAUF\r\n            )\r\n    END                                   AS ABLAUF,\r\n    VSB.NETTOJAHRESBEITRAG                AS JAHRESNETTOBEITRAG,\r\n    VSB.BRUTTOJAHRESBEITRAG               AS JAHRESBRUTTOBEITRAG,\r\n    VSB.BRUTTOBEITRAGZAHLWEISE            AS BRUTTOBEITRAG_GEM_ZW,\r\n    CASE\r\n        WHEN VSVS.ZAHLWEISE IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||ZAHLWEISE||' || VSVS.ZAHLWEISE\r\n    END                                   AS ZAHLWEISE_ID,\r\n    CASE\r\n        WHEN VSVS.ZAHLUNGSART IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||ZAHLWEG||' || VSVS.ZAHLUNGSART\r\n    END                                   AS ZAHLWEG_ID,\r\n    NULL                                  AS MAHNSTAND_ID,\r\n    DECODE(\r\n        WGT.TIK_VERTRAG,\r\n        NULL,\r\n        '0',\r\n        '1'\r\n    )                                     AS WGT,\r\n    VK.SEGMENT                            AS VERKAUFSPRODUKT,\r\n    CASE\r\n        WHEN VSV.EXTERNERPRODUKTNAME IS NOT NULL\r\n             OR VSV.PRODUKTNAME IS NOT NULL THEN\r\n            NVL(\r\n                VSV.EXTERNERPRODUKTNAME,\r\n                VSV.PRODUKTNAME\r\n            )\r\n        ELSE\r\n            VK.PRODUKT\r\n    END                                   AS PRODUKT,\r\n    CASE\r\n        WHEN VSV.AV_SCHICHT IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            CONCAT(\r\n                'S||AV_SCHICHT_E4||',\r\n                VSV.AV_SCHICHT\r\n            )\r\n    END                                   AS SCHICHT_ID,\r\n    CASE\r\n        WHEN VSV.BAV_FINANZIERUNG IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            CONCAT(\r\n                'S||BAV_DURCHFUEHRUNG||',\r\n                VSV.BAV_DURCHFUEHRUNG\r\n            )\r\n    END                                   AS DURCHFUEHRUNGSWEG_ID,\r\n    CASE\r\n        WHEN VSV.BAV_FINANZIERUNG = 'DVAN' THEN\r\n            'S||BAV_FINANZIERUNG||AN'\r\n        WHEN VSV.BAV_FINANZIERUNG IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            CONCAT(\r\n                'S||BAV_FINANZIERUNG||',\r\n                VSV.BAV_FINANZIERUNG\r\n            )\r\n    END                                   AS FINANZIERUNGSBEDARF_ID,\r\n    NVL(\r\n        VSV.AENDERUNGSDATUM,\r\n        NVL(\r\n            VSVS.ERSTELLTAM,\r\n            VK.BEARBEITUNGSDATUM\r\n        )\r\n    )                                     AS LETZTE_AENDERUNG,\r\n    P.DWH_PARTNER_ID                      AS BEARBEITUNG_PARTNER_ID,\r\n    NULL                                  AS MANDANTNR,\r\n    NULL                                  AS HV_ORGANR,\r\n    1                                     AS IS_ACTIVE,\r\n    VK.TIK_VERTRAG                        AS ODS_PK1,\r\n    IR.OB                                 AS OB_BLAU,\r\n    CASE\r\n        WHEN IR2.OB IS NOT NULL THEN\r\n            SUBSTR(\r\n                IR2.OB,\r\n                0,\r\n                8\r\n            )\r\n            || '-'\r\n            || SUBSTR(\r\n                IR2.OB,\r\n                9,\r\n                5\r\n            )\r\n        ELSE\r\n            NULL\r\n    END                                   AS OB_GRUEN,\r\n    CASE\r\n        WHEN VSV.VERTRAGSART_LEBEN IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||VERTRAGSART_LEBEN||' || VSV.VERTRAGSART_LEBEN\r\n    END                                   AS VERTRAGSART_LEBEN_ID,\r\n    CASE\r\n        WHEN SUBSTR(\r\n                VC3.KURZBEZEICHNUNG,\r\n                1,\r\n                1\r\n            ) = 'H'\r\n             AND IR2.OB IS NOT NULL THEN\r\n            SUBSTR(\r\n                IR2.OB,\r\n                0,\r\n                8\r\n            )\r\n            || '-'\r\n            || SUBSTR(\r\n                IR2.OB,\r\n                9,\r\n                5\r\n            ) --HDI\r\n            WHEN SUBSTR(\r\n                VC3.KURZBEZEICHNUNG,\r\n                1,\r\n                1\r\n            ) = 'G'\r\n             AND IR.OB IS NOT NULL THEN\r\n            IR.OB --GERL\r\n            WHEN SUBSTR(\r\n            VC3.KURZBEZEICHNUNG,\r\n            1,\r\n            1\r\n        ) = 'B' THEN\r\n            (\r\n                CASE\r\n                    WHEN VK.EXTERNEROB IS NOT NULL THEN\r\n                        VK.EXTERNEROB\r\n                    ELSE\r\n                        sor.EXTERNEGRAUEOBS(\r\n                            VK.VERTRAGOB,\r\n                            'V'\r\n                        )\r\n                END\r\n            ) --BST oder BIN\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG IN ( 14,\r\n                                              81 )\r\n             AND EXV.OB IS NOT NULL THEN\r\n            EXV.OB --ROL und Koop Rest\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 21\r\n             AND IR.OB IS NOT NULL THEN\r\n            IR.OB --HLV\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 22\r\n             AND IR.OB IS NOT NULL THEN\r\n            IR.OB --HPK\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 23\r\n             AND IR.OB IS NOT NULL THEN\r\n            IR.OB --HPF\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 31\r\n             AND IR.OB IS NOT NULL THEN\r\n            IR.OB --Ampega\r\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 11\r\n             AND IR2.OB IS NOT NULL THEN\r\n            SUBSTR(\r\n                IR2.OB,\r\n                0,\r\n                8\r\n            )\r\n            || '-'\r\n            || SUBSTR(\r\n                IR2.OB,\r\n                9,\r\n                5\r\n            ) --Global SE\r\n            ELSE\r\n            SOR.EXTERNEGRAUEOBS(\r\n                VK.VERTRAGOB,\r\n                'V'\r\n            )\r\n    END                                   AS VSNR,\r\n    NULL                                  AS SERVICE_TARIF_ID,\r\n    VSV.STORNODATUMZEIT                   AS STORNODATUM,\r\n    CASE\r\n        WHEN VSV.STORNOGRUND IS NOT NULL\r\n             AND VSV.STORNOGRUND NOT IN ( 'Kein Stornogrund',\r\n                                          '0' )\r\n             AND CVS.TIK_VERTRAG IS NULL THEN\r\n            'M||STORNOGRUND||' || VSV.STORNOGRUND\r\n        WHEN CVS.TIK_VERTRAG IS NOT NULL\r\n             AND CVS.STORNOGRUND IS NOT NULL THEN\r\n            'M||STORNOGRUND||' || CVS.STORNOGRUND\r\n        WHEN VSV.STORNODATUMZEIT IS NOT NULL\r\n             AND VSV.STATUSVERTRAG = 'storniert'\r\n             AND VSV.STORNOGRUND IS NULL\r\n             AND CVS.STORNOGRUND IS NULL THEN\r\n            'M||STORNOGRUND||929MAN'\r\n        ELSE\r\n            NULL\r\n    END                                   AS STORNOGRUND_ID,\r\n    IR4.TIK_VERTRAG                       AS VORVERTRAG_ID,\r\n    NULL                                  AS URSACHE_VORVERTRAG_ID,\r\n    NULL                                  AS FOLGEVERTRAG_ID,\r\n    NULL                                  AS URSACHE_FOLGEVERTRAG_ID,\r\n    TO_NUMBER(\r\n        VSV.HATSELFSERVICE\r\n    )                                     AS SELFSERVICE_TARIF,\r\n  --vsv.ANTRAGSDATUM AS ANTRAGSDATUM, --Alte Logik bis 20.08.2019\r\n      CASE\r\n        WHEN MONTHS_BETWEEN(\r\n            VSV.ANTRAGSDATUM,\r\n            NVL(\r\n                VSV.BEGINNVERTRAG,\r\n                VK.VERTRAGSBEGINN\r\n            )\r\n        ) > 6\r\n             OR VSV.ANTRAGSDATUM IS NULL THEN\r\n            NVL(\r\n                VSV.BEGINNVERTRAG,\r\n                VK.VERTRAGSBEGINN\r\n            )\r\n        ELSE\r\n            VSV.ANTRAGSDATUM\r\n    END                                   AS ANTRAGSDATUM,\r\n    CASE\r\n        WHEN VSV.ZUGANGSART IS NOT NULL THEN\r\n            'M||ZUGANGSART||' || VSV.ZUGANGSART\r\n        ELSE\r\n            NULL\r\n    END                                   AS ZUGANGSART_ID,\r\n    VSV.MATERIELLERBEGINN,\r\n    VSV.GENERATIONENDATUM,\r\n    CASE\r\n        WHEN VSV.TARIFVARIANTE IS NOT NULL THEN\r\n            'M||TARIFVARIANTE||' || VSV.TARIFVARIANTE\r\n        ELSE\r\n            NULL\r\n    END                                   AS TARIFVARIANTE_ID,\r\n    VSV.VERSICHERUNGSSUMME,\r\n    CASE\r\n        WHEN VSV.SUMMENART IS NOT NULL\r\n             AND VSV.SUMMENART <> 'Unspezifizierte Vers'\r\n             AND VSV.SUMMENART <> 'Unspezifizierte Versicherungssumme' THEN\r\n            'M||ART_SUMME||' || VSV.SUMMENART\r\n        ELSE\r\n            NULL\r\n    END                                   AS DECKUNGSSUMME_ART_ID,\r\n    CASE\r\n        WHEN VSV.UNTERVERSICHERUNGSVERZICHT IS NOT NULL THEN\r\n            'M||UNTERVERS_VERZICHT||' || VSV.UNTERVERSICHERUNGSVERZICHT\r\n        ELSE\r\n            NULL\r\n    END                                   AS UV_VERZICHT_ID,\r\n    CASE\r\n        WHEN VSV.SANIERUNGSKENNZEICHEN IS NOT NULL THEN\r\n            'M||SANIERUNGSKENNZEICHEN||' || VSV.SANIERUNGSKENNZEICHEN\r\n        ELSE\r\n            NULL\r\n    END                                   AS SANIERUNG_KZ_ID,\r\n    NULL                                  AS PREISFINDUNGSART_ID,\r\n    VSVS.ANZVERTRAGBUENDELNACHLASS        AS ANZ_VERTRAEGE_BUENDEL_NL,\r\n    VSV.KEINERHOEHUNGBUENDELNACHLSSIND    AS KEINE_ERHOEHUNG_BZ,\r\n    VSV.KEINBUENDELNACHLASSIND            AS KEIN_BUENDELNACHLASS,\r\n    VSV.KEINFAMILIENNACHLASSIND           AS KEIN_FAMILIEN_NACHLASS,\r\n    VSV.ANPASSUNGSSATZ                    AS ANPASSUNGSSATZ,\r\n    VSV.ABWEICHANPASSUNGSSATZ             AS ABW_ANPASSUNGSSATZ,\r\n    NULL                                  AS STAT_VERSICHERUNGSSUMME,\r\n    VSV.MINDESTBEITRAG                    AS MINDESTBEITRAG,\r\n    VSV.ISTPFLICHTVERSICHERUNGIND         AS PFLICHTVERSICHERUNG,\r\n    VSB.STEUERNABGABENKUMUL               AS STEUERN_ABGABEN_KUMUL,\r\n    PAKQUISE.DWH_PARTNER_ID               AS VERTRIEB_PARTNER_ID,\r\n    PSCHADEN.DWH_PARTNER_ID               AS SCHADEN_PARTNER_ID,\r\n    PINKASSO.DWH_PARTNER_ID               AS INKASSO_PARTNER_ID,\r\n    NULL                                  AS VOLLMACHSTUFE_ID,\r\n    VSV.GENERATIONENERMITTLUNGSDATUM      AS GEN_ERMITTEL_DATUM,\r\n    NULL                                  AS VERTRIEBSWEG_ID,\r\n    VV.VERTRIEBSZUGANGSWEG_ID             AS VERTRIEBSZUGANGSWEG_ID,\r\n    NULL                                  AS ANPASSUNGSSATZ_KUMULIERT,\r\n    VSB.NETTOBEITRAGZAHLWEISE             AS NETTOBEITRAG_GEM_ZW,\r\n    VSB.TARIFBEITRAG                      AS TARIFBEITRAG_VERS_SUMME,\r\n    VSB.JAHRESSUMMEZUSCHLAGNACHLASS       AS ZUNA_JAHRESSUMME,\r\n    NULL                                  AS MINDESTBETRAG_MASCH,\r\n    NULL                                  AS STEUERLAND_ID,\r\n    VSV.ISTSTEUERINLAENDERIND             AS STEUERPFLICHTIGES_LAND,\r\n    CASE\r\n        WHEN VSV.STEUERBEFREIUNG IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||BEFREIUNG_UMFANG||' || VSV.STEUERBEFREIUNG\r\n    END                                   AS STEUERBEFREIUNG_ID,\r\n    VV.VAMOSORGANR                        AS ORGANR,\r\n    NULL                                  AS LETZTES_MAHNDATUM,\r\n    CASE\r\n        WHEN VSV.HATDRITTRECHTIND IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            CONCAT(\r\n                'S||KENNZEICHEN||',\r\n                VSV.HATDRITTRECHTIND\r\n            )\r\n    END                                   AS DRITTRECHT_ID,\r\n    VSV.VERSICHERUNGSSUMME                AS VERS_SUMME_GES,\r\n    STW.ABLGEWINN                         AS ABLAUF_GEWINN,\r\n    STW.ABLSUMME                          AS ABLAUF_SUMME,\r\n    STW.ERLGEWINN                         AS ERL_GEWINN,\r\n    STW.ERLSUMME                          AS ERL_SUMME,\r\n    STW.RUECKGEWINN                       AS RUECK_GEWINN,\r\n    STW.RUECKKWERT                        AS RUECKK_WERT,\r\n    STW.DT_STICHTAG                       AS STICHTAG,\r\n    VSV.DYNAMIK_ERHOEHUNG                 AS DYNAMIK_ERHOEHUNG,\r\n    CASE\r\n        WHEN VSV.DYNAMIKART IS NOT NULL THEN\r\n            'S||DYNAMIKART_LV||' || DYNAMIKART\r\n        ELSE\r\n            NULL\r\n    END                                   AS DYNAMIKART_ID,\r\n    VSV.DYNAMIKSATZ                       AS DYNAMIKSATZ,\r\n    VSV.GARANTIESUMME                     AS GARANTIESUMME,\r\n    CASE\r\n        WHEN VSV.VERSORGUNGSSCHICHT IS NOT NULL THEN\r\n            'S||VERSORGUNGSSCHICHT||' || VERSORGUNGSSCHICHT\r\n        ELSE\r\n            NULL\r\n    END                                   AS VERSORGUNGSSCHICHT_ID,\r\n    CASE\r\n        WHEN VSV.HATBESTANDSMANAGMENTIND = 'J'     THEN\r\n            1\r\n        WHEN VSV.HATBESTANDSMANAGMENTIND = 'N '    THEN\r\n            0\r\n        ELSE\r\n            NULL\r\n    END                                   AS BESTANDSMANAGEMENT,\r\n    NVL(\r\n        BEZ.BEZUGSRECHT,\r\n        0\r\n    )                                     AS BEZUGSRECHT,\r\n    VSV.WIRKSAMKEITSDATUM                 AS WIRKSAMKEITSBEGINN,\r\n    VK.BESTANDSFUEHRUNG_ID                AS BESTANDSFUEHRUNG_ID,\r\n    VK.INKASSOART_ID                      AS INKASSOART_ID,\r\n    VK.BESTANDSSCHLUESSEL                 AS BESTANDSSCHLUESSEL,\r\n    VSV.VU_NUMMER                         AS VU_NUMMER,\r\n    CASE\r\n        WHEN VSV.VERTRAGSFORM IS NOT NULL THEN\r\n            CONCAT(\r\n                'M||VERTRAGSFORM||',\r\n                VSV.VERTRAGSFORM\r\n            )\r\n        ELSE\r\n            NULL\r\n    END                                   AS VERTRAGSFORM_ID,\r\n    CASE\r\n        WHEN VSV.AENDERUNGSGRUND IS NOT NULL THEN\r\n            CONCAT(\r\n                'M||AENDERUNGSGRUND||',\r\n                VSV.AENDERUNGSGRUND\r\n            )\r\n        ELSE\r\n            NULL\r\n    END                                   AS AENDERUNGSGRUND_ID,\r\n    NULL                                  AS IS_POLICE\r\nFROM\r\n         da.OD_VERTRAGSKONTEXT_AKT VK\r\n    INNER JOIN {{ref('ad_mod_vertrag_coc')}}            AD ON VK.TIK_VERTRAG = AD.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_VERTRAG_AKT                   VSV ON VK.TIK_VERTRAG = VSV.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_VERTRAGSTANDARD_AKT VSVS ON VSV.TIK_POLICE = VSVS.TIK_POLICE\r\n    LEFT OUTER JOIN da.OD_EXTERNEREFERENZ_AKT ER ON VK.TIK_VERTRAG = ER.TIK_VERTRAG\r\n                                              AND ER.TYP IN ( 'ATR VNr',\r\n                                                              'DKV VNr',\r\n                                                              'Roland Vers. Nr.',\r\n                                                              'IDEAL-Vers-Nr.' )\r\n    LEFT OUTER JOIN da.OD_BEITRAG_AKT VSB ON VSV.VERTRAGSOB = VSB.VERTRAGSOB\r\n                                          AND VSB.VERTRAGSTEILBUENDELID IS NULL\r\n                                          AND VSB.VERTRAGSTEILID = '0'\r\n    LEFT OUTER JOIN (\r\n        SELECT\r\n            TIK_VERTRAG\r\n        FROM\r\n            da.OD_WERTUNGSGRUNDLTEILUNG_AKT \r\n        GROUP BY\r\n            TIK_VERTRAG\r\n    )                                WGT ON VK.TIK_VERTRAG = WGT.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_PARTNER_AKT P ON VK.BEARBEITUNG = P.OB\r\n                                     AND P.PARTNERART = 'OE'\r\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT IR ON VK.TIK_VERTRAG = IR.TIK_VERTRAG\r\n                                              AND IR.TYP = 'GEP XV'\r\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT              IR2 ON VK.TIK_VERTRAG = IR2.TIK_VERTRAG\r\n                                               AND IR2.TYP = 'HDI V'\r\n    LEFT OUTER JOIN da.OD_CODE_AKT VC ON VK.ZWEIG_ID = VC.DWH_CODE_ID\r\n    LEFT OUTER JOIN da.OD_CODE_AKT VC2 ON VC2.SCHEMA = 'VERTRAGSARTLEBEN'\r\n                                      AND VC2.SCHLUESSEL = VSV.VERTRAGSART_LEBEN\r\n    LEFT JOIN da.OD_CODE_AKT                        VC3 ON VK.BESTANDSFUEHRUNG_ID = VC3.DWH_CODE_ID\r\n                                AND VC3.SCHEMA = 'BESTANDSFUEHRUNG'\r\n    LEFT JOIN da.OD_EXTERNEREFERENZ_AKT EXV ON VK.TIK_VERTRAG = EXV.TIK_VERTRAG\r\n                                         AND EXV.TYP IN ( 'ROL',\r\n                                                          'IDE',\r\n                                                          'DKV',\r\n                                                          'ATR' )\r\n    LEFT JOIN da.OD_WERTUNGSGRUNDLTEILUNG_AKT     WGT2 ON VK.TIK_VERTRAG = WGT2.TIK_VERTRAG\r\n                                                    AND VK.VERMITTLERVEREINBARUNGOB = WGT2.VERMITTLERVEREINBARUNGOB\r\n    LEFT JOIN da.OD_CODE_AKT                        VC4 ON VC4.SCHEMA = 'STORNOGRUND'\r\n                                AND VC4.SCHLUESSEL = VSV.STORNOGRUND\r\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR3 ON VSV.TIK_POLICE = IR3.TIK_VERTRAG\r\n                                         AND IR3.TYP = 'VVN'\r\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR4 ON IR3.OB = IR4.OB\r\n                                         AND IR4.TYP = 'HDI V'\r\n    INNER JOIN {{ref('filter_vertrag_crm')}} FILT ON VK.TIK_VERTRAG = FILT.TIK_VERTRAG\r\n    LEFT JOIN (\r\n        SELECT\r\n            EXV.OB,\r\n            EXV.TIK_VERTRAG\r\n        FROM\r\n            (\r\n                SELECT\r\n                    OB,\r\n                    TIK_VERTRAG,\r\n                    GUELTIGVON,\r\n                    ROW_NUMBER()\r\n                    OVER(PARTITION BY TIK_VERTRAG\r\n                         ORDER BY GUELTIGVON DESC\r\n                    ) AS SORTER\r\n                FROM\r\n                    da.OD_EXTERNEREFERENZ_AKT EXV\r\n                WHERE\r\n                    TYP IN ( 'ROL',\r\n                             'IDE',\r\n                             'DKV',\r\n                             'ATR' )\r\n            ) EXV\r\n        WHERE\r\n            EXV.SORTER = 1\r\n    )                                EXV2 ON EXV2.TIK_VERTRAG = VK.TIK_VERTRAG\r\n    LEFT JOIN {{ref('ad_chng_vertrag_status')}}      CVS ON CVS.TIK_VERTRAG = VK.TIK_VERTRAG\r\n    LEFT JOIN (\r\n        SELECT\r\n            OB,\r\n            TIK_VERTRAG,\r\n            ROW_NUMBER()\r\n            OVER(PARTITION BY OB\r\n                 ORDER BY GUELTIGVON DESC\r\n            ) AS SORTER\r\n        FROM\r\n            da.OD_INTERNEREFERENZ_AKT\r\n        WHERE\r\n            TYP = 'HDI B'\r\n    )                                IROB ON IROB.TIK_VERTRAG = VK.TIK_VERTRAG\r\n              AND IROB.SORTER = 1\r\n    LEFT JOIN da.OD_PARTNER_AKT PAKQUISE ON VK.AKQUISE = PAKQUISE.OB\r\n    LEFT JOIN da.OD_PARTNER_AKT                      PSCHADEN ON VK.SCHADEN = PSCHADEN.OB\r\n    LEFT JOIN da.OD_PARTNER_AKT                      PINKASSO ON VK.INKASSO = PINKASSO.OB\r\n    LEFT JOIN da.OD_VERMITTLERVEREINBARUNG_AKT VV ON VK.DWH_VERMVEREINBARUNG_ID = VV.DWH_VERMVEREINBARUNG_ID\r\n    LEFT OUTER JOIN (\r\n        SELECT\r\n            TIK_VERTRAG,\r\n            STW.ABLGEWINN,\r\n            STW.ABLSUMME,\r\n            STW.ERLGEWINN,\r\n            STW.ERLSUMME,\r\n            STW.RUECKGEWINN,\r\n            STW.RUECKKWERT,\r\n            MAX(STW.DT_STICHTAG) AS DT_STICHTAG\r\n        FROM\r\n            da.OD_LV_STICHTAGSWERTSATZ_AKT STW\r\n        GROUP BY\r\n            TIK_VERTRAG,\r\n            STW.ABLGEWINN,\r\n            STW.ABLSUMME,\r\n            STW.ERLGEWINN,\r\n            STW.ERLSUMME,\r\n            STW.RUECKGEWINN,\r\n            STW.RUECKKWERT\r\n    )                                STW ON VK.TIK_VERTRAG = STW.TIK_VERTRAG\r\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR5 ON VK.TIK_VERTRAG = IR5.TIK_VERTRAG\r\n                                         AND IR5.TYP = 'SAP'\r\n    LEFT OUTER JOIN (\r\n        SELECT\r\n            TIK_VERTRAG,\r\n            1 AS BEZUGSRECHT\r\n        FROM\r\n            da.OD_LV_BEZUGSRECHT_AKT \r\n        GROUP BY\r\n            TIK_VERTRAG\r\n    )                                BEZ ON VK.TIK_VERTRAG = BEZ.TIK_VERTRAG\r\nUNION ALL \r\nSELECT\r\n    (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)                             AS LOAD_NR,\r\n    VK.TIK_VERTRAG                    AS VERTRAG_ID,\r\n    VK.VERTRAGTYP_ID                  AS VERTRAGSART_ID,\r\n    VK.PRODUKTPARTNER_ID              AS PRODUKTPARTNER_ID,\r\n    cast( (\r\n        CASE\r\n            WHEN VK.STATUS = 'ABGNG'     THEN\r\n                'M||ZUSTAND||abgegangen'\r\n            WHEN VK.STATUS = 'KB'        THEN\r\n                'M||ZUSTAND||keine Bear'\r\n            WHEN VK.STATUS = 'RUH'       THEN\r\n                'M||ZUSTAND||ruhend'\r\n            WHEN VK.STATUS = 'STOR'      THEN\r\n                'M||ZUSTAND||storniert'\r\n            WHEN VK.STATUS = 'ABG'       THEN\r\n                'M||ZUSTAND||abgelehnt'\r\n            WHEN VK.STATUS = 'AKT'       THEN\r\n                'M||ZUSTAND||ausgefert.'\r\n            WHEN VK.STATUS = 'ANGEB'     THEN\r\n                'M||ZUSTAND||angebahnt'\r\n            WHEN VK.STATUS = 'ANGEBO'    THEN\r\n                'M||ZUSTAND||angeboten'\r\n            WHEN VK.STATUS = 'ANTR'      THEN\r\n                'M||ZUSTAND||beantragt'\r\n            WHEN VK.STATUS = 'BEIFR'     THEN\r\n                'M||ZUSTAND||beitragsfrei'\r\n            WHEN VK.STATUS = 'BULEIS'    THEN\r\n                'M||ZUSTAND||BU-Leistungsfall'\r\n            WHEN VK.STATUS = 'LP'        THEN\r\n                'M||ZUSTAND||leistungspflichtig'\r\n            ELSE\r\n                NULL\r\n        END\r\n    )   as varchar(255) )                                AS STATUS_ID,\r\n    VK.SPARTE_ID                      AS SPARTE_ID,\r\n    (\r\n        CASE\r\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\r\n                VK.EXTERNEROB\r\n            ELSE\r\n                sor.EXTERNEGRAUEOBS(\r\n                    VK.VERTRAGOB,\r\n                    'V'\r\n                )\r\n        END\r\n    )                                 AS OB_GRAU,\r\n    NULL                              AS VSNR_EXTERN,\r\n    NULL                              AS POLICENNR,\r\n    VSVS.RAHMENVERTRAGNRREF           AS SAMMELNR_RVNR,\r\n    NULL                              AS RAHMENVERTRAG_NAME,\r\n    NULL                              AS BUENDELNR,\r\n    VK.VERTRAGSBEGINN                 AS BEGINN,\r\n    VK.VERTRAGSABLAUF                 AS ABLAUF,\r\n    NULL                              AS JAHRESNETTOBEITRAG,\r\n    NULL                              AS JAHRESBRUTTOBEITRAG,\r\n    NULL                              AS BRUTTOBEITRAG_GEM_ZW,\r\n    CASE\r\n        WHEN VSVS.ZAHLWEISE IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||ZAHLWEISE||' || VSVS.ZAHLWEISE\r\n    END                               AS ZAHLWEISE_ID,\r\n    CASE\r\n        WHEN VSVS.ZAHLUNGSART IS NULL THEN\r\n            NULL\r\n        ELSE\r\n            'M||ZAHLWEG||' || VSVS.ZAHLUNGSART\r\n    END                               AS ZAHLWEG_ID,\r\n    NULL                              AS MAHNSTAND_ID,\r\n    DECODE(\r\n        WGT.TIK_VERTRAG,\r\n        NULL,\r\n        '0',\r\n        '1'\r\n    )                                 AS WGT,\r\n    VK.SEGMENT                        AS VERKAUFSPRODUKT,\r\n    VK.PRODUKT                        AS PRODUKT,\r\n    NULL                              AS SCHICHT_ID,\r\n    NULL                              AS DURCHFUEHRUNGSWEG_ID,\r\n    NULL                              AS FINANZIERUNGSBEDARF_ID,\r\n    NVL(\r\n        VSVS.ERSTELLTAM,\r\n        VK.BEARBEITUNGSDATUM\r\n    )                                 AS LETZTE_AENDERUNG,\r\n    P.DWH_PARTNER_ID                  AS BEARBEITUNG_PARTNER_ID,\r\n    NULL                              AS MANDANTNR,\r\n    NULL                              AS HV_ORGANR,\r\n    1                                 AS IS_ACTIVE,\r\n    VK.TIK_VERTRAG                    AS ODS_PK1,\r\n    IR.OB                             AS OB_BLAU,\r\n    NULL                              AS OB_GRUEN,\r\n    NULL                              AS VERTRAGSART_LEBEN_ID,\r\n    (\r\n        CASE\r\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\r\n                VK.EXTERNEROB\r\n            ELSE\r\n                sor.EXTERNEGRAUEOBS(\r\n                    VK.VERTRAGOB,\r\n                    'V'\r\n                )\r\n        END\r\n    )                                 AS VSNR,\r\n    NULL                              AS SERVICE_TARIF_ID,\r\n    NULL                              AS STORNODATUM,\r\n    NULL                              AS STORNOGRUND_ID,\r\n    IR4.TIK_VERTRAG                   AS VORVERTRAG_ID,\r\n    NULL                              AS URSACHE_VORVERTRAG_ID,\r\n    NULL                              AS FOLGEVERTRAG_ID,\r\n    NULL                              AS URSACHE_FOLGEVERTRAG_ID,\r\n    NULL                              AS SELFSERVICE_TARIF,\r\n    NULL                              AS ANTRAGSDATUM,\r\n    NULL                              AS ZUGANGSART_ID,\r\n    NULL                              AS MATERIELLERBEGINN,\r\n    NULL                              AS GENERATIONENDATUM,\r\n    NULL                              AS TARIFVARIANTE_ID,\r\n    NULL                              AS VERSICHERUNGSSUMME,\r\n    NULL                              AS DECKUNGSSUMME_ART_ID,\r\n    NULL                              AS UV_VERZICHT_ID,\r\n    NULL                              AS SANIERUNG_KZ_ID,\r\n    NULL                              AS PREISFINDUNGSART_ID,\r\n    VSVS.ANZVERTRAGBUENDELNACHLASS    AS ANZ_VERTRAEGE_BUENDEL_NL,\r\n    NULL                              AS KEINE_ERHOEHUNG_BZ,\r\n    NULL                              AS KEIN_BUENDELNACHLASS,\r\n    NULL                              AS KEIN_FAMILIEN_NACHLASS,\r\n    NULL                              AS ANPASSUNGSSATZ,\r\n    NULL                              AS ABW_ANPASSUNGSSATZ,\r\n    NULL                              AS STAT_VERSICHERUNGSSUMME,\r\n    NULL                              AS MINDESTBEITRAG,\r\n    NULL                              AS PFLICHTVERSICHERUNG,\r\n    NULL                              AS STEUERN_ABGABEN_KUMUL,\r\n    PAKQUISE.DWH_PARTNER_ID           AS VERTRIEB_PARTNER_ID,\r\n    PSCHADEN.DWH_PARTNER_ID           AS SCHADEN_PARTNER_ID,\r\n    PINKASSO.DWH_PARTNER_ID           AS INKASSO_PARTNER_ID,\r\n    NULL                              AS VOLLMACHSTUFE_ID,\r\n    NULL                              AS GEN_ERMITTEL_DATUM,\r\n    NULL                              AS VERTRIEBSWEG_ID,\r\n    VV.VERTRIEBSZUGANGSWEG_ID         AS VERTRIEBSZUGANGSWEG_ID,\r\n    NULL                              AS ANPASSUNGSSATZ_KUMULIERT,\r\n    NULL                              AS NETTOBEITRAG_GEM_ZW,\r\n    NULL                              AS TARIFBEITRAG_VERS_SUMME,\r\n    NULL                              AS ZUNA_JAHRESSUMME,\r\n    NULL                              AS MINDESTBETRAG_MASCH,\r\n    NULL                              AS STEUERLAND_ID,\r\n    NULL                              AS STEUERPFLICHTIGES_LAND,\r\n    NULL                              AS STEUERBEFREIUNG_ID,\r\n    VV.VAMOSORGANR                    AS ORGANR,\r\n    NULL                              AS LETZTES_MAHNDATUM,\r\n    NULL                              AS DRITTRECHT_ID,\r\n    NULL                              AS VERS_SUMME_GES,\r\n    NULL                              AS ABLAUF_GEWINN,\r\n    NULL                              AS ABLAUF_SUMME,\r\n    NULL                              AS ERL_GEWINN,\r\n    NULL                              AS ERL_SUMME,\r\n    NULL                              AS RUECK_GEWINN,\r\n    NULL                              AS RUECKK_WERT,\r\n    NULL                              AS STICHTAG,\r\n    NULL                              AS DYNAMIK_ERHOEHUNG,\r\n    NULL                              AS DYNAMIKART_ID,\r\n    NULL                              AS DYNAMIKSATZ,\r\n    NULL                              AS GARANTIESUMME,\r\n    NULL                              AS VERSORGUNGSSCHICHT_ID,\r\n    NULL                              AS BESTANDSMANAGEMENT,\r\n    NULL                              AS BEZUGSRECHT,\r\n    NULL                              AS WIRKSAMKEITSBEGINN,\r\n    VK.BESTANDSFUEHRUNG_ID            AS BESTANDSFUEHRUNG_ID,\r\n    VK.INKASSOART_ID                  AS INKASSOART_ID,\r\n    VK.BESTANDSSCHLUESSEL             AS BESTANDSSCHLUESSEL,\r\n    NULL                              AS VU_NUMMER,\r\n    NULL                              AS VERTRAGSFORM_ID,\r\n    NULL                              AS AENDERUNGSGRUND_ID,\r\n    1                                 AS IS_POLICE\r\nFROM\r\n         da.OD_VERTRAGSKONTEXT_AKT VK\r\n    INNER JOIN {{ref('ad_mod_vertrag_coc')}}         AD ON VK.TIK_VERTRAG = AD.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_VERTRAGSTANDARD_AKT        VSVS ON VK.TIK_VERTRAG = VSVS.TIK_POLICE\r\n    LEFT OUTER JOIN (\r\n        SELECT\r\n            TIK_VERTRAG\r\n        FROM\r\n            da.OD_WERTUNGSGRUNDLTEILUNG_AKT \r\n        GROUP BY\r\n            TIK_VERTRAG\r\n    )                             WGT ON VK.TIK_VERTRAG = WGT.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_PARTNER_AKT                   P ON VK.BEARBEITUNG = P.OB\r\n                                     AND P.PARTNERART = 'OE'\r\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT           IR ON VK.TIK_VERTRAG = IR.TIK_VERTRAG\r\n                                              AND IR.TYP = 'GEP XV'\r\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT           IR3 ON VK.TIK_VERTRAG = IR3.TIK_VERTRAG\r\n                                         AND IR3.TYP = 'VVN'\r\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT           IR4 ON IR3.OB = IR4.OB\r\n                                         AND IR4.TYP = 'HDI V'\r\n    LEFT JOIN da.OD_PARTNER_AKT                   PAKQUISE ON VK.AKQUISE = PAKQUISE.OB\r\n    LEFT JOIN da.OD_PARTNER_AKT                   PSCHADEN ON VK.SCHADEN = PSCHADEN.OB\r\n    LEFT JOIN da.OD_PARTNER_AKT                   PINKASSO ON VK.INKASSO = PINKASSO.OB\r\n    LEFT JOIN da.od_vermittlervereinbarung_akt    VV ON VK.DWH_VERMVEREINBARUNG_ID = VV.DWH_VERMVEREINBARUNG_ID\r\n    LEFT OUTER JOIN da.od_vertrag_akt                VSV ON VSV.TIK_VERTRAG = VK.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.od_vertrag_akt                VSV2 ON VSV2.TIK_POLICE = VK.TIK_VERTRAG\r\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT            IR5 ON IR5.TYP = 'SAP'\r\n                                               AND LTRIM(\r\n        VK.VERTRAGOB,\r\n        '0'\r\n    ) = LTRIM(\r\n        IR5.OB,\r\n        '0'\r\n    )\r\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT            IR6 ON IR6.TYP = 'SAP'\r\n                                               AND IR6.TIK_VERTRAG = VK.TIK_VERTRAG\r\nWHERE\r\n        VK.VERTRAGTYP = 18\r\n    AND VK.BESTANDSFUEHRUNG = '28'\r\n    AND IR5.TIK_VERTRAG IS NULL --der Police sind keine Vertr\u00e4ge zugeordnet\r\n    AND IR6.TIK_VERTRAG IS NULL --kein Vertrag mit Policenzuordnung\r\n    AND VSV.ID IS NULL --Kein Vertrag aus dem Bestandssystem \r\n    AND VSV2.ID IS NULL -- der Police werden keine Vertr\u00e4ge aus dem Bestandssystem zugeordnet\r\n    AND VK.VERTRAGOB <> '000000000'\r\n    AND VK.BESTANDSSCHLUESSEL NOT IN ( '22',\r\n                                       '25',\r\n                                       '44' )\r\n    AND ( VK.STATUS NOT IN ( 'ABG',\r\n                             'ABGNG',\r\n                             'ANGEB',\r\n                             'ANGEBO',\r\n                             'ANTR',\r\n                             'KB',\r\n                             'RUH',\r\n                             'STOR' )\r\n          OR VK.STATUS IS NULL\r\n         --OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\r\n          OR VK.BESTANDSSCHLUESSEL <> '80' )\r\n    AND ( VK.STATUS NOT IN ( 'ABG',\r\n                             'ABGNG',\r\n                             'ANGEB',\r\n                             'ANGEBO',\r\n                             'ANTR',\r\n                             'KB',\r\n                             'RUH',\r\n                             'STOR' )\r\n          OR VK.STATUS IS NULL\r\n       --  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp)) \r\n        \r\n          OR VK.BESTANDSSCHLUESSEL = '80' )\r\n\r\n\r\n\t\t\t\t\t)\r\n\r\nselect *\r\nfrom source_data", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": ["model.dbt_ods_delta.ad_mod_vertrag_coc", "model.dbt_ods_delta.filter_vertrag_crm", "model.dbt_ods_delta.ad_chng_vertrag_status", "model.dbt_ods_delta.ad_mod_vertrag_coc"]}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": "INM_DATASHARING", "database": null, "tags": [], "full_refresh": null, "post-hook": [{"sql": "UPDATE INM_DATASHARING.AD_VERARB_ODS SET endezeit = CURRENT_TIMESTAMP, STATUS = 'done' WHERE ODS_LAUF_ID  = (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)", "transaction": true, "index": null}], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "INM_DATASHARING", "fqn": ["dbt_ods_delta", "ods_delta_tabellen", "s0_vertrag"], "unique_id": "model.dbt_ods_delta.s0_vertrag", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "ods_delta_tabellen\\s0_vertrag.sql", "original_file_path": "models\\ods_delta_tabellen\\s0_vertrag.sql", "name": "s0_vertrag", "alias": "s0_vertrag", "checksum": {"name": "sha256", "checksum": "b89486a3a8a004530b2f69182002a966814786638a8037dcd6323d02353db740"}, "tags": [], "refs": [["ad_mod_vertrag_coc"], ["filter_vertrag_crm"], ["ad_chng_vertrag_status"], ["ad_mod_vertrag_coc"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\run\\dbt_ods_delta\\models\\ods_delta_tabellen\\s0_vertrag.sql", "deferred": false, "unrendered_config": {"materialized": "table", "schema": "INM_DATASHARING", "post-hook": "UPDATE INM_DATASHARING.AD_VERARB_ODS SET endezeit = CURRENT_TIMESTAMP, STATUS = 'done' WHERE ODS_LAUF_ID  = (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)"}, "compiled_sql": "  \n\nwith source_data as (\n\n SELECT\n    (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)                                 AS LOAD_NR,\n    VK.TIK_VERTRAG                        AS VERTRAG_ID,\n    VK.VERTRAGTYP_ID                      AS VERTRAGSART_ID,\n    VK.PRODUKTPARTNER_ID                  AS PRODUKTPARTNER_ID,\n    cast(NVL(\n        (\n            CASE\n                WHEN VSV.STATUSVERTRAG IS NOT NULL\n                     AND CVS.TIK_VERTRAG IS NULL THEN\n                    'M||ZUSTAND||' || VSV.STATUSVERTRAG\n                ELSE\n                    NULL\n            END\n        ),\n        (\n            CASE\n                WHEN VK.STATUS = 'ABGNG'     THEN\n                    'M||ZUSTAND||abgegangen'\n                WHEN VK.STATUS = 'KB'        THEN\n                    'M||ZUSTAND||keine Bear'\n                WHEN VK.STATUS = 'RUH'       THEN\n                    'M||ZUSTAND||ruhend'\n                WHEN VK.STATUS = 'STOR'      THEN\n                    'M||ZUSTAND||storniert'\n                WHEN VK.STATUS = 'ABG'       THEN\n                    'M||ZUSTAND||abgelehnt'\n                WHEN VK.STATUS = 'AKT'       THEN\n                    'M||ZUSTAND||ausgefert.'\n                WHEN VK.STATUS = 'ANGEB'     THEN\n                    'M||ZUSTAND||angebahnt'\n                WHEN VK.STATUS = 'ANGEBO'    THEN\n                    'M||ZUSTAND||angeboten'\n                WHEN VK.STATUS = 'ANTR'      THEN\n                    'M||ZUSTAND||beantragt'\n                WHEN VK.STATUS = 'BEIFR'     THEN\n                    'M||ZUSTAND||beitragsfrei'\n                WHEN VK.STATUS = 'BULEIS'    THEN\n                    'M||ZUSTAND||BU-Leistungsfall'\n                WHEN VK.STATUS = 'LP'        THEN\n                    'M||ZUSTAND||leistungspflichtig'\n                ELSE\n                    NULL\n            END\n        )\n    )  as varchar(255) )                                   AS STATUS_ID,\n    COALESCE(\n        VSV.SPARTE_REPORTING,\n        VK.SPARTE_ID\n    )                                     AS SPARTE_ID,\n    (\n        CASE\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\n                VK.EXTERNEROB\n            ELSE\n                SOR.EXTERNEGRAUEOBS(\n                    VK.VERTRAGOB,\n                    'V'\n                )\n        END\n    )                                     AS OB_GRAU,\n    EXV2.OB                               AS VSNR_EXTERN,\n    (\n        CASE\n            WHEN ( VSV.VERTRAGSTDOB IS NOT NULL\n                   AND VSV.VERTRAGSTDOB NOT LIKE '%||%' ) THEN\n                SOR.EXTERNEGRAUEOBS(\n                    VSV.VERTRAGSTDOB,\n                    'V'\n                )\n            WHEN IR5.OB IS NOT NULL THEN\n                SOR.EXTERNEGRAUEOBS(\n                    LTRIM(\n                        IR5.OB,\n                        '0'\n                    ),\n                    'V'\n                )  --ir5.ob ohne f\u00fchrende Nullen\n            ELSE\n                NULL\n        END\n    )                                     AS POLICENNR,\n    (\n        CASE\n            WHEN VSVS.RAHMENVERTRAGNR_LEBEN IS NULL THEN\n                VSVS.RAHMENVERTRAGNRREF\n            ELSE\n                VSVS.RAHMENVERTRAGNR_LEBEN\n        END\n    )                                     AS SAMMELNR_RVNR,\n    cast(null AS varchar(255))            AS RAHMENVERTRAG_NAME,\n    IROB.OB                               AS BUENDELNR,\n    NVL(\n        VSV.BEGINNVERTRAG,\n        VK.VERTRAGSBEGINN\n    )                                     AS BEGINN,\n    CASE\n        WHEN VSV.VERTRAGSTDOB LIKE '%||TVP' THEN\n            NULL\n        ELSE\n            NVL(\n                VSV.ENDEVERTRAG,\n                VK.VERTRAGSABLAUF\n            )\n    END                                   AS ABLAUF,\n    VSB.NETTOJAHRESBEITRAG                AS JAHRESNETTOBEITRAG,\n    VSB.BRUTTOJAHRESBEITRAG               AS JAHRESBRUTTOBEITRAG,\n    VSB.BRUTTOBEITRAGZAHLWEISE            AS BRUTTOBEITRAG_GEM_ZW,\n    CASE\n        WHEN VSVS.ZAHLWEISE IS NULL THEN\n            NULL\n        ELSE\n            'M||ZAHLWEISE||' || VSVS.ZAHLWEISE\n    END                                   AS ZAHLWEISE_ID,\n    CASE\n        WHEN VSVS.ZAHLUNGSART IS NULL THEN\n            NULL\n        ELSE\n            'M||ZAHLWEG||' || VSVS.ZAHLUNGSART\n    END                                   AS ZAHLWEG_ID,\n    NULL                                  AS MAHNSTAND_ID,\n    DECODE(\n        WGT.TIK_VERTRAG,\n        NULL,\n        '0',\n        '1'\n    )                                     AS WGT,\n    VK.SEGMENT                            AS VERKAUFSPRODUKT,\n    CASE\n        WHEN VSV.EXTERNERPRODUKTNAME IS NOT NULL\n             OR VSV.PRODUKTNAME IS NOT NULL THEN\n            NVL(\n                VSV.EXTERNERPRODUKTNAME,\n                VSV.PRODUKTNAME\n            )\n        ELSE\n            VK.PRODUKT\n    END                                   AS PRODUKT,\n    CASE\n        WHEN VSV.AV_SCHICHT IS NULL THEN\n            NULL\n        ELSE\n            CONCAT(\n                'S||AV_SCHICHT_E4||',\n                VSV.AV_SCHICHT\n            )\n    END                                   AS SCHICHT_ID,\n    CASE\n        WHEN VSV.BAV_FINANZIERUNG IS NULL THEN\n            NULL\n        ELSE\n            CONCAT(\n                'S||BAV_DURCHFUEHRUNG||',\n                VSV.BAV_DURCHFUEHRUNG\n            )\n    END                                   AS DURCHFUEHRUNGSWEG_ID,\n    CASE\n        WHEN VSV.BAV_FINANZIERUNG = 'DVAN' THEN\n            'S||BAV_FINANZIERUNG||AN'\n        WHEN VSV.BAV_FINANZIERUNG IS NULL THEN\n            NULL\n        ELSE\n            CONCAT(\n                'S||BAV_FINANZIERUNG||',\n                VSV.BAV_FINANZIERUNG\n            )\n    END                                   AS FINANZIERUNGSBEDARF_ID,\n    NVL(\n        VSV.AENDERUNGSDATUM,\n        NVL(\n            VSVS.ERSTELLTAM,\n            VK.BEARBEITUNGSDATUM\n        )\n    )                                     AS LETZTE_AENDERUNG,\n    P.DWH_PARTNER_ID                      AS BEARBEITUNG_PARTNER_ID,\n    NULL                                  AS MANDANTNR,\n    NULL                                  AS HV_ORGANR,\n    1                                     AS IS_ACTIVE,\n    VK.TIK_VERTRAG                        AS ODS_PK1,\n    IR.OB                                 AS OB_BLAU,\n    CASE\n        WHEN IR2.OB IS NOT NULL THEN\n            SUBSTR(\n                IR2.OB,\n                0,\n                8\n            )\n            || '-'\n            || SUBSTR(\n                IR2.OB,\n                9,\n                5\n            )\n        ELSE\n            NULL\n    END                                   AS OB_GRUEN,\n    CASE\n        WHEN VSV.VERTRAGSART_LEBEN IS NULL THEN\n            NULL\n        ELSE\n            'M||VERTRAGSART_LEBEN||' || VSV.VERTRAGSART_LEBEN\n    END                                   AS VERTRAGSART_LEBEN_ID,\n    CASE\n        WHEN SUBSTR(\n                VC3.KURZBEZEICHNUNG,\n                1,\n                1\n            ) = 'H'\n             AND IR2.OB IS NOT NULL THEN\n            SUBSTR(\n                IR2.OB,\n                0,\n                8\n            )\n            || '-'\n            || SUBSTR(\n                IR2.OB,\n                9,\n                5\n            ) --HDI\n            WHEN SUBSTR(\n                VC3.KURZBEZEICHNUNG,\n                1,\n                1\n            ) = 'G'\n             AND IR.OB IS NOT NULL THEN\n            IR.OB --GERL\n            WHEN SUBSTR(\n            VC3.KURZBEZEICHNUNG,\n            1,\n            1\n        ) = 'B' THEN\n            (\n                CASE\n                    WHEN VK.EXTERNEROB IS NOT NULL THEN\n                        VK.EXTERNEROB\n                    ELSE\n                        sor.EXTERNEGRAUEOBS(\n                            VK.VERTRAGOB,\n                            'V'\n                        )\n                END\n            ) --BST oder BIN\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG IN ( 14,\n                                              81 )\n             AND EXV.OB IS NOT NULL THEN\n            EXV.OB --ROL und Koop Rest\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 21\n             AND IR.OB IS NOT NULL THEN\n            IR.OB --HLV\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 22\n             AND IR.OB IS NOT NULL THEN\n            IR.OB --HPK\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 23\n             AND IR.OB IS NOT NULL THEN\n            IR.OB --HPF\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 31\n             AND IR.OB IS NOT NULL THEN\n            IR.OB --Ampega\n            WHEN VK.VERTRAGSTRAEGERZUORDNUNG = 11\n             AND IR2.OB IS NOT NULL THEN\n            SUBSTR(\n                IR2.OB,\n                0,\n                8\n            )\n            || '-'\n            || SUBSTR(\n                IR2.OB,\n                9,\n                5\n            ) --Global SE\n            ELSE\n            SOR.EXTERNEGRAUEOBS(\n                VK.VERTRAGOB,\n                'V'\n            )\n    END                                   AS VSNR,\n    NULL                                  AS SERVICE_TARIF_ID,\n    VSV.STORNODATUMZEIT                   AS STORNODATUM,\n    CASE\n        WHEN VSV.STORNOGRUND IS NOT NULL\n             AND VSV.STORNOGRUND NOT IN ( 'Kein Stornogrund',\n                                          '0' )\n             AND CVS.TIK_VERTRAG IS NULL THEN\n            'M||STORNOGRUND||' || VSV.STORNOGRUND\n        WHEN CVS.TIK_VERTRAG IS NOT NULL\n             AND CVS.STORNOGRUND IS NOT NULL THEN\n            'M||STORNOGRUND||' || CVS.STORNOGRUND\n        WHEN VSV.STORNODATUMZEIT IS NOT NULL\n             AND VSV.STATUSVERTRAG = 'storniert'\n             AND VSV.STORNOGRUND IS NULL\n             AND CVS.STORNOGRUND IS NULL THEN\n            'M||STORNOGRUND||929MAN'\n        ELSE\n            NULL\n    END                                   AS STORNOGRUND_ID,\n    IR4.TIK_VERTRAG                       AS VORVERTRAG_ID,\n    NULL                                  AS URSACHE_VORVERTRAG_ID,\n    NULL                                  AS FOLGEVERTRAG_ID,\n    NULL                                  AS URSACHE_FOLGEVERTRAG_ID,\n    TO_NUMBER(\n        VSV.HATSELFSERVICE\n    )                                     AS SELFSERVICE_TARIF,\n  --vsv.ANTRAGSDATUM AS ANTRAGSDATUM, --Alte Logik bis 20.08.2019\n      CASE\n        WHEN MONTHS_BETWEEN(\n            VSV.ANTRAGSDATUM,\n            NVL(\n                VSV.BEGINNVERTRAG,\n                VK.VERTRAGSBEGINN\n            )\n        ) > 6\n             OR VSV.ANTRAGSDATUM IS NULL THEN\n            NVL(\n                VSV.BEGINNVERTRAG,\n                VK.VERTRAGSBEGINN\n            )\n        ELSE\n            VSV.ANTRAGSDATUM\n    END                                   AS ANTRAGSDATUM,\n    CASE\n        WHEN VSV.ZUGANGSART IS NOT NULL THEN\n            'M||ZUGANGSART||' || VSV.ZUGANGSART\n        ELSE\n            NULL\n    END                                   AS ZUGANGSART_ID,\n    VSV.MATERIELLERBEGINN,\n    VSV.GENERATIONENDATUM,\n    CASE\n        WHEN VSV.TARIFVARIANTE IS NOT NULL THEN\n            'M||TARIFVARIANTE||' || VSV.TARIFVARIANTE\n        ELSE\n            NULL\n    END                                   AS TARIFVARIANTE_ID,\n    VSV.VERSICHERUNGSSUMME,\n    CASE\n        WHEN VSV.SUMMENART IS NOT NULL\n             AND VSV.SUMMENART <> 'Unspezifizierte Vers'\n             AND VSV.SUMMENART <> 'Unspezifizierte Versicherungssumme' THEN\n            'M||ART_SUMME||' || VSV.SUMMENART\n        ELSE\n            NULL\n    END                                   AS DECKUNGSSUMME_ART_ID,\n    CASE\n        WHEN VSV.UNTERVERSICHERUNGSVERZICHT IS NOT NULL THEN\n            'M||UNTERVERS_VERZICHT||' || VSV.UNTERVERSICHERUNGSVERZICHT\n        ELSE\n            NULL\n    END                                   AS UV_VERZICHT_ID,\n    CASE\n        WHEN VSV.SANIERUNGSKENNZEICHEN IS NOT NULL THEN\n            'M||SANIERUNGSKENNZEICHEN||' || VSV.SANIERUNGSKENNZEICHEN\n        ELSE\n            NULL\n    END                                   AS SANIERUNG_KZ_ID,\n    NULL                                  AS PREISFINDUNGSART_ID,\n    VSVS.ANZVERTRAGBUENDELNACHLASS        AS ANZ_VERTRAEGE_BUENDEL_NL,\n    VSV.KEINERHOEHUNGBUENDELNACHLSSIND    AS KEINE_ERHOEHUNG_BZ,\n    VSV.KEINBUENDELNACHLASSIND            AS KEIN_BUENDELNACHLASS,\n    VSV.KEINFAMILIENNACHLASSIND           AS KEIN_FAMILIEN_NACHLASS,\n    VSV.ANPASSUNGSSATZ                    AS ANPASSUNGSSATZ,\n    VSV.ABWEICHANPASSUNGSSATZ             AS ABW_ANPASSUNGSSATZ,\n    NULL                                  AS STAT_VERSICHERUNGSSUMME,\n    VSV.MINDESTBEITRAG                    AS MINDESTBEITRAG,\n    VSV.ISTPFLICHTVERSICHERUNGIND         AS PFLICHTVERSICHERUNG,\n    VSB.STEUERNABGABENKUMUL               AS STEUERN_ABGABEN_KUMUL,\n    PAKQUISE.DWH_PARTNER_ID               AS VERTRIEB_PARTNER_ID,\n    PSCHADEN.DWH_PARTNER_ID               AS SCHADEN_PARTNER_ID,\n    PINKASSO.DWH_PARTNER_ID               AS INKASSO_PARTNER_ID,\n    NULL                                  AS VOLLMACHSTUFE_ID,\n    VSV.GENERATIONENERMITTLUNGSDATUM      AS GEN_ERMITTEL_DATUM,\n    NULL                                  AS VERTRIEBSWEG_ID,\n    VV.VERTRIEBSZUGANGSWEG_ID             AS VERTRIEBSZUGANGSWEG_ID,\n    NULL                                  AS ANPASSUNGSSATZ_KUMULIERT,\n    VSB.NETTOBEITRAGZAHLWEISE             AS NETTOBEITRAG_GEM_ZW,\n    VSB.TARIFBEITRAG                      AS TARIFBEITRAG_VERS_SUMME,\n    VSB.JAHRESSUMMEZUSCHLAGNACHLASS       AS ZUNA_JAHRESSUMME,\n    NULL                                  AS MINDESTBETRAG_MASCH,\n    NULL                                  AS STEUERLAND_ID,\n    VSV.ISTSTEUERINLAENDERIND             AS STEUERPFLICHTIGES_LAND,\n    CASE\n        WHEN VSV.STEUERBEFREIUNG IS NULL THEN\n            NULL\n        ELSE\n            'M||BEFREIUNG_UMFANG||' || VSV.STEUERBEFREIUNG\n    END                                   AS STEUERBEFREIUNG_ID,\n    VV.VAMOSORGANR                        AS ORGANR,\n    NULL                                  AS LETZTES_MAHNDATUM,\n    CASE\n        WHEN VSV.HATDRITTRECHTIND IS NULL THEN\n            NULL\n        ELSE\n            CONCAT(\n                'S||KENNZEICHEN||',\n                VSV.HATDRITTRECHTIND\n            )\n    END                                   AS DRITTRECHT_ID,\n    VSV.VERSICHERUNGSSUMME                AS VERS_SUMME_GES,\n    STW.ABLGEWINN                         AS ABLAUF_GEWINN,\n    STW.ABLSUMME                          AS ABLAUF_SUMME,\n    STW.ERLGEWINN                         AS ERL_GEWINN,\n    STW.ERLSUMME                          AS ERL_SUMME,\n    STW.RUECKGEWINN                       AS RUECK_GEWINN,\n    STW.RUECKKWERT                        AS RUECKK_WERT,\n    STW.DT_STICHTAG                       AS STICHTAG,\n    VSV.DYNAMIK_ERHOEHUNG                 AS DYNAMIK_ERHOEHUNG,\n    CASE\n        WHEN VSV.DYNAMIKART IS NOT NULL THEN\n            'S||DYNAMIKART_LV||' || DYNAMIKART\n        ELSE\n            NULL\n    END                                   AS DYNAMIKART_ID,\n    VSV.DYNAMIKSATZ                       AS DYNAMIKSATZ,\n    VSV.GARANTIESUMME                     AS GARANTIESUMME,\n    CASE\n        WHEN VSV.VERSORGUNGSSCHICHT IS NOT NULL THEN\n            'S||VERSORGUNGSSCHICHT||' || VERSORGUNGSSCHICHT\n        ELSE\n            NULL\n    END                                   AS VERSORGUNGSSCHICHT_ID,\n    CASE\n        WHEN VSV.HATBESTANDSMANAGMENTIND = 'J'     THEN\n            1\n        WHEN VSV.HATBESTANDSMANAGMENTIND = 'N '    THEN\n            0\n        ELSE\n            NULL\n    END                                   AS BESTANDSMANAGEMENT,\n    NVL(\n        BEZ.BEZUGSRECHT,\n        0\n    )                                     AS BEZUGSRECHT,\n    VSV.WIRKSAMKEITSDATUM                 AS WIRKSAMKEITSBEGINN,\n    VK.BESTANDSFUEHRUNG_ID                AS BESTANDSFUEHRUNG_ID,\n    VK.INKASSOART_ID                      AS INKASSOART_ID,\n    VK.BESTANDSSCHLUESSEL                 AS BESTANDSSCHLUESSEL,\n    VSV.VU_NUMMER                         AS VU_NUMMER,\n    CASE\n        WHEN VSV.VERTRAGSFORM IS NOT NULL THEN\n            CONCAT(\n                'M||VERTRAGSFORM||',\n                VSV.VERTRAGSFORM\n            )\n        ELSE\n            NULL\n    END                                   AS VERTRAGSFORM_ID,\n    CASE\n        WHEN VSV.AENDERUNGSGRUND IS NOT NULL THEN\n            CONCAT(\n                'M||AENDERUNGSGRUND||',\n                VSV.AENDERUNGSGRUND\n            )\n        ELSE\n            NULL\n    END                                   AS AENDERUNGSGRUND_ID,\n    NULL                                  AS IS_POLICE\nFROM\n         da.OD_VERTRAGSKONTEXT_AKT VK\n    INNER JOIN DWHHD_DEV.INM_DATASHARING.ad_mod_vertrag_coc            AD ON VK.TIK_VERTRAG = AD.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_VERTRAG_AKT                   VSV ON VK.TIK_VERTRAG = VSV.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_VERTRAGSTANDARD_AKT VSVS ON VSV.TIK_POLICE = VSVS.TIK_POLICE\n    LEFT OUTER JOIN da.OD_EXTERNEREFERENZ_AKT ER ON VK.TIK_VERTRAG = ER.TIK_VERTRAG\n                                              AND ER.TYP IN ( 'ATR VNr',\n                                                              'DKV VNr',\n                                                              'Roland Vers. Nr.',\n                                                              'IDEAL-Vers-Nr.' )\n    LEFT OUTER JOIN da.OD_BEITRAG_AKT VSB ON VSV.VERTRAGSOB = VSB.VERTRAGSOB\n                                          AND VSB.VERTRAGSTEILBUENDELID IS NULL\n                                          AND VSB.VERTRAGSTEILID = '0'\n    LEFT OUTER JOIN (\n        SELECT\n            TIK_VERTRAG\n        FROM\n            da.OD_WERTUNGSGRUNDLTEILUNG_AKT \n        GROUP BY\n            TIK_VERTRAG\n    )                                WGT ON VK.TIK_VERTRAG = WGT.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_PARTNER_AKT P ON VK.BEARBEITUNG = P.OB\n                                     AND P.PARTNERART = 'OE'\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT IR ON VK.TIK_VERTRAG = IR.TIK_VERTRAG\n                                              AND IR.TYP = 'GEP XV'\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT              IR2 ON VK.TIK_VERTRAG = IR2.TIK_VERTRAG\n                                               AND IR2.TYP = 'HDI V'\n    LEFT OUTER JOIN da.OD_CODE_AKT VC ON VK.ZWEIG_ID = VC.DWH_CODE_ID\n    LEFT OUTER JOIN da.OD_CODE_AKT VC2 ON VC2.SCHEMA = 'VERTRAGSARTLEBEN'\n                                      AND VC2.SCHLUESSEL = VSV.VERTRAGSART_LEBEN\n    LEFT JOIN da.OD_CODE_AKT                        VC3 ON VK.BESTANDSFUEHRUNG_ID = VC3.DWH_CODE_ID\n                                AND VC3.SCHEMA = 'BESTANDSFUEHRUNG'\n    LEFT JOIN da.OD_EXTERNEREFERENZ_AKT EXV ON VK.TIK_VERTRAG = EXV.TIK_VERTRAG\n                                         AND EXV.TYP IN ( 'ROL',\n                                                          'IDE',\n                                                          'DKV',\n                                                          'ATR' )\n    LEFT JOIN da.OD_WERTUNGSGRUNDLTEILUNG_AKT     WGT2 ON VK.TIK_VERTRAG = WGT2.TIK_VERTRAG\n                                                    AND VK.VERMITTLERVEREINBARUNGOB = WGT2.VERMITTLERVEREINBARUNGOB\n    LEFT JOIN da.OD_CODE_AKT                        VC4 ON VC4.SCHEMA = 'STORNOGRUND'\n                                AND VC4.SCHLUESSEL = VSV.STORNOGRUND\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR3 ON VSV.TIK_POLICE = IR3.TIK_VERTRAG\n                                         AND IR3.TYP = 'VVN'\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR4 ON IR3.OB = IR4.OB\n                                         AND IR4.TYP = 'HDI V'\n    INNER JOIN DWHHD_DEV.INM_DATASHARING.filter_vertrag_crm FILT ON VK.TIK_VERTRAG = FILT.TIK_VERTRAG\n    LEFT JOIN (\n        SELECT\n            EXV.OB,\n            EXV.TIK_VERTRAG\n        FROM\n            (\n                SELECT\n                    OB,\n                    TIK_VERTRAG,\n                    GUELTIGVON,\n                    ROW_NUMBER()\n                    OVER(PARTITION BY TIK_VERTRAG\n                         ORDER BY GUELTIGVON DESC\n                    ) AS SORTER\n                FROM\n                    da.OD_EXTERNEREFERENZ_AKT EXV\n                WHERE\n                    TYP IN ( 'ROL',\n                             'IDE',\n                             'DKV',\n                             'ATR' )\n            ) EXV\n        WHERE\n            EXV.SORTER = 1\n    )                                EXV2 ON EXV2.TIK_VERTRAG = VK.TIK_VERTRAG\n    LEFT JOIN DWHHD_DEV.INM_DATASHARING.ad_chng_vertrag_status      CVS ON CVS.TIK_VERTRAG = VK.TIK_VERTRAG\n    LEFT JOIN (\n        SELECT\n            OB,\n            TIK_VERTRAG,\n            ROW_NUMBER()\n            OVER(PARTITION BY OB\n                 ORDER BY GUELTIGVON DESC\n            ) AS SORTER\n        FROM\n            da.OD_INTERNEREFERENZ_AKT\n        WHERE\n            TYP = 'HDI B'\n    )                                IROB ON IROB.TIK_VERTRAG = VK.TIK_VERTRAG\n              AND IROB.SORTER = 1\n    LEFT JOIN da.OD_PARTNER_AKT PAKQUISE ON VK.AKQUISE = PAKQUISE.OB\n    LEFT JOIN da.OD_PARTNER_AKT                      PSCHADEN ON VK.SCHADEN = PSCHADEN.OB\n    LEFT JOIN da.OD_PARTNER_AKT                      PINKASSO ON VK.INKASSO = PINKASSO.OB\n    LEFT JOIN da.OD_VERMITTLERVEREINBARUNG_AKT VV ON VK.DWH_VERMVEREINBARUNG_ID = VV.DWH_VERMVEREINBARUNG_ID\n    LEFT OUTER JOIN (\n        SELECT\n            TIK_VERTRAG,\n            STW.ABLGEWINN,\n            STW.ABLSUMME,\n            STW.ERLGEWINN,\n            STW.ERLSUMME,\n            STW.RUECKGEWINN,\n            STW.RUECKKWERT,\n            MAX(STW.DT_STICHTAG) AS DT_STICHTAG\n        FROM\n            da.OD_LV_STICHTAGSWERTSATZ_AKT STW\n        GROUP BY\n            TIK_VERTRAG,\n            STW.ABLGEWINN,\n            STW.ABLSUMME,\n            STW.ERLGEWINN,\n            STW.ERLSUMME,\n            STW.RUECKGEWINN,\n            STW.RUECKKWERT\n    )                                STW ON VK.TIK_VERTRAG = STW.TIK_VERTRAG\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT              IR5 ON VK.TIK_VERTRAG = IR5.TIK_VERTRAG\n                                         AND IR5.TYP = 'SAP'\n    LEFT OUTER JOIN (\n        SELECT\n            TIK_VERTRAG,\n            1 AS BEZUGSRECHT\n        FROM\n            da.OD_LV_BEZUGSRECHT_AKT \n        GROUP BY\n            TIK_VERTRAG\n    )                                BEZ ON VK.TIK_VERTRAG = BEZ.TIK_VERTRAG\nUNION ALL \nSELECT\n    (SELECT max(ods_lauf_id) FROM INM_DATASHARING.AD_VERARB_ODS)                             AS LOAD_NR,\n    VK.TIK_VERTRAG                    AS VERTRAG_ID,\n    VK.VERTRAGTYP_ID                  AS VERTRAGSART_ID,\n    VK.PRODUKTPARTNER_ID              AS PRODUKTPARTNER_ID,\n    cast( (\n        CASE\n            WHEN VK.STATUS = 'ABGNG'     THEN\n                'M||ZUSTAND||abgegangen'\n            WHEN VK.STATUS = 'KB'        THEN\n                'M||ZUSTAND||keine Bear'\n            WHEN VK.STATUS = 'RUH'       THEN\n                'M||ZUSTAND||ruhend'\n            WHEN VK.STATUS = 'STOR'      THEN\n                'M||ZUSTAND||storniert'\n            WHEN VK.STATUS = 'ABG'       THEN\n                'M||ZUSTAND||abgelehnt'\n            WHEN VK.STATUS = 'AKT'       THEN\n                'M||ZUSTAND||ausgefert.'\n            WHEN VK.STATUS = 'ANGEB'     THEN\n                'M||ZUSTAND||angebahnt'\n            WHEN VK.STATUS = 'ANGEBO'    THEN\n                'M||ZUSTAND||angeboten'\n            WHEN VK.STATUS = 'ANTR'      THEN\n                'M||ZUSTAND||beantragt'\n            WHEN VK.STATUS = 'BEIFR'     THEN\n                'M||ZUSTAND||beitragsfrei'\n            WHEN VK.STATUS = 'BULEIS'    THEN\n                'M||ZUSTAND||BU-Leistungsfall'\n            WHEN VK.STATUS = 'LP'        THEN\n                'M||ZUSTAND||leistungspflichtig'\n            ELSE\n                NULL\n        END\n    )   as varchar(255) )                                AS STATUS_ID,\n    VK.SPARTE_ID                      AS SPARTE_ID,\n    (\n        CASE\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\n                VK.EXTERNEROB\n            ELSE\n                sor.EXTERNEGRAUEOBS(\n                    VK.VERTRAGOB,\n                    'V'\n                )\n        END\n    )                                 AS OB_GRAU,\n    NULL                              AS VSNR_EXTERN,\n    NULL                              AS POLICENNR,\n    VSVS.RAHMENVERTRAGNRREF           AS SAMMELNR_RVNR,\n    NULL                              AS RAHMENVERTRAG_NAME,\n    NULL                              AS BUENDELNR,\n    VK.VERTRAGSBEGINN                 AS BEGINN,\n    VK.VERTRAGSABLAUF                 AS ABLAUF,\n    NULL                              AS JAHRESNETTOBEITRAG,\n    NULL                              AS JAHRESBRUTTOBEITRAG,\n    NULL                              AS BRUTTOBEITRAG_GEM_ZW,\n    CASE\n        WHEN VSVS.ZAHLWEISE IS NULL THEN\n            NULL\n        ELSE\n            'M||ZAHLWEISE||' || VSVS.ZAHLWEISE\n    END                               AS ZAHLWEISE_ID,\n    CASE\n        WHEN VSVS.ZAHLUNGSART IS NULL THEN\n            NULL\n        ELSE\n            'M||ZAHLWEG||' || VSVS.ZAHLUNGSART\n    END                               AS ZAHLWEG_ID,\n    NULL                              AS MAHNSTAND_ID,\n    DECODE(\n        WGT.TIK_VERTRAG,\n        NULL,\n        '0',\n        '1'\n    )                                 AS WGT,\n    VK.SEGMENT                        AS VERKAUFSPRODUKT,\n    VK.PRODUKT                        AS PRODUKT,\n    NULL                              AS SCHICHT_ID,\n    NULL                              AS DURCHFUEHRUNGSWEG_ID,\n    NULL                              AS FINANZIERUNGSBEDARF_ID,\n    NVL(\n        VSVS.ERSTELLTAM,\n        VK.BEARBEITUNGSDATUM\n    )                                 AS LETZTE_AENDERUNG,\n    P.DWH_PARTNER_ID                  AS BEARBEITUNG_PARTNER_ID,\n    NULL                              AS MANDANTNR,\n    NULL                              AS HV_ORGANR,\n    1                                 AS IS_ACTIVE,\n    VK.TIK_VERTRAG                    AS ODS_PK1,\n    IR.OB                             AS OB_BLAU,\n    NULL                              AS OB_GRUEN,\n    NULL                              AS VERTRAGSART_LEBEN_ID,\n    (\n        CASE\n            WHEN VK.EXTERNEROB IS NOT NULL THEN\n                VK.EXTERNEROB\n            ELSE\n                sor.EXTERNEGRAUEOBS(\n                    VK.VERTRAGOB,\n                    'V'\n                )\n        END\n    )                                 AS VSNR,\n    NULL                              AS SERVICE_TARIF_ID,\n    NULL                              AS STORNODATUM,\n    NULL                              AS STORNOGRUND_ID,\n    IR4.TIK_VERTRAG                   AS VORVERTRAG_ID,\n    NULL                              AS URSACHE_VORVERTRAG_ID,\n    NULL                              AS FOLGEVERTRAG_ID,\n    NULL                              AS URSACHE_FOLGEVERTRAG_ID,\n    NULL                              AS SELFSERVICE_TARIF,\n    NULL                              AS ANTRAGSDATUM,\n    NULL                              AS ZUGANGSART_ID,\n    NULL                              AS MATERIELLERBEGINN,\n    NULL                              AS GENERATIONENDATUM,\n    NULL                              AS TARIFVARIANTE_ID,\n    NULL                              AS VERSICHERUNGSSUMME,\n    NULL                              AS DECKUNGSSUMME_ART_ID,\n    NULL                              AS UV_VERZICHT_ID,\n    NULL                              AS SANIERUNG_KZ_ID,\n    NULL                              AS PREISFINDUNGSART_ID,\n    VSVS.ANZVERTRAGBUENDELNACHLASS    AS ANZ_VERTRAEGE_BUENDEL_NL,\n    NULL                              AS KEINE_ERHOEHUNG_BZ,\n    NULL                              AS KEIN_BUENDELNACHLASS,\n    NULL                              AS KEIN_FAMILIEN_NACHLASS,\n    NULL                              AS ANPASSUNGSSATZ,\n    NULL                              AS ABW_ANPASSUNGSSATZ,\n    NULL                              AS STAT_VERSICHERUNGSSUMME,\n    NULL                              AS MINDESTBEITRAG,\n    NULL                              AS PFLICHTVERSICHERUNG,\n    NULL                              AS STEUERN_ABGABEN_KUMUL,\n    PAKQUISE.DWH_PARTNER_ID           AS VERTRIEB_PARTNER_ID,\n    PSCHADEN.DWH_PARTNER_ID           AS SCHADEN_PARTNER_ID,\n    PINKASSO.DWH_PARTNER_ID           AS INKASSO_PARTNER_ID,\n    NULL                              AS VOLLMACHSTUFE_ID,\n    NULL                              AS GEN_ERMITTEL_DATUM,\n    NULL                              AS VERTRIEBSWEG_ID,\n    VV.VERTRIEBSZUGANGSWEG_ID         AS VERTRIEBSZUGANGSWEG_ID,\n    NULL                              AS ANPASSUNGSSATZ_KUMULIERT,\n    NULL                              AS NETTOBEITRAG_GEM_ZW,\n    NULL                              AS TARIFBEITRAG_VERS_SUMME,\n    NULL                              AS ZUNA_JAHRESSUMME,\n    NULL                              AS MINDESTBETRAG_MASCH,\n    NULL                              AS STEUERLAND_ID,\n    NULL                              AS STEUERPFLICHTIGES_LAND,\n    NULL                              AS STEUERBEFREIUNG_ID,\n    VV.VAMOSORGANR                    AS ORGANR,\n    NULL                              AS LETZTES_MAHNDATUM,\n    NULL                              AS DRITTRECHT_ID,\n    NULL                              AS VERS_SUMME_GES,\n    NULL                              AS ABLAUF_GEWINN,\n    NULL                              AS ABLAUF_SUMME,\n    NULL                              AS ERL_GEWINN,\n    NULL                              AS ERL_SUMME,\n    NULL                              AS RUECK_GEWINN,\n    NULL                              AS RUECKK_WERT,\n    NULL                              AS STICHTAG,\n    NULL                              AS DYNAMIK_ERHOEHUNG,\n    NULL                              AS DYNAMIKART_ID,\n    NULL                              AS DYNAMIKSATZ,\n    NULL                              AS GARANTIESUMME,\n    NULL                              AS VERSORGUNGSSCHICHT_ID,\n    NULL                              AS BESTANDSMANAGEMENT,\n    NULL                              AS BEZUGSRECHT,\n    NULL                              AS WIRKSAMKEITSBEGINN,\n    VK.BESTANDSFUEHRUNG_ID            AS BESTANDSFUEHRUNG_ID,\n    VK.INKASSOART_ID                  AS INKASSOART_ID,\n    VK.BESTANDSSCHLUESSEL             AS BESTANDSSCHLUESSEL,\n    NULL                              AS VU_NUMMER,\n    NULL                              AS VERTRAGSFORM_ID,\n    NULL                              AS AENDERUNGSGRUND_ID,\n    1                                 AS IS_POLICE\nFROM\n         da.OD_VERTRAGSKONTEXT_AKT VK\n    INNER JOIN DWHHD_DEV.INM_DATASHARING.ad_mod_vertrag_coc         AD ON VK.TIK_VERTRAG = AD.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_VERTRAGSTANDARD_AKT        VSVS ON VK.TIK_VERTRAG = VSVS.TIK_POLICE\n    LEFT OUTER JOIN (\n        SELECT\n            TIK_VERTRAG\n        FROM\n            da.OD_WERTUNGSGRUNDLTEILUNG_AKT \n        GROUP BY\n            TIK_VERTRAG\n    )                             WGT ON VK.TIK_VERTRAG = WGT.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_PARTNER_AKT                   P ON VK.BEARBEITUNG = P.OB\n                                     AND P.PARTNERART = 'OE'\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT           IR ON VK.TIK_VERTRAG = IR.TIK_VERTRAG\n                                              AND IR.TYP = 'GEP XV'\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT           IR3 ON VK.TIK_VERTRAG = IR3.TIK_VERTRAG\n                                         AND IR3.TYP = 'VVN'\n    LEFT JOIN da.OD_INTERNEREFERENZ_AKT           IR4 ON IR3.OB = IR4.OB\n                                         AND IR4.TYP = 'HDI V'\n    LEFT JOIN da.OD_PARTNER_AKT                   PAKQUISE ON VK.AKQUISE = PAKQUISE.OB\n    LEFT JOIN da.OD_PARTNER_AKT                   PSCHADEN ON VK.SCHADEN = PSCHADEN.OB\n    LEFT JOIN da.OD_PARTNER_AKT                   PINKASSO ON VK.INKASSO = PINKASSO.OB\n    LEFT JOIN da.od_vermittlervereinbarung_akt    VV ON VK.DWH_VERMVEREINBARUNG_ID = VV.DWH_VERMVEREINBARUNG_ID\n    LEFT OUTER JOIN da.od_vertrag_akt                VSV ON VSV.TIK_VERTRAG = VK.TIK_VERTRAG\n    LEFT OUTER JOIN da.od_vertrag_akt                VSV2 ON VSV2.TIK_POLICE = VK.TIK_VERTRAG\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT            IR5 ON IR5.TYP = 'SAP'\n                                               AND LTRIM(\n        VK.VERTRAGOB,\n        '0'\n    ) = LTRIM(\n        IR5.OB,\n        '0'\n    )\n    LEFT OUTER JOIN da.OD_INTERNEREFERENZ_AKT            IR6 ON IR6.TYP = 'SAP'\n                                               AND IR6.TIK_VERTRAG = VK.TIK_VERTRAG\nWHERE\n        VK.VERTRAGTYP = 18\n    AND VK.BESTANDSFUEHRUNG = '28'\n    AND IR5.TIK_VERTRAG IS NULL --der Police sind keine Vertr\u00e4ge zugeordnet\n    AND IR6.TIK_VERTRAG IS NULL --kein Vertrag mit Policenzuordnung\n    AND VSV.ID IS NULL --Kein Vertrag aus dem Bestandssystem \n    AND VSV2.ID IS NULL -- der Police werden keine Vertr\u00e4ge aus dem Bestandssystem zugeordnet\n    AND VK.VERTRAGOB <> '000000000'\n    AND VK.BESTANDSSCHLUESSEL NOT IN ( '22',\n                                       '25',\n                                       '44' )\n    AND ( VK.STATUS NOT IN ( 'ABG',\n                             'ABGNG',\n                             'ANGEB',\n                             'ANGEBO',\n                             'ANTR',\n                             'KB',\n                             'RUH',\n                             'STOR' )\n          OR VK.STATUS IS NULL\n         --OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp))\n          OR VK.BESTANDSSCHLUESSEL <> '80' )\n    AND ( VK.STATUS NOT IN ( 'ABG',\n                             'ABGNG',\n                             'ANGEB',\n                             'ANGEBO',\n                             'ANTR',\n                             'KB',\n                             'RUH',\n                             'STOR' )\n          OR VK.STATUS IS NULL\n       --  OR NVL(VK.STATUSDATUM,current_timestamp) > dateadd(year, -10, to_date(current_timestamp)) \n        \n          OR VK.BESTANDSSCHLUESSEL = '80' )\n\n\n\t\t\t\t\t)\n\nselect *\nfrom source_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "DWHHD_DEV.INM_DATASHARING.s0_vertrag"}, "model.dbt_ods_delta.od_coc_auftrag_partner_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'od_coc_auftrag_partner_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.od_coc_auftrag_partner_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "od_coc_auftrag_partner_akt"], "unique_id": "model.dbt_ods_delta.od_coc_auftrag_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\od_coc_auftrag_partner_akt.sql", "original_file_path": "models\\_sources\\da\\od_coc_auftrag_partner_akt.sql", "name": "od_coc_auftrag_partner_akt", "alias": "od_coc_auftrag_partner_akt", "checksum": {"name": "sha256", "checksum": "e0acf22bd37db48ff7b619bbf7e9dc065154dd354deb481102d823fd17c3018e"}, "tags": [], "refs": [], "sources": [["da", "od_coc_auftrag_partner_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\od_coc_auftrag_partner_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.od_coc_auftrag_partner_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'od_coc_auftrag_vertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "od_coc_auftrag_vertrag_akt"], "unique_id": "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\od_coc_auftrag_vertrag_akt.sql", "original_file_path": "models\\_sources\\da\\od_coc_auftrag_vertrag_akt.sql", "name": "od_coc_auftrag_vertrag_akt", "alias": "od_coc_auftrag_vertrag_akt", "checksum": {"name": "sha256", "checksum": "d7521cf95489535a77ffaeff59b24324d3b47346066d06b5690d1718fa7363c2"}, "tags": [], "refs": [], "sources": [["da", "od_coc_auftrag_vertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\od_coc_auftrag_vertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.od_coc_auftrag_vertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.od_schaden_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'od_schaden_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.od_schaden_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "od_schaden_akt"], "unique_id": "model.dbt_ods_delta.od_schaden_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\od_schaden_akt.sql", "original_file_path": "models\\_sources\\da\\od_schaden_akt.sql", "name": "od_schaden_akt", "alias": "od_schaden_akt", "checksum": {"name": "sha256", "checksum": "9a13ea9efc4c19e245b3534db5a4eca5ceb65ff51553fb0a8ae56fbbe19fc795"}, "tags": [], "refs": [], "sources": [["da", "od_schaden_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\od_schaden_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.od_schaden_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.od_vertragskontext_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'od_vertragskontext_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.od_vertragskontext_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "od_vertragskontext_akt"], "unique_id": "model.dbt_ods_delta.od_vertragskontext_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\od_vertragskontext_akt.sql", "original_file_path": "models\\_sources\\da\\od_vertragskontext_akt.sql", "name": "od_vertragskontext_akt", "alias": "od_vertragskontext_akt", "checksum": {"name": "sha256", "checksum": "1fd7e95678c74e26d53c5c7a8052f33998a88ae0443973ff2c156b6969d7a82e"}, "tags": [], "refs": [], "sources": [["da", "od_vertragskontext_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\od_vertragskontext_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.od_vertragskontext_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.od_vertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'od_vertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.od_vertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "od_vertrag_akt"], "unique_id": "model.dbt_ods_delta.od_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\od_vertrag_akt.sql", "original_file_path": "models\\_sources\\da\\od_vertrag_akt.sql", "name": "od_vertrag_akt", "alias": "od_vertrag_akt", "checksum": {"name": "sha256", "checksum": "0b58f19f13dca08a1f965fb039ae23e6a87bc2538877c576af9a0c7592ae3408"}, "tags": [], "refs": [], "sources": [["da", "od_vertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\od_vertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.od_vertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_anschrift_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_anschrift_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_anschrift_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_anschrift_akt"], "unique_id": "model.dbt_ods_delta.vg_anschrift_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_anschrift_akt.sql", "original_file_path": "models\\_sources\\da\\vg_anschrift_akt.sql", "name": "vg_anschrift_akt", "alias": "vg_anschrift_akt", "checksum": {"name": "sha256", "checksum": "b3de175db521a19d1242dbb90d7b03d68debd307a98834df044b0c78f78b9a65"}, "tags": [], "refs": [], "sources": [["da", "vg_anschrift_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_anschrift_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_anschrift_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_bankverbindung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_bankverbindung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_bankverbindung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_bankverbindung_akt"], "unique_id": "model.dbt_ods_delta.vg_bankverbindung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_bankverbindung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_bankverbindung_akt.sql", "name": "vg_bankverbindung_akt", "alias": "vg_bankverbindung_akt", "checksum": {"name": "sha256", "checksum": "258547be384ab76c9329cca27826500f0ccdd7bef6e91239f323a12e40db5b78"}, "tags": [], "refs": [], "sources": [["da", "vg_bankverbindung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_bankverbindung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_bankverbindung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_beitrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_beitrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_beitrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_beitrag_akt"], "unique_id": "model.dbt_ods_delta.vg_beitrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_beitrag_akt.sql", "original_file_path": "models\\_sources\\da\\vg_beitrag_akt.sql", "name": "vg_beitrag_akt", "alias": "vg_beitrag_akt", "checksum": {"name": "sha256", "checksum": "1fa194446c0573f2f495b7d2e3b046b3cbedbfcc8443451ac515301cd24ba67b"}, "tags": [], "refs": [], "sources": [["da", "vg_beitrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_beitrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_beitrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_betriebswirtschaftdaten_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_betriebswirtschaftdaten_akt"], "unique_id": "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_betriebswirtschaftdaten_akt.sql", "original_file_path": "models\\_sources\\da\\vg_betriebswirtschaftdaten_akt.sql", "name": "vg_betriebswirtschaftdaten_akt", "alias": "vg_betriebswirtschaftdaten_akt", "checksum": {"name": "sha256", "checksum": "ca986599fe2383108ec331dae19243a10779e5b6b6fbff557de5f72ca49d035d"}, "tags": [], "refs": [], "sources": [["da", "vg_betriebswirtschaftdaten_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_betriebswirtschaftdaten_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_betriebswirtschaftdaten_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_bonusmalus_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_bonusmalus_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_bonusmalus_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_bonusmalus_akt"], "unique_id": "model.dbt_ods_delta.vg_bonusmalus_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_bonusmalus_akt.sql", "original_file_path": "models\\_sources\\da\\vg_bonusmalus_akt.sql", "name": "vg_bonusmalus_akt", "alias": "vg_bonusmalus_akt", "checksum": {"name": "sha256", "checksum": "ac664c60ed4ec8656b95e6617955c4fa628a56fe7599a54b3b862d076b6af025"}, "tags": [], "refs": [], "sources": [["da", "vg_bonusmalus_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_bonusmalus_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_bonusmalus_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_coc_auftrag_partner_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_coc_auftrag_partner_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_coc_auftrag_partner_akt"], "unique_id": "model.dbt_ods_delta.vg_coc_auftrag_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_coc_auftrag_partner_akt.sql", "original_file_path": "models\\_sources\\da\\vg_coc_auftrag_partner_akt.sql", "name": "vg_coc_auftrag_partner_akt", "alias": "vg_coc_auftrag_partner_akt", "checksum": {"name": "sha256", "checksum": "b5c9d414411d48f05f4811bc5166f00a2dc06d659516ceca730005c8cdf9cb42"}, "tags": [], "refs": [], "sources": [["da", "vg_coc_auftrag_partner_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_coc_auftrag_partner_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_coc_auftrag_partner_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_coc_auftrag_vertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_coc_auftrag_vertrag_akt"], "unique_id": "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_coc_auftrag_vertrag_akt.sql", "original_file_path": "models\\_sources\\da\\vg_coc_auftrag_vertrag_akt.sql", "name": "vg_coc_auftrag_vertrag_akt", "alias": "vg_coc_auftrag_vertrag_akt", "checksum": {"name": "sha256", "checksum": "a5a8ac071ca79c8e031aa9c645c599f9e13d37df67ff5eef2136cee980b8af3b"}, "tags": [], "refs": [], "sources": [["da", "vg_coc_auftrag_vertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_coc_auftrag_vertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_coc_auftrag_vertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_deckung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_deckung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_deckung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_deckung_akt"], "unique_id": "model.dbt_ods_delta.vg_deckung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_deckung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_deckung_akt.sql", "name": "vg_deckung_akt", "alias": "vg_deckung_akt", "checksum": {"name": "sha256", "checksum": "77334b20783e245933eb05e15af423f5016d4cfdea5391ed3d6003603c6ebec9"}, "tags": [], "refs": [], "sources": [["da", "vg_deckung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_deckung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_deckung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_drittrechtglaeubiger_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_drittrechtglaeubiger_akt"], "unique_id": "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_drittrechtglaeubiger_akt.sql", "original_file_path": "models\\_sources\\da\\vg_drittrechtglaeubiger_akt.sql", "name": "vg_drittrechtglaeubiger_akt", "alias": "vg_drittrechtglaeubiger_akt", "checksum": {"name": "sha256", "checksum": "77244eca0000f16b52a8900492492dea1ad81435bbf064dccf93fc6396decdf1"}, "tags": [], "refs": [], "sources": [["da", "vg_drittrechtglaeubiger_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_drittrechtglaeubiger_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_drittrechtglaeubiger_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_externereferenz_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_externereferenz_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_externereferenz_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_externereferenz_akt"], "unique_id": "model.dbt_ods_delta.vg_externereferenz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_externereferenz_akt.sql", "original_file_path": "models\\_sources\\da\\vg_externereferenz_akt.sql", "name": "vg_externereferenz_akt", "alias": "vg_externereferenz_akt", "checksum": {"name": "sha256", "checksum": "cdd1dd64122b31370cb042ef260d58c13a4f8385a3df29c1e518a439c5a25d86"}, "tags": [], "refs": [], "sources": [["da", "vg_externereferenz_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_externereferenz_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_externereferenz_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_externereferenz_partner_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_externereferenz_partner_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_externereferenz_partner_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_externereferenz_partner_akt"], "unique_id": "model.dbt_ods_delta.vg_externereferenz_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_externereferenz_partner_akt.sql", "original_file_path": "models\\_sources\\da\\vg_externereferenz_partner_akt.sql", "name": "vg_externereferenz_partner_akt", "alias": "vg_externereferenz_partner_akt", "checksum": {"name": "sha256", "checksum": "dd7d135937194545b6e8d1a23292ff39f79f2ae437d56d5519cee2e86690a31c"}, "tags": [], "refs": [], "sources": [["da", "vg_externereferenz_partner_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_externereferenz_partner_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_externereferenz_partner_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_fremdvertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_fremdvertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_fremdvertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_fremdvertrag_akt"], "unique_id": "model.dbt_ods_delta.vg_fremdvertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_fremdvertrag_akt.sql", "original_file_path": "models\\_sources\\da\\vg_fremdvertrag_akt.sql", "name": "vg_fremdvertrag_akt", "alias": "vg_fremdvertrag_akt", "checksum": {"name": "sha256", "checksum": "634e7e526f6f1f227006fa45232aae74a85a2a319790d434677ae6c1396a3e18"}, "tags": [], "refs": [], "sources": [["da", "vg_fremdvertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_fremdvertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_fremdvertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_internereferenz_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_internereferenz_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_internereferenz_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_internereferenz_akt"], "unique_id": "model.dbt_ods_delta.vg_internereferenz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_internereferenz_akt.sql", "original_file_path": "models\\_sources\\da\\vg_internereferenz_akt.sql", "name": "vg_internereferenz_akt", "alias": "vg_internereferenz_akt", "checksum": {"name": "sha256", "checksum": "bb2ee4e363cd40bd697e7744b92356cb5113ef1b3d6d8278409fc748840ccdfe"}, "tags": [], "refs": [], "sources": [["da", "vg_internereferenz_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_internereferenz_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_internereferenz_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_kfzspezifischemerkmale_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_kfzspezifischemerkmale_akt"], "unique_id": "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_kfzspezifischemerkmale_akt.sql", "original_file_path": "models\\_sources\\da\\vg_kfzspezifischemerkmale_akt.sql", "name": "vg_kfzspezifischemerkmale_akt", "alias": "vg_kfzspezifischemerkmale_akt", "checksum": {"name": "sha256", "checksum": "a8f1b3415f6f8f4182b1b6da049733f5865443cb03e150047155393a2a043935"}, "tags": [], "refs": [], "sources": [["da", "vg_kfzspezifischemerkmale_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_kfzspezifischemerkmale_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_kfzspezifischemerkmale_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_klauselnbedingungen_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_klauselnbedingungen_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_klauselnbedingungen_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_klauselnbedingungen_akt"], "unique_id": "model.dbt_ods_delta.vg_klauselnbedingungen_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_klauselnbedingungen_akt.sql", "original_file_path": "models\\_sources\\da\\vg_klauselnbedingungen_akt.sql", "name": "vg_klauselnbedingungen_akt", "alias": "vg_klauselnbedingungen_akt", "checksum": {"name": "sha256", "checksum": "41c5382456d586b6efc8fdab32b923fc9b0d8cc693ad93b74a996e2809d38a90"}, "tags": [], "refs": [], "sources": [["da", "vg_klauselnbedingungen_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_klauselnbedingungen_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_klauselnbedingungen_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_kommunikationskanal_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_kommunikationskanal_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_kommunikationskanal_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_kommunikationskanal_akt"], "unique_id": "model.dbt_ods_delta.vg_kommunikationskanal_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_kommunikationskanal_akt.sql", "original_file_path": "models\\_sources\\da\\vg_kommunikationskanal_akt.sql", "name": "vg_kommunikationskanal_akt", "alias": "vg_kommunikationskanal_akt", "checksum": {"name": "sha256", "checksum": "d10253793c1bcd967d92fcf8c8626f3389c08d8ed8f9a2421b8426c564115c20"}, "tags": [], "refs": [], "sources": [["da", "vg_kommunikationskanal_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_kommunikationskanal_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_kommunikationskanal_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_kostenstelle_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_kostenstelle_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_kostenstelle_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_kostenstelle_akt"], "unique_id": "model.dbt_ods_delta.vg_kostenstelle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_kostenstelle_akt.sql", "original_file_path": "models\\_sources\\da\\vg_kostenstelle_akt.sql", "name": "vg_kostenstelle_akt", "alias": "vg_kostenstelle_akt", "checksum": {"name": "sha256", "checksum": "48128beabbd9d233ba33c94dc75974561d26dc0f500ecf17db276e4b5a1ce9ab"}, "tags": [], "refs": [], "sources": [["da", "vg_kostenstelle_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_kostenstelle_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_kostenstelle_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_kostenstelle_zuordnung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_kostenstelle_zuordnung_akt"], "unique_id": "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_kostenstelle_zuordnung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_kostenstelle_zuordnung_akt.sql", "name": "vg_kostenstelle_zuordnung_akt", "alias": "vg_kostenstelle_zuordnung_akt", "checksum": {"name": "sha256", "checksum": "e49aa8d40ef413d2cc08ee78828c5bffedb26210d898b58edeecc171f2d694ed"}, "tags": [], "refs": [], "sources": [["da", "vg_kostenstelle_zuordnung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_kostenstelle_zuordnung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_kostenstelle_zuordnung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_kraftfahrzeug_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_kraftfahrzeug_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_kraftfahrzeug_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_kraftfahrzeug_akt"], "unique_id": "model.dbt_ods_delta.vg_kraftfahrzeug_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_kraftfahrzeug_akt.sql", "original_file_path": "models\\_sources\\da\\vg_kraftfahrzeug_akt.sql", "name": "vg_kraftfahrzeug_akt", "alias": "vg_kraftfahrzeug_akt", "checksum": {"name": "sha256", "checksum": "5869b4e47eb712978d5e3a25c516ed3a752d46f3316fc6b8e5c07b2999064086"}, "tags": [], "refs": [], "sources": [["da", "vg_kraftfahrzeug_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_kraftfahrzeug_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_kraftfahrzeug_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_lv_bezugsrecht_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_lv_bezugsrecht_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_bezugsrecht_akt"], "unique_id": "model.dbt_ods_delta.vg_lv_bezugsrecht_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_lv_bezugsrecht_akt.sql", "original_file_path": "models\\_sources\\da\\vg_lv_bezugsrecht_akt.sql", "name": "vg_lv_bezugsrecht_akt", "alias": "vg_lv_bezugsrecht_akt", "checksum": {"name": "sha256", "checksum": "28894f0d24b594ddf37b80e6f2d0dfebd9c802a519e9f5185a7abd4c6e864b6f"}, "tags": [], "refs": [], "sources": [["da", "vg_lv_bezugsrecht_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_lv_bezugsrecht_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_lv_bezugsrecht_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_lv_leistung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_lv_leistung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_lv_leistung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_akt"], "unique_id": "model.dbt_ods_delta.vg_lv_leistung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_lv_leistung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_lv_leistung_akt.sql", "name": "vg_lv_leistung_akt", "alias": "vg_lv_leistung_akt", "checksum": {"name": "sha256", "checksum": "867c0ad4ef577f1a53f2aa3f34847f7135ef88cc825f181cbf87481ee3b14843"}, "tags": [], "refs": [], "sources": [["da", "vg_lv_leistung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_lv_leistung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_lv_leistung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_lv_leistung_flv_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_lv_leistung_flv_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_lv_leistung_flv_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_flv_akt"], "unique_id": "model.dbt_ods_delta.vg_lv_leistung_flv_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_lv_leistung_flv_akt.sql", "original_file_path": "models\\_sources\\da\\vg_lv_leistung_flv_akt.sql", "name": "vg_lv_leistung_flv_akt", "alias": "vg_lv_leistung_flv_akt", "checksum": {"name": "sha256", "checksum": "01ecbd5db04af35ed9583aaa1116e05a89385f7d095af2148448d9c4343b34e7"}, "tags": [], "refs": [], "sources": [["da", "vg_lv_leistung_flv_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_lv_leistung_flv_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_lv_leistung_flv_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_lv_leistung_konv_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_lv_leistung_konv_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_lv_leistung_konv_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_konv_akt"], "unique_id": "model.dbt_ods_delta.vg_lv_leistung_konv_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_lv_leistung_konv_akt.sql", "original_file_path": "models\\_sources\\da\\vg_lv_leistung_konv_akt.sql", "name": "vg_lv_leistung_konv_akt", "alias": "vg_lv_leistung_konv_akt", "checksum": {"name": "sha256", "checksum": "a94b8f68c709cb113a09001d7e550f59df10057ab0c2af969dce95d69a2df038"}, "tags": [], "refs": [], "sources": [["da", "vg_lv_leistung_konv_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_lv_leistung_konv_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_lv_leistung_konv_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_mahnung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_mahnung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_mahnung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_mahnung_akt"], "unique_id": "model.dbt_ods_delta.vg_mahnung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_mahnung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_mahnung_akt.sql", "name": "vg_mahnung_akt", "alias": "vg_mahnung_akt", "checksum": {"name": "sha256", "checksum": "2ef2143564b01c8dfcb82f5743f430712c0fd7a7b0275609f13cc84026d37e62"}, "tags": [], "refs": [], "sources": [["da", "vg_mahnung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_mahnung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_mahnung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_marketingmassnahme_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_marketingmassnahme_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_marketingmassnahme_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_marketingmassnahme_akt"], "unique_id": "model.dbt_ods_delta.vg_marketingmassnahme_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_marketingmassnahme_akt.sql", "original_file_path": "models\\_sources\\da\\vg_marketingmassnahme_akt.sql", "name": "vg_marketingmassnahme_akt", "alias": "vg_marketingmassnahme_akt", "checksum": {"name": "sha256", "checksum": "441744646bad4610d4e30125fa1409c3cfa2689dfece5a32953eb6dbbf221c2c"}, "tags": [], "refs": [], "sources": [["da", "vg_marketingmassnahme_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_marketingmassnahme_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_marketingmassnahme_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_nutzer_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_nutzer_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_nutzer_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_nutzer_akt"], "unique_id": "model.dbt_ods_delta.vg_nutzer_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_nutzer_akt.sql", "original_file_path": "models\\_sources\\da\\vg_nutzer_akt.sql", "name": "vg_nutzer_akt", "alias": "vg_nutzer_akt", "checksum": {"name": "sha256", "checksum": "a40090cd344c7649e328c89d6978daf01e19dc96a6bcf6358ca4a5c3adfe252a"}, "tags": [], "refs": [], "sources": [["da", "vg_nutzer_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_nutzer_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_nutzer_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_partnerbeziehung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_partnerbeziehung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_partnerbeziehung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_partnerbeziehung_akt"], "unique_id": "model.dbt_ods_delta.vg_partnerbeziehung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_partnerbeziehung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_partnerbeziehung_akt.sql", "name": "vg_partnerbeziehung_akt", "alias": "vg_partnerbeziehung_akt", "checksum": {"name": "sha256", "checksum": "58b4f44b7a8ccfb58bbaca946a21b11ed7effa4d75ca4590fcf2a2703dba60b0"}, "tags": [], "refs": [], "sources": [["da", "vg_partnerbeziehung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_partnerbeziehung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_partnerbeziehung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_partner_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_partner_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_partner_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_partner_akt"], "unique_id": "model.dbt_ods_delta.vg_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_partner_akt.sql", "original_file_path": "models\\_sources\\da\\vg_partner_akt.sql", "name": "vg_partner_akt", "alias": "vg_partner_akt", "checksum": {"name": "sha256", "checksum": "d57b2ec5cce14a3689792d0d8883b91fff075787c4c77249ab3e327d9dd2c117"}, "tags": [], "refs": [], "sources": [["da", "vg_partner_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_partner_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_partner_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_partner_kennzeichen_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_partner_kennzeichen_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_partner_kennzeichen_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_partner_kennzeichen_akt"], "unique_id": "model.dbt_ods_delta.vg_partner_kennzeichen_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_partner_kennzeichen_akt.sql", "original_file_path": "models\\_sources\\da\\vg_partner_kennzeichen_akt.sql", "name": "vg_partner_kennzeichen_akt", "alias": "vg_partner_kennzeichen_akt", "checksum": {"name": "sha256", "checksum": "b4fd8403b2083c2c5b7241ad7071271f26f055dafa12ac1b7197ada22909e02f"}, "tags": [], "refs": [], "sources": [["da", "vg_partner_kennzeichen_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_partner_kennzeichen_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_partner_kennzeichen_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_rolle_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_rolle_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_rolle_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_rolle_akt"], "unique_id": "model.dbt_ods_delta.vg_rolle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_rolle_akt.sql", "original_file_path": "models\\_sources\\da\\vg_rolle_akt.sql", "name": "vg_rolle_akt", "alias": "vg_rolle_akt", "checksum": {"name": "sha256", "checksum": "c053e5a00cfd208fda06d08927d62c4cb0c6839071c4e22c1a17cd777070abbf"}, "tags": [], "refs": [], "sources": [["da", "vg_rolle_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_rolle_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_rolle_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schadenereignis_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schadenereignis_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schadenereignis_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenereignis_akt"], "unique_id": "model.dbt_ods_delta.vg_schadenereignis_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schadenereignis_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schadenereignis_akt.sql", "name": "vg_schadenereignis_akt", "alias": "vg_schadenereignis_akt", "checksum": {"name": "sha256", "checksum": "ecb7598a3244fe953ad474535a4992f977285f35fc11dfe0ecd9fc84df4fe5ce"}, "tags": [], "refs": [], "sources": [["da", "vg_schadenereignis_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schadenereignis_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schadenereignis_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schadenereignis_bez_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schadenereignis_bez_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schadenereignis_bez_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenereignis_bez_akt"], "unique_id": "model.dbt_ods_delta.vg_schadenereignis_bez_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schadenereignis_bez_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schadenereignis_bez_akt.sql", "name": "vg_schadenereignis_bez_akt", "alias": "vg_schadenereignis_bez_akt", "checksum": {"name": "sha256", "checksum": "7e7e5356c49c95566f7c9dbfdff8c3f01abbdcc8c2c1a8526302c81a2e1ab70d"}, "tags": [], "refs": [], "sources": [["da", "vg_schadenereignis_bez_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schadenereignis_bez_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schadenereignis_bez_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schadenkategorie_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schadenkategorie_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schadenkategorie_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenkategorie_akt"], "unique_id": "model.dbt_ods_delta.vg_schadenkategorie_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schadenkategorie_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schadenkategorie_akt.sql", "name": "vg_schadenkategorie_akt", "alias": "vg_schadenkategorie_akt", "checksum": {"name": "sha256", "checksum": "d60c5077437fa0937705e50b2131588bd731c4f28f0b2af417d559386ff16d4e"}, "tags": [], "refs": [], "sources": [["da", "vg_schadenkategorie_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schadenkategorie_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schadenkategorie_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schadenrolle_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schadenrolle_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schadenrolle_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenrolle_akt"], "unique_id": "model.dbt_ods_delta.vg_schadenrolle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schadenrolle_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schadenrolle_akt.sql", "name": "vg_schadenrolle_akt", "alias": "vg_schadenrolle_akt", "checksum": {"name": "sha256", "checksum": "944483f95e89c89384e0169d60090f2fd9f0be8adc5e570617e00de5bd6645c9"}, "tags": [], "refs": [], "sources": [["da", "vg_schadenrolle_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schadenrolle_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schadenrolle_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schadenzahlung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schadenzahlung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schadenzahlung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenzahlung_akt"], "unique_id": "model.dbt_ods_delta.vg_schadenzahlung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schadenzahlung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schadenzahlung_akt.sql", "name": "vg_schadenzahlung_akt", "alias": "vg_schadenzahlung_akt", "checksum": {"name": "sha256", "checksum": "d97311f076d0bd2c0cf69d8e570ff0fa228669f21695248606f33c0e3c5181af"}, "tags": [], "refs": [], "sources": [["da", "vg_schadenzahlung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schadenzahlung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schadenzahlung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schaden_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schaden_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schaden_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schaden_akt"], "unique_id": "model.dbt_ods_delta.vg_schaden_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schaden_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schaden_akt.sql", "name": "vg_schaden_akt", "alias": "vg_schaden_akt", "checksum": {"name": "sha256", "checksum": "72372154aff33d3be2dab7b6c336ad0e9c1ff25273106d099b608dfaeee190f0"}, "tags": [], "refs": [], "sources": [["da", "vg_schaden_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schaden_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schaden_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_schaden_art_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_schaden_art_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_schaden_art_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_schaden_art_akt"], "unique_id": "model.dbt_ods_delta.vg_schaden_art_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_schaden_art_akt.sql", "original_file_path": "models\\_sources\\da\\vg_schaden_art_akt.sql", "name": "vg_schaden_art_akt", "alias": "vg_schaden_art_akt", "checksum": {"name": "sha256", "checksum": "ec9838831f8f820e0ca743e2750a919c8ccc7f04cd42c110585b9d1d13962ce9"}, "tags": [], "refs": [], "sources": [["da", "vg_schaden_art_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_schaden_art_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_schaden_art_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_selbstbehalte_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_selbstbehalte_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_selbstbehalte_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_selbstbehalte_akt"], "unique_id": "model.dbt_ods_delta.vg_selbstbehalte_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_selbstbehalte_akt.sql", "original_file_path": "models\\_sources\\da\\vg_selbstbehalte_akt.sql", "name": "vg_selbstbehalte_akt", "alias": "vg_selbstbehalte_akt", "checksum": {"name": "sha256", "checksum": "0877e193667bf649660819ee99a23097088a86ac2f36c6986decbf0b6909ecfd"}, "tags": [], "refs": [], "sources": [["da", "vg_selbstbehalte_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_selbstbehalte_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_selbstbehalte_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_stufung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_stufung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_stufung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_stufung_akt"], "unique_id": "model.dbt_ods_delta.vg_stufung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_stufung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_stufung_akt.sql", "name": "vg_stufung_akt", "alias": "vg_stufung_akt", "checksum": {"name": "sha256", "checksum": "1b561d72cf0202a4ce8b82256c2c8fbd4b17de2809223282596e80b296741c3d"}, "tags": [], "refs": [], "sources": [["da", "vg_stufung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_stufung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_stufung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_typregio_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_typregio_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_typregio_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_typregio_akt"], "unique_id": "model.dbt_ods_delta.vg_typregio_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_typregio_akt.sql", "original_file_path": "models\\_sources\\da\\vg_typregio_akt.sql", "name": "vg_typregio_akt", "alias": "vg_typregio_akt", "checksum": {"name": "sha256", "checksum": "6aa1ffbdf55dfef72277f77207c76569d280aad7cb17403f6e1da7a14a60c0ac"}, "tags": [], "refs": [], "sources": [["da", "vg_typregio_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_typregio_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_typregio_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vermittlervereinbarung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vermittlervereinbarung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vermittlervereinbarung_akt"], "unique_id": "model.dbt_ods_delta.vg_vermittlervereinbarung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vermittlervereinbarung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vermittlervereinbarung_akt.sql", "name": "vg_vermittlervereinbarung_akt", "alias": "vg_vermittlervereinbarung_akt", "checksum": {"name": "sha256", "checksum": "804c373b7a3de0041df7557282f84d0bdd14c5d4e63ecba81a2b3e0187cb9009"}, "tags": [], "refs": [], "sources": [["da", "vg_vermittlervereinbarung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vermittlervereinbarung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vermittlervereinbarung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vermittlervertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vermittlervertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vermittlervertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vermittlervertrag_akt"], "unique_id": "model.dbt_ods_delta.vg_vermittlervertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vermittlervertrag_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vermittlervertrag_akt.sql", "name": "vg_vermittlervertrag_akt", "alias": "vg_vermittlervertrag_akt", "checksum": {"name": "sha256", "checksum": "38dbef2213a239995b8d83bf2456bea85e92271141cf3f461536c935cc3c7fe1"}, "tags": [], "refs": [], "sources": [["da", "vg_vermittlervertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vermittlervertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vermittlervertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_versichertesobjektkfz_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_versichertesobjektkfz_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_versichertesobjektkfz_akt"], "unique_id": "model.dbt_ods_delta.vg_versichertesobjektkfz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_versichertesobjektkfz_akt.sql", "original_file_path": "models\\_sources\\da\\vg_versichertesobjektkfz_akt.sql", "name": "vg_versichertesobjektkfz_akt", "alias": "vg_versichertesobjektkfz_akt", "checksum": {"name": "sha256", "checksum": "0103222cd8108f2c2758e8b9291a3c205546a4bf3b4723a99b5833c0b43474fe"}, "tags": [], "refs": [], "sources": [["da", "vg_versichertesobjektkfz_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_versichertesobjektkfz_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_versichertesobjektkfz_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_versichertesobjekt_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_versichertesobjekt_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_versichertesobjekt_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_versichertesobjekt_akt"], "unique_id": "model.dbt_ods_delta.vg_versichertesobjekt_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_versichertesobjekt_akt.sql", "original_file_path": "models\\_sources\\da\\vg_versichertesobjekt_akt.sql", "name": "vg_versichertesobjekt_akt", "alias": "vg_versichertesobjekt_akt", "checksum": {"name": "sha256", "checksum": "51d94de033c605c08f9ec775e1c9c7ac6df687d6aca8d1dcab8a61b55a558ae5"}, "tags": [], "refs": [], "sources": [["da", "vg_versichertesobjekt_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_versichertesobjekt_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_versichertesobjekt_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertragsbeziehung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertragsbeziehung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertragsbeziehung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsbeziehung_akt"], "unique_id": "model.dbt_ods_delta.vg_vertragsbeziehung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertragsbeziehung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertragsbeziehung_akt.sql", "name": "vg_vertragsbeziehung_akt", "alias": "vg_vertragsbeziehung_akt", "checksum": {"name": "sha256", "checksum": "d1c352eb8f5bf586d6acf22990ec642a903a622bb18681bbc3a832274ccfb4a7"}, "tags": [], "refs": [], "sources": [["da", "vg_vertragsbeziehung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertragsbeziehung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertragsbeziehung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertragskontext_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertragskontext_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertragskontext_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragskontext_akt"], "unique_id": "model.dbt_ods_delta.vg_vertragskontext_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertragskontext_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertragskontext_akt.sql", "name": "vg_vertragskontext_akt", "alias": "vg_vertragskontext_akt", "checksum": {"name": "sha256", "checksum": "c518f6c0dbe37084055424cb4166331a1d1f4bc0ce2d790d2899e366c002f83a"}, "tags": [], "refs": [], "sources": [["da", "vg_vertragskontext_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertragskontext_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertragskontext_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertragstandard_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertragstandard_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertragstandard_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragstandard_akt"], "unique_id": "model.dbt_ods_delta.vg_vertragstandard_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertragstandard_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertragstandard_akt.sql", "name": "vg_vertragstandard_akt", "alias": "vg_vertragstandard_akt", "checksum": {"name": "sha256", "checksum": "9f5c4cfb8f657a1407e809c8fff345c51a882681b599017eece312153a5d3e8a"}, "tags": [], "refs": [], "sources": [["da", "vg_vertragstandard_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertragstandard_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertragstandard_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertragsteilbuendel_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertragsteilbuendel_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsteilbuendel_akt"], "unique_id": "model.dbt_ods_delta.vg_vertragsteilbuendel_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertragsteilbuendel_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertragsteilbuendel_akt.sql", "name": "vg_vertragsteilbuendel_akt", "alias": "vg_vertragsteilbuendel_akt", "checksum": {"name": "sha256", "checksum": "78685eb2f418fffdafe3007b6065f84ed9e8e2ced5a1a4f09e49dc637c90fe7a"}, "tags": [], "refs": [], "sources": [["da", "vg_vertragsteilbuendel_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertragsteilbuendel_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertragsteilbuendel_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertragsteil_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertragsteil_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertragsteil_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsteil_akt"], "unique_id": "model.dbt_ods_delta.vg_vertragsteil_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertragsteil_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertragsteil_akt.sql", "name": "vg_vertragsteil_akt", "alias": "vg_vertragsteil_akt", "checksum": {"name": "sha256", "checksum": "d6e17adafad25296999146d3585c6559beebd0705d6e20e6712c6055cf40b868"}, "tags": [], "refs": [], "sources": [["da", "vg_vertragsteil_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertragsteil_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertragsteil_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_vertrag_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_vertrag_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_vertrag_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertrag_akt"], "unique_id": "model.dbt_ods_delta.vg_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_vertrag_akt.sql", "original_file_path": "models\\_sources\\da\\vg_vertrag_akt.sql", "name": "vg_vertrag_akt", "alias": "vg_vertrag_akt", "checksum": {"name": "sha256", "checksum": "c84b8897de6c411c41e4f5276f20cc207c5ec987b2bb72bbdc14961833fa8d56"}, "tags": [], "refs": [], "sources": [["da", "vg_vertrag_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_vertrag_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_vertrag_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_wertungsgrundlteilung_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_wertungsgrundlteilung_akt"], "unique_id": "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_wertungsgrundlteilung_akt.sql", "original_file_path": "models\\_sources\\da\\vg_wertungsgrundlteilung_akt.sql", "name": "vg_wertungsgrundlteilung_akt", "alias": "vg_wertungsgrundlteilung_akt", "checksum": {"name": "sha256", "checksum": "eb4ff97d32b7f492f50d6364b0d1f411ae427af48963881c0dd17e42346c52eb"}, "tags": [], "refs": [], "sources": [["da", "vg_wertungsgrundlteilung_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_wertungsgrundlteilung_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_wertungsgrundlteilung_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_wirtschaftszweig_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_wirtschaftszweig_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_wirtschaftszweig_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_wirtschaftszweig_akt"], "unique_id": "model.dbt_ods_delta.vg_wirtschaftszweig_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_wirtschaftszweig_akt.sql", "original_file_path": "models\\_sources\\da\\vg_wirtschaftszweig_akt.sql", "name": "vg_wirtschaftszweig_akt", "alias": "vg_wirtschaftszweig_akt", "checksum": {"name": "sha256", "checksum": "bd9446c02ab062abd4cd606919a09de49b12317e13a4e6e35bf9e5d260ed45ff"}, "tags": [], "refs": [], "sources": [["da", "vg_wirtschaftszweig_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_wirtschaftszweig_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_wirtschaftszweig_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vg_zuschl_nachl_akt": {"raw_sql": "select *\r\nfrom {{ source('da', 'vg_zuschl_nachl_akt') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vg_zuschl_nachl_akt"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vg_zuschl_nachl_akt"], "unique_id": "model.dbt_ods_delta.vg_zuschl_nachl_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vg_zuschl_nachl_akt.sql", "original_file_path": "models\\_sources\\da\\vg_zuschl_nachl_akt.sql", "name": "vg_zuschl_nachl_akt", "alias": "vg_zuschl_nachl_akt", "checksum": {"name": "sha256", "checksum": "78759f2297ce34af9fd005a018d21497da5800d8c24d954bae70801424cfa7cf"}, "tags": [], "refs": [], "sources": [["da", "vg_zuschl_nachl_akt"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vg_zuschl_nachl_akt.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vg_zuschl_nachl_akt", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.dbt_ods_delta.vs_vertrag": {"raw_sql": "select *\r\nfrom {{ source('da', 'vs_vertrag') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.dbt_ods_delta.da.vs_vertrag"]}, "config": {"enabled": true, "materialized": "ephemeral", "persist_docs": {}, "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "post-hook": [], "pre-hook": []}, "database": "DWHHD_DEV", "schema": "sor_tmp", "fqn": ["dbt_ods_delta", "_sources", "da", "vs_vertrag"], "unique_id": "model.dbt_ods_delta.vs_vertrag", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "_sources\\da\\vs_vertrag.sql", "original_file_path": "models\\_sources\\da\\vs_vertrag.sql", "name": "vs_vertrag", "alias": "vs_vertrag", "checksum": {"name": "sha256", "checksum": "58ea029c806a0e714cc0fc856eb134a43a53549d1dd996eb203c0aa664c050da"}, "tags": [], "refs": [], "sources": [["da", "vs_vertrag"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target\\compiled\\dbt_ods_delta\\models\\_sources\\da\\vs_vertrag.sql", "deferred": false, "unrendered_config": {"materialized": "ephemeral"}, "compiled_sql": "select *\nfrom DWHHD_DEV.da.vs_vertrag", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}}, "sources": {"source.dbt_ods_delta.da.vg_anschrift_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_anschrift_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_anschrift_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_anschrift_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_anschrift_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_anschrift_akt"}, "source.dbt_ods_delta.da.vg_bankverbindung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_bankverbindung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_bankverbindung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_bankverbindung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_bankverbindung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_bankverbindung_akt"}, "source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_betriebswirtschaftdaten_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_betriebswirtschaftdaten_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_betriebswirtschaftdaten_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_betriebswirtschaftdaten_akt"}, "source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_coc_auftrag_partner_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_coc_auftrag_partner_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_coc_auftrag_partner_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_coc_auftrag_partner_akt"}, "source.dbt_ods_delta.da.vg_externereferenz_partner_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_externereferenz_partner_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_externereferenz_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_externereferenz_partner_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_externereferenz_partner_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_externereferenz_partner_akt"}, "source.dbt_ods_delta.da.vg_kommunikationskanal_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_kommunikationskanal_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_kommunikationskanal_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_kommunikationskanal_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_kommunikationskanal_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_kommunikationskanal_akt"}, "source.dbt_ods_delta.da.vg_kostenstelle_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_kostenstelle_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_kostenstelle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_kostenstelle_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_kostenstelle_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_kostenstelle_akt"}, "source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_kostenstelle_zuordnung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_kostenstelle_zuordnung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_kostenstelle_zuordnung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_kostenstelle_zuordnung_akt"}, "source.dbt_ods_delta.da.vg_marketingmassnahme_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_marketingmassnahme_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_marketingmassnahme_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_marketingmassnahme_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_marketingmassnahme_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_marketingmassnahme_akt"}, "source.dbt_ods_delta.da.vg_partner_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_partner_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_partner_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_partner_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_partner_akt"}, "source.dbt_ods_delta.da.vg_partner_kennzeichen_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_partner_kennzeichen_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_partner_kennzeichen_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_partner_kennzeichen_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_partner_kennzeichen_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_partner_kennzeichen_akt"}, "source.dbt_ods_delta.da.vg_partnerbeziehung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_partnerbeziehung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_partnerbeziehung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_partnerbeziehung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_partnerbeziehung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_partnerbeziehung_akt"}, "source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vermittlervereinbarung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vermittlervereinbarung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vermittlervereinbarung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vermittlervereinbarung_akt"}, "source.dbt_ods_delta.da.vg_vermittlervertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vermittlervertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vermittlervertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vermittlervertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vermittlervertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vermittlervertrag_akt"}, "source.dbt_ods_delta.da.vg_wirtschaftszweig_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_wirtschaftszweig_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_wirtschaftszweig_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_wirtschaftszweig_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_wirtschaftszweig_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_wirtschaftszweig_akt"}, "source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_coc_auftrag_vertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_coc_auftrag_vertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_coc_auftrag_vertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_coc_auftrag_vertrag_akt"}, "source.dbt_ods_delta.da.vg_externereferenz_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_externereferenz_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_externereferenz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_externereferenz_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_externereferenz_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_externereferenz_akt"}, "source.dbt_ods_delta.da.vg_internereferenz_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_internereferenz_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_internereferenz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_internereferenz_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_internereferenz_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_internereferenz_akt"}, "source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_bezugsrecht_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_lv_bezugsrecht_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_lv_bezugsrecht_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_lv_bezugsrecht_akt"}, "source.dbt_ods_delta.da.vg_lv_leistung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_lv_leistung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_lv_leistung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_lv_leistung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_lv_leistung_akt"}, "source.dbt_ods_delta.da.vg_mahnung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_mahnung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_mahnung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_mahnung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_mahnung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_mahnung_akt"}, "source.dbt_ods_delta.da.vg_rolle_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_rolle_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_rolle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_rolle_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_rolle_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_rolle_akt"}, "source.dbt_ods_delta.da.vg_vertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertrag_akt"}, "source.dbt_ods_delta.da.vg_vertragsbeziehung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsbeziehung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertragsbeziehung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertragsbeziehung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertragsbeziehung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertragsbeziehung_akt"}, "source.dbt_ods_delta.da.vg_vertragskontext_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragskontext_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertragskontext_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertragskontext_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertragskontext_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertragskontext_akt"}, "source.dbt_ods_delta.da.vg_beitrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_beitrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_beitrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_beitrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_beitrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_beitrag_akt"}, "source.dbt_ods_delta.da.vg_bonusmalus_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_bonusmalus_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_bonusmalus_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_bonusmalus_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_bonusmalus_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_bonusmalus_akt"}, "source.dbt_ods_delta.da.vg_deckung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_deckung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_deckung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_deckung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_deckung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_deckung_akt"}, "source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_drittrechtglaeubiger_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_drittrechtglaeubiger_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_drittrechtglaeubiger_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_drittrechtglaeubiger_akt"}, "source.dbt_ods_delta.da.vg_fremdvertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_fremdvertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_fremdvertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_fremdvertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_fremdvertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_fremdvertrag_akt"}, "source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_kfzspezifischemerkmale_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_kfzspezifischemerkmale_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_kfzspezifischemerkmale_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_kfzspezifischemerkmale_akt"}, "source.dbt_ods_delta.da.vg_klauselnbedingungen_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_klauselnbedingungen_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_klauselnbedingungen_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_klauselnbedingungen_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_klauselnbedingungen_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_klauselnbedingungen_akt"}, "source.dbt_ods_delta.da.vg_kraftfahrzeug_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_kraftfahrzeug_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_kraftfahrzeug_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_kraftfahrzeug_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_kraftfahrzeug_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_kraftfahrzeug_akt"}, "source.dbt_ods_delta.da.vg_lv_leistung_flv_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_flv_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_lv_leistung_flv_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_lv_leistung_flv_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_lv_leistung_flv_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_lv_leistung_flv_akt"}, "source.dbt_ods_delta.da.vg_lv_leistung_konv_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_lv_leistung_konv_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_lv_leistung_konv_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_lv_leistung_konv_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_lv_leistung_konv_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_lv_leistung_konv_akt"}, "source.dbt_ods_delta.da.vg_nutzer_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_nutzer_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_nutzer_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_nutzer_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_nutzer_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_nutzer_akt"}, "source.dbt_ods_delta.da.vg_selbstbehalte_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_selbstbehalte_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_selbstbehalte_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_selbstbehalte_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_selbstbehalte_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_selbstbehalte_akt"}, "source.dbt_ods_delta.da.vg_stufung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_stufung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_stufung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_stufung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_stufung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_stufung_akt"}, "source.dbt_ods_delta.da.vg_typregio_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_typregio_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_typregio_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_typregio_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_typregio_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_typregio_akt"}, "source.dbt_ods_delta.da.vg_versichertesobjekt_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_versichertesobjekt_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_versichertesobjekt_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_versichertesobjekt_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_versichertesobjekt_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_versichertesobjekt_akt"}, "source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_versichertesobjektkfz_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_versichertesobjektkfz_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_versichertesobjektkfz_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_versichertesobjektkfz_akt"}, "source.dbt_ods_delta.da.vg_vertragstandard_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragstandard_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertragstandard_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertragstandard_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertragstandard_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertragstandard_akt"}, "source.dbt_ods_delta.da.vg_vertragsteil_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsteil_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertragsteil_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertragsteil_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertragsteil_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertragsteil_akt"}, "source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_vertragsteilbuendel_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_vertragsteilbuendel_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_vertragsteilbuendel_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_vertragsteilbuendel_akt"}, "source.dbt_ods_delta.da.vg_zuschl_nachl_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_zuschl_nachl_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_zuschl_nachl_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_zuschl_nachl_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_zuschl_nachl_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_zuschl_nachl_akt"}, "source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_wertungsgrundlteilung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_wertungsgrundlteilung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_wertungsgrundlteilung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_wertungsgrundlteilung_akt"}, "source.dbt_ods_delta.da.od_vertragskontext_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "od_vertragskontext_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.od_vertragskontext_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "od_vertragskontext_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "od_vertragskontext_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.od_vertragskontext_akt"}, "source.dbt_ods_delta.da.od_coc_auftrag_partner_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "od_coc_auftrag_partner_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.od_coc_auftrag_partner_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "od_coc_auftrag_partner_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "od_coc_auftrag_partner_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.od_coc_auftrag_partner_akt"}, "source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "od_coc_auftrag_vertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "od_coc_auftrag_vertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "od_coc_auftrag_vertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.od_coc_auftrag_vertrag_akt"}, "source.dbt_ods_delta.da.od_vertrag_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "od_vertrag_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.od_vertrag_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "od_vertrag_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "od_vertrag_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.od_vertrag_akt"}, "source.dbt_ods_delta.da.vs_vertrag": {"fqn": ["dbt_ods_delta", "_sources", "da", "vs_vertrag"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vs_vertrag", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vs_vertrag", "source_name": "da", "source_description": "", "loader": "", "identifier": "vs_vertrag", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vs_vertrag"}, "source.dbt_ods_delta.da.vg_schaden_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schaden_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schaden_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schaden_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schaden_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schaden_akt"}, "source.dbt_ods_delta.da.vg_schaden_art_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schaden_art_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schaden_art_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schaden_art_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schaden_art_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schaden_art_akt"}, "source.dbt_ods_delta.da.vg_schadenereignis_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenereignis_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schadenereignis_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schadenereignis_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schadenereignis_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schadenereignis_akt"}, "source.dbt_ods_delta.da.vg_schadenereignis_bez_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenereignis_bez_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schadenereignis_bez_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schadenereignis_bez_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schadenereignis_bez_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schadenereignis_bez_akt"}, "source.dbt_ods_delta.da.vg_schadenkategorie_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenkategorie_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schadenkategorie_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schadenkategorie_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schadenkategorie_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schadenkategorie_akt"}, "source.dbt_ods_delta.da.vg_schadenrolle_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenrolle_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schadenrolle_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schadenrolle_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schadenrolle_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schadenrolle_akt"}, "source.dbt_ods_delta.da.vg_schadenzahlung_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "vg_schadenzahlung_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.vg_schadenzahlung_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "vg_schadenzahlung_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "vg_schadenzahlung_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.vg_schadenzahlung_akt"}, "source.dbt_ods_delta.da.od_schaden_akt": {"fqn": ["dbt_ods_delta", "_sources", "da", "od_schaden_akt"], "database": "DWHHD_DEV", "schema": "da", "unique_id": "source.dbt_ods_delta.da.od_schaden_akt", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "models\\_sources\\sources.yml", "original_file_path": "models\\_sources\\sources.yml", "name": "od_schaden_akt", "source_name": "da", "source_description": "", "loader": "", "identifier": "od_schaden_akt", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "DWHHD_DEV.da.od_schaden_akt"}}, "macros": {"macro.dbt_ods_delta.generate_schema_name": {"unique_id": "macro.dbt_ods_delta.generate_schema_name", "package_name": "dbt_ods_delta", "root_path": "C:\\Users\\059603\\hd-mdp-ods-delta", "path": "macros\\generate_schema_name.sql", "original_file_path": "macros\\generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\r\n\r\n    {%- set default_schema = target.schema -%}\r\n    {%- if custom_schema_name is none -%}\r\n\r\n        {{ default_schema }}\r\n\r\n    {%- else -%}\r\n\r\n        {{ custom_schema_name | trim }}\r\n\r\n    {%- endif -%}\r\n\r\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__create_table_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, sql) -%}\n  {%- set transient = config.get('transient', default=true) -%}\n  {%- set cluster_by_keys = config.get('cluster_by', default=none) -%}\n  {%- set enable_automatic_clustering = config.get('automatic_clustering', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n  {%- if cluster_by_keys is not none and cluster_by_keys is string -%}\n    {%- set cluster_by_keys = [cluster_by_keys] -%}\n  {%- endif -%}\n  {%- if cluster_by_keys is not none -%}\n    {%- set cluster_by_string = cluster_by_keys|join(\", \")-%}\n  {% else %}\n    {%- set cluster_by_string = none -%}\n  {%- endif -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n      create or replace {% if temporary -%}\n        temporary\n      {%- elif transient -%}\n        transient\n      {%- endif %} table {{ relation }} {% if copy_grants and not temporary -%} copy grants {%- endif %} as\n      (\n        {%- if cluster_by_string is not none -%}\n          select * from(\n            {{ sql }}\n            ) order by ({{ cluster_by_string }})\n        {%- else -%}\n          {{ sql }}\n        {%- endif %}\n      );\n    {% if cluster_by_string is not none and not temporary -%}\n      alter table {{relation}} cluster by ({{cluster_by_string}});\n    {%- endif -%}\n    {% if enable_automatic_clustering and cluster_by_string is not none and not temporary  -%}\n      alter table {{relation}} resume recluster;\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__create_view_as": {"unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} view {{ relation }} {% if copy_grants -%} copy grants {%- endif %} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__list_schemas": {"unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation) %}\n  {%- set sql -%}\n    show terse objects in {{ schema_relation }}\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in schema  {{ schema_relation }}! dbt can only get\n      information about schemas with fewer than {{ maximum }} objects.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {%- do return(result) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__current_timestamp": {"unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__rename_relation": {"unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__alter_column_type": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n  comment on {{ relation.type }} {{ relation }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    alter {{ relation.type }} {{ relation }} alter\n    {% for column_name in column_dict %}\n        {{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} COMMENT $${{ column_dict[column_name]['description'] | replace('$', '[$]') }}$$ {{ ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.get_current_query_tag": {"unique_id": "macro.dbt_snowflake.get_current_query_tag", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.set_query_tag": {"unique_id": "macro.dbt_snowflake.set_query_tag", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.unset_query_tag": {"unique_id": "macro.dbt_snowflake.unset_query_tag", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\adapters.sql", "original_file_path": "macros\\adapters.sql", "name": "unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__get_catalog": {"unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\catalog.sql", "original_file_path": "macros\\catalog.sql", "name": "snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n  {% set query %}\n      with tables as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n              table_type as \"table_type\",\n              comment as \"table_comment\",\n\n              -- note: this is the _role_ that owns the table\n              table_owner as \"table_owner\",\n\n              'Clustering Key' as \"stats:clustering_key:label\",\n              clustering_key as \"stats:clustering_key:value\",\n              'The key used to cluster this table' as \"stats:clustering_key:description\",\n              (clustering_key is not null) as \"stats:clustering_key:include\",\n\n              'Row Count' as \"stats:row_count:label\",\n              row_count as \"stats:row_count:value\",\n              'An approximate count of rows in this table' as \"stats:row_count:description\",\n              (row_count is not null) as \"stats:row_count:include\",\n\n              'Approximate Size' as \"stats:bytes:label\",\n              bytes as \"stats:bytes:value\",\n              'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n              (bytes is not null) as \"stats:bytes:include\",\n\n              'Last Modified' as \"stats:last_modified:label\",\n              to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n              'The timestamp for last update/change' as \"stats:last_modified:description\",\n              (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n\n          from {{ information_schema }}.tables\n\n      ),\n\n      columns as (\n\n          select\n              table_catalog as \"table_database\",\n              table_schema as \"table_schema\",\n              table_name as \"table_name\",\n\n              column_name as \"column_name\",\n              ordinal_position as \"column_index\",\n              data_type as \"column_type\",\n              comment as \"column_comment\"\n\n          from {{ information_schema }}.columns\n      )\n\n      select *\n      from tables\n      join columns using (\"table_database\", \"table_schema\", \"table_name\")\n      where (\n        {%- for schema in schemas -%}\n          upper(\"table_schema\") = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      order by \"column_index\"\n    {%- endset -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_validate_get_incremental_strategy", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "dbt_snowflake_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_snowflake_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\", default=\"merge\") -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'delete+insert'\n  {%- endset %}\n  {% if strategy not in ['merge', 'delete+insert'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql": {"unique_id": "macro.dbt_snowflake.dbt_snowflake_get_incremental_sql", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "dbt_snowflake_get_incremental_sql", "macro_sql": "{% macro dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  {% if strategy == 'merge' %}\n    {% do return(get_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% elif strategy == 'delete+insert' %}\n    {% do return(get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns)) %}\n  {% else %}\n    {% do exceptions.raise_compiler_error('invalid strategy: ' ~ strategy) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\incremental.sql", "original_file_path": "macros\\materializations\\incremental.sql", "name": "materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake' -%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set target_relation = this %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_snowflake_validate_get_incremental_strategy(config) -%}\n\n  -- setup\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% if existing_relation is none %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n    {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n    {% set build_sql = dbt_snowflake_get_incremental_sql(strategy, tmp_relation, target_relation, unique_key, dest_columns) %}\n  {% endif %}\n\n  {%- call statement('main') -%}\n    {{ build_sql }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\merge.sql", "original_file_path": "macros\\materializations\\merge.sql", "name": "snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        );\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, predicates) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.materialization_table_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\table.sql", "original_file_path": "macros\\materializations\\table.sql", "name": "materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake' %}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database, type='table') -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {#-- Drop the relation if it was a view to \"convert\" it in a table. This may lead to\n    -- downtime, but it should be a relatively infrequent occurrence  #}\n  {% if old_relation is not none and not old_relation.is_table %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ drop_relation_if_exists(old_relation) }}\n  {% endif %}\n\n  --build model\n  {% call statement('main') -%}\n    {{ create_table_as(false, target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt_snowflake.materialization_view_snowflake": {"unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "package_name": "dbt_snowflake", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\snowflake", "path": "macros\\materializations\\view.sql", "original_file_path": "macros\\materializations\\view.sql", "name": "materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do return(to_return) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\core.sql", "original_file_path": "macros\\core.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\core.sql", "original_file_path": "macros\\core.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\adapters\\common.sql", "original_file_path": "macros\\adapters\\common.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\datetime.sql", "original_file_path": "macros\\etc\\datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\get_custom_alias.sql", "original_file_path": "macros\\etc\\get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\get_custom_database.sql", "original_file_path": "macros\\etc\\get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\get_custom_database.sql", "original_file_path": "macros\\etc\\get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\get_custom_schema.sql", "original_file_path": "macros\\etc\\get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\get_custom_schema.sql", "original_file_path": "macros\\etc\\get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\is_incremental.sql", "original_file_path": "macros\\etc\\is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\etc\\query.sql", "original_file_path": "macros\\etc\\query.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.column_list": {"unique_id": "macro.dbt.column_list", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "column_list", "macro_sql": "{% macro column_list(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {% if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.column_list_for_create_table": {"unique_id": "macro.dbt.column_list_for_create_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "column_list_for_create_table", "macro_sql": "{% macro column_list_for_create_table(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {{ col.data_type }} {%- if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\helpers.sql", "original_file_path": "macros\\materializations\\helpers.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column in dest_columns -%}\n            {{ adapter.quote(column.name) }} = DBT_INTERNAL_SOURCE.{{ adapter.quote(column.name) }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.common_get_delete_insert_merge_sql": {"unique_id": "macro.dbt.common_get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "common_get_delete_insert_merge_sql", "macro_sql": "{% macro common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    );\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n    {{ common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\common\\merge.sql", "original_file_path": "macros\\materializations\\common\\merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.incremental_upsert": {"unique_id": "macro.dbt.incremental_upsert", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\incremental\\helpers.sql", "original_file_path": "macros\\materializations\\incremental\\helpers.sql", "name": "incremental_upsert", "macro_sql": "{% macro incremental_upsert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    );\n    {%- endif %}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\incremental\\incremental.sql", "original_file_path": "macros\\materializations\\incremental\\incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(this) %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif existing_relation.is_view or should_full_refresh() %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set backup_identifier = existing_relation.identifier ~ \"__dbt_backup\" %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n      {% do adapter.drop_relation(backup_relation) %}\n\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n      {% set tmp_relation = make_temp_relation(target_relation) %}\n      {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n      {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n      {% set build_sql = incremental_upsert(tmp_relation, target_relation, unique_key=unique_key) %}\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.basic_load_csv_rows": {"unique_id": "macro.dbt.basic_load_csv_rows", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "basic_load_csv_rows", "macro_sql": "{% macro basic_load_csv_rows(model, batch_size, agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n  {{ return(basic_load_csv_rows(model, 10000, agate_table) )}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\seed\\seed.sql", "original_file_path": "macros\\materializations\\seed\\seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\snapshot_merge.sql", "original_file_path": "macros\\materializations\\snapshot\\snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n    ;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/fishtown-analytics/dbt/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\snapshot\\strategies.sql", "original_file_path": "macros\\materializations\\snapshot\\strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = snapshot_string_as_time(now) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\table\\table.sql", "original_file_path": "macros\\materializations\\table\\table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n\n  -- drop the temp relations if they exists for some reason\n  {{ adapter.drop_relation(intermediate_relation) }}\n  {{ adapter.drop_relation(backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_table_as(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(target_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\view\\create_or_replace_view.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch(\"handle_existing_table\", packages=['dbt'])(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\view\\create_or_replace_view.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\view\\create_or_replace_view.sql", "original_file_path": "macros\\materializations\\view\\create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view(run_outside_transaction_hooks=True) %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {% if run_outside_transaction_hooks %}\n      -- no transactions on BigQuery\n      {{ run_hooks(pre_hooks, inside_transaction=False) }}\n  {% endif %}\n\n  -- `BEGIN` happens here on Snowflake\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if run_outside_transaction_hooks %}\n      -- No transactions on BigQuery\n      {{ run_hooks(post_hooks, inside_transaction=False) }}\n  {% endif %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\materializations\\view\\view.sql", "original_file_path": "macros\\materializations\\view\\view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exists for some reason\n  {{ adapter.drop_relation(intermediate_relation) }}\n  {{ adapter.drop_relation(backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(target_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\accepted_values.sql", "original_file_path": "macros\\schema_tests\\accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, values) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('field')) %}\n{% set quote_values = kwargs.get('quote', True) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        {% for value in values -%}\n            {% if quote_values -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\accepted_values.sql", "original_file_path": "macros\\schema_tests\\accepted_values.sql", "name": "test_accepted_values", "macro_sql": "{% macro test_accepted_values(model, values) %}\n    {% set macro = adapter.dispatch('test_accepted_values') %}\n    {{ macro(model, values, **kwargs) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\not_null.sql", "original_file_path": "macros\\schema_tests\\not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n\nselect count(*) as validation_errors\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\not_null.sql", "original_file_path": "macros\\schema_tests\\not_null.sql", "name": "test_not_null", "macro_sql": "{% macro test_not_null(model) %}\n    {% set macro = adapter.dispatch('test_not_null') %}\n    {{ macro(model, **kwargs) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\relationships.sql", "original_file_path": "macros\\schema_tests\\relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, to, field) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('from')) %}\n\n\nselect count(*) as validation_errors\nfrom (\n    select {{ column_name }} as id from {{ model }}\n) as child\nleft join (\n    select {{ field }} as id from {{ to }}\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\relationships.sql", "original_file_path": "macros\\schema_tests\\relationships.sql", "name": "test_relationships", "macro_sql": "{% macro test_relationships(model, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships') %}\n    {{ macro(model, to, field, **kwargs) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\unique.sql", "original_file_path": "macros\\schema_tests\\unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        {{ column_name }}\n\n    from {{ model }}\n    where {{ column_name }} is not null\n    group by {{ column_name }}\n    having count(*) > 1\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "macros\\schema_tests\\unique.sql", "original_file_path": "macros\\schema_tests\\unique.sql", "name": "test_unique", "macro_sql": "{% macro test_unique(model) %}\n    {% set macro = adapter.dispatch('test_unique') %}\n    {{ macro(model, **kwargs) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": []}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "c:\\users\\059603\\dbt-env\\lib\\site-packages\\dbt\\include\\global_project", "path": "overview.md", "original_file_path": "docs\\overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."}}, "exposures": {}, "selectors": {}, "disabled": [], "parent_map": {"model.dbt_ods_delta.ad_anzahl_akt_verarbeitung": ["model.dbt_ods_delta.ad_verarb_ods"], "model.dbt_ods_delta.ad_chng_vertrag_status": ["model.dbt_ods_delta.od_vertrag_akt", "model.dbt_ods_delta.od_vertragskontext_akt", "model.dbt_ods_delta.vs_vertrag"], "model.dbt_ods_delta.ad_mod_partner": ["model.dbt_ods_delta.vg_anschrift_akt", "model.dbt_ods_delta.vg_bankverbindung_akt", "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt", "model.dbt_ods_delta.vg_coc_auftrag_partner_akt", "model.dbt_ods_delta.vg_externereferenz_partner_akt", "model.dbt_ods_delta.vg_kommunikationskanal_akt", "model.dbt_ods_delta.vg_kostenstelle_akt", "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt", "model.dbt_ods_delta.vg_marketingmassnahme_akt", "model.dbt_ods_delta.vg_partner_akt", "model.dbt_ods_delta.vg_partner_kennzeichen_akt", "model.dbt_ods_delta.vg_partnerbeziehung_akt", "model.dbt_ods_delta.vg_vermittlervereinbarung_akt", "model.dbt_ods_delta.vg_vermittlervertrag_akt", "model.dbt_ods_delta.vg_wirtschaftszweig_akt"], "model.dbt_ods_delta.ad_mod_partner_coc": ["model.dbt_ods_delta.ad_mod_partner", "model.dbt_ods_delta.od_coc_auftrag_partner_akt"], "model.dbt_ods_delta.ad_mod_schaden": ["model.dbt_ods_delta.vg_schaden_akt", "model.dbt_ods_delta.vg_schaden_art_akt", "model.dbt_ods_delta.vg_schadenereignis_akt", "model.dbt_ods_delta.vg_schadenereignis_bez_akt", "model.dbt_ods_delta.vg_schadenkategorie_akt", "model.dbt_ods_delta.vg_schadenrolle_akt", "model.dbt_ods_delta.vg_schadenzahlung_akt"], "model.dbt_ods_delta.ad_mod_schaden_coc": ["model.dbt_ods_delta.ad_mod_schaden", "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt", "model.dbt_ods_delta.od_schaden_akt"], "model.dbt_ods_delta.ad_mod_vertrag": ["model.dbt_ods_delta.vg_beitrag_akt", "model.dbt_ods_delta.vg_bonusmalus_akt", "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt", "model.dbt_ods_delta.vg_deckung_akt", "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt", "model.dbt_ods_delta.vg_externereferenz_akt", "model.dbt_ods_delta.vg_fremdvertrag_akt", "model.dbt_ods_delta.vg_internereferenz_akt", "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt", "model.dbt_ods_delta.vg_klauselnbedingungen_akt", "model.dbt_ods_delta.vg_kraftfahrzeug_akt", "model.dbt_ods_delta.vg_lv_bezugsrecht_akt", "model.dbt_ods_delta.vg_lv_leistung_akt", "model.dbt_ods_delta.vg_lv_leistung_flv_akt", "model.dbt_ods_delta.vg_lv_leistung_konv_akt", "model.dbt_ods_delta.vg_mahnung_akt", "model.dbt_ods_delta.vg_nutzer_akt", "model.dbt_ods_delta.vg_rolle_akt", "model.dbt_ods_delta.vg_selbstbehalte_akt", "model.dbt_ods_delta.vg_stufung_akt", "model.dbt_ods_delta.vg_typregio_akt", "model.dbt_ods_delta.vg_versichertesobjekt_akt", "model.dbt_ods_delta.vg_versichertesobjektkfz_akt", "model.dbt_ods_delta.vg_vertrag_akt", "model.dbt_ods_delta.vg_vertragsbeziehung_akt", "model.dbt_ods_delta.vg_vertragskontext_akt", "model.dbt_ods_delta.vg_vertragstandard_akt", "model.dbt_ods_delta.vg_vertragsteil_akt", "model.dbt_ods_delta.vg_vertragsteilbuendel_akt", "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt", "model.dbt_ods_delta.vg_zuschl_nachl_akt"], "model.dbt_ods_delta.ad_mod_vertrag_coc": ["model.dbt_ods_delta.ad_mod_vertrag", "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt"], "model.dbt_ods_delta.ad_verarb_ods": [], "model.dbt_ods_delta.filter_vertrag_crm": ["model.dbt_ods_delta.od_vertragskontext_akt"], "model.dbt_ods_delta.s0_vertrag": ["model.dbt_ods_delta.ad_chng_vertrag_status", "model.dbt_ods_delta.ad_mod_vertrag_coc", "model.dbt_ods_delta.ad_mod_vertrag_coc", "model.dbt_ods_delta.filter_vertrag_crm"], "model.dbt_ods_delta.od_coc_auftrag_partner_akt": ["source.dbt_ods_delta.da.od_coc_auftrag_partner_akt"], "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt": ["source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt"], "model.dbt_ods_delta.od_schaden_akt": ["source.dbt_ods_delta.da.od_schaden_akt"], "model.dbt_ods_delta.od_vertragskontext_akt": ["source.dbt_ods_delta.da.od_vertragskontext_akt"], "model.dbt_ods_delta.od_vertrag_akt": ["source.dbt_ods_delta.da.od_vertrag_akt"], "model.dbt_ods_delta.vg_anschrift_akt": ["source.dbt_ods_delta.da.vg_anschrift_akt"], "model.dbt_ods_delta.vg_bankverbindung_akt": ["source.dbt_ods_delta.da.vg_bankverbindung_akt"], "model.dbt_ods_delta.vg_beitrag_akt": ["source.dbt_ods_delta.da.vg_beitrag_akt"], "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt": ["source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt"], "model.dbt_ods_delta.vg_bonusmalus_akt": ["source.dbt_ods_delta.da.vg_bonusmalus_akt"], "model.dbt_ods_delta.vg_coc_auftrag_partner_akt": ["source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt"], "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt": ["source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt"], "model.dbt_ods_delta.vg_deckung_akt": ["source.dbt_ods_delta.da.vg_deckung_akt"], "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt": ["source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt"], "model.dbt_ods_delta.vg_externereferenz_akt": ["source.dbt_ods_delta.da.vg_externereferenz_akt"], "model.dbt_ods_delta.vg_externereferenz_partner_akt": ["source.dbt_ods_delta.da.vg_externereferenz_partner_akt"], "model.dbt_ods_delta.vg_fremdvertrag_akt": ["source.dbt_ods_delta.da.vg_fremdvertrag_akt"], "model.dbt_ods_delta.vg_internereferenz_akt": ["source.dbt_ods_delta.da.vg_internereferenz_akt"], "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt": ["source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt"], "model.dbt_ods_delta.vg_klauselnbedingungen_akt": ["source.dbt_ods_delta.da.vg_klauselnbedingungen_akt"], "model.dbt_ods_delta.vg_kommunikationskanal_akt": ["source.dbt_ods_delta.da.vg_kommunikationskanal_akt"], "model.dbt_ods_delta.vg_kostenstelle_akt": ["source.dbt_ods_delta.da.vg_kostenstelle_akt"], "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt": ["source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt"], "model.dbt_ods_delta.vg_kraftfahrzeug_akt": ["source.dbt_ods_delta.da.vg_kraftfahrzeug_akt"], "model.dbt_ods_delta.vg_lv_bezugsrecht_akt": ["source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt"], "model.dbt_ods_delta.vg_lv_leistung_akt": ["source.dbt_ods_delta.da.vg_lv_leistung_akt"], "model.dbt_ods_delta.vg_lv_leistung_flv_akt": ["source.dbt_ods_delta.da.vg_lv_leistung_flv_akt"], "model.dbt_ods_delta.vg_lv_leistung_konv_akt": ["source.dbt_ods_delta.da.vg_lv_leistung_konv_akt"], "model.dbt_ods_delta.vg_mahnung_akt": ["source.dbt_ods_delta.da.vg_mahnung_akt"], "model.dbt_ods_delta.vg_marketingmassnahme_akt": ["source.dbt_ods_delta.da.vg_marketingmassnahme_akt"], "model.dbt_ods_delta.vg_nutzer_akt": ["source.dbt_ods_delta.da.vg_nutzer_akt"], "model.dbt_ods_delta.vg_partnerbeziehung_akt": ["source.dbt_ods_delta.da.vg_partnerbeziehung_akt"], "model.dbt_ods_delta.vg_partner_akt": ["source.dbt_ods_delta.da.vg_partner_akt"], "model.dbt_ods_delta.vg_partner_kennzeichen_akt": ["source.dbt_ods_delta.da.vg_partner_kennzeichen_akt"], "model.dbt_ods_delta.vg_rolle_akt": ["source.dbt_ods_delta.da.vg_rolle_akt"], "model.dbt_ods_delta.vg_schadenereignis_akt": ["source.dbt_ods_delta.da.vg_schadenereignis_akt"], "model.dbt_ods_delta.vg_schadenereignis_bez_akt": ["source.dbt_ods_delta.da.vg_schadenereignis_bez_akt"], "model.dbt_ods_delta.vg_schadenkategorie_akt": ["source.dbt_ods_delta.da.vg_schadenkategorie_akt"], "model.dbt_ods_delta.vg_schadenrolle_akt": ["source.dbt_ods_delta.da.vg_schadenrolle_akt"], "model.dbt_ods_delta.vg_schadenzahlung_akt": ["source.dbt_ods_delta.da.vg_schadenzahlung_akt"], "model.dbt_ods_delta.vg_schaden_akt": ["source.dbt_ods_delta.da.vg_schaden_akt"], "model.dbt_ods_delta.vg_schaden_art_akt": ["source.dbt_ods_delta.da.vg_schaden_art_akt"], "model.dbt_ods_delta.vg_selbstbehalte_akt": ["source.dbt_ods_delta.da.vg_selbstbehalte_akt"], "model.dbt_ods_delta.vg_stufung_akt": ["source.dbt_ods_delta.da.vg_stufung_akt"], "model.dbt_ods_delta.vg_typregio_akt": ["source.dbt_ods_delta.da.vg_typregio_akt"], "model.dbt_ods_delta.vg_vermittlervereinbarung_akt": ["source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt"], "model.dbt_ods_delta.vg_vermittlervertrag_akt": ["source.dbt_ods_delta.da.vg_vermittlervertrag_akt"], "model.dbt_ods_delta.vg_versichertesobjektkfz_akt": ["source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt"], "model.dbt_ods_delta.vg_versichertesobjekt_akt": ["source.dbt_ods_delta.da.vg_versichertesobjekt_akt"], "model.dbt_ods_delta.vg_vertragsbeziehung_akt": ["source.dbt_ods_delta.da.vg_vertragsbeziehung_akt"], "model.dbt_ods_delta.vg_vertragskontext_akt": ["source.dbt_ods_delta.da.vg_vertragskontext_akt"], "model.dbt_ods_delta.vg_vertragstandard_akt": ["source.dbt_ods_delta.da.vg_vertragstandard_akt"], "model.dbt_ods_delta.vg_vertragsteilbuendel_akt": ["source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt"], "model.dbt_ods_delta.vg_vertragsteil_akt": ["source.dbt_ods_delta.da.vg_vertragsteil_akt"], "model.dbt_ods_delta.vg_vertrag_akt": ["source.dbt_ods_delta.da.vg_vertrag_akt"], "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt": ["source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt"], "model.dbt_ods_delta.vg_wirtschaftszweig_akt": ["source.dbt_ods_delta.da.vg_wirtschaftszweig_akt"], "model.dbt_ods_delta.vg_zuschl_nachl_akt": ["source.dbt_ods_delta.da.vg_zuschl_nachl_akt"], "model.dbt_ods_delta.vs_vertrag": ["source.dbt_ods_delta.da.vs_vertrag"], "source.dbt_ods_delta.da.vg_anschrift_akt": [], "source.dbt_ods_delta.da.vg_bankverbindung_akt": [], "source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt": [], "source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt": [], "source.dbt_ods_delta.da.vg_externereferenz_partner_akt": [], "source.dbt_ods_delta.da.vg_kommunikationskanal_akt": [], "source.dbt_ods_delta.da.vg_kostenstelle_akt": [], "source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt": [], "source.dbt_ods_delta.da.vg_marketingmassnahme_akt": [], "source.dbt_ods_delta.da.vg_partner_akt": [], "source.dbt_ods_delta.da.vg_partner_kennzeichen_akt": [], "source.dbt_ods_delta.da.vg_partnerbeziehung_akt": [], "source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt": [], "source.dbt_ods_delta.da.vg_vermittlervertrag_akt": [], "source.dbt_ods_delta.da.vg_wirtschaftszweig_akt": [], "source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt": [], "source.dbt_ods_delta.da.vg_externereferenz_akt": [], "source.dbt_ods_delta.da.vg_internereferenz_akt": [], "source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt": [], "source.dbt_ods_delta.da.vg_lv_leistung_akt": [], "source.dbt_ods_delta.da.vg_mahnung_akt": [], "source.dbt_ods_delta.da.vg_rolle_akt": [], "source.dbt_ods_delta.da.vg_vertrag_akt": [], "source.dbt_ods_delta.da.vg_vertragsbeziehung_akt": [], "source.dbt_ods_delta.da.vg_vertragskontext_akt": [], "source.dbt_ods_delta.da.vg_beitrag_akt": [], "source.dbt_ods_delta.da.vg_bonusmalus_akt": [], "source.dbt_ods_delta.da.vg_deckung_akt": [], "source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt": [], "source.dbt_ods_delta.da.vg_fremdvertrag_akt": [], "source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt": [], "source.dbt_ods_delta.da.vg_klauselnbedingungen_akt": [], "source.dbt_ods_delta.da.vg_kraftfahrzeug_akt": [], "source.dbt_ods_delta.da.vg_lv_leistung_flv_akt": [], "source.dbt_ods_delta.da.vg_lv_leistung_konv_akt": [], "source.dbt_ods_delta.da.vg_nutzer_akt": [], "source.dbt_ods_delta.da.vg_selbstbehalte_akt": [], "source.dbt_ods_delta.da.vg_stufung_akt": [], "source.dbt_ods_delta.da.vg_typregio_akt": [], "source.dbt_ods_delta.da.vg_versichertesobjekt_akt": [], "source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt": [], "source.dbt_ods_delta.da.vg_vertragstandard_akt": [], "source.dbt_ods_delta.da.vg_vertragsteil_akt": [], "source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt": [], "source.dbt_ods_delta.da.vg_zuschl_nachl_akt": [], "source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt": [], "source.dbt_ods_delta.da.od_vertragskontext_akt": [], "source.dbt_ods_delta.da.od_coc_auftrag_partner_akt": [], "source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt": [], "source.dbt_ods_delta.da.od_vertrag_akt": [], "source.dbt_ods_delta.da.vs_vertrag": [], "source.dbt_ods_delta.da.vg_schaden_akt": [], "source.dbt_ods_delta.da.vg_schaden_art_akt": [], "source.dbt_ods_delta.da.vg_schadenereignis_akt": [], "source.dbt_ods_delta.da.vg_schadenereignis_bez_akt": [], "source.dbt_ods_delta.da.vg_schadenkategorie_akt": [], "source.dbt_ods_delta.da.vg_schadenrolle_akt": [], "source.dbt_ods_delta.da.vg_schadenzahlung_akt": [], "source.dbt_ods_delta.da.od_schaden_akt": []}, "child_map": {"model.dbt_ods_delta.ad_anzahl_akt_verarbeitung": [], "model.dbt_ods_delta.ad_chng_vertrag_status": ["model.dbt_ods_delta.s0_vertrag"], "model.dbt_ods_delta.ad_mod_partner": ["model.dbt_ods_delta.ad_mod_partner_coc"], "model.dbt_ods_delta.ad_mod_partner_coc": [], "model.dbt_ods_delta.ad_mod_schaden": ["model.dbt_ods_delta.ad_mod_schaden_coc"], "model.dbt_ods_delta.ad_mod_schaden_coc": [], "model.dbt_ods_delta.ad_mod_vertrag": ["model.dbt_ods_delta.ad_mod_vertrag_coc"], "model.dbt_ods_delta.ad_mod_vertrag_coc": ["model.dbt_ods_delta.s0_vertrag", "model.dbt_ods_delta.s0_vertrag"], "model.dbt_ods_delta.ad_verarb_ods": ["model.dbt_ods_delta.ad_anzahl_akt_verarbeitung"], "model.dbt_ods_delta.filter_vertrag_crm": ["model.dbt_ods_delta.s0_vertrag"], "model.dbt_ods_delta.s0_vertrag": [], "model.dbt_ods_delta.od_coc_auftrag_partner_akt": ["model.dbt_ods_delta.ad_mod_partner_coc"], "model.dbt_ods_delta.od_coc_auftrag_vertrag_akt": ["model.dbt_ods_delta.ad_mod_schaden_coc", "model.dbt_ods_delta.ad_mod_vertrag_coc"], "model.dbt_ods_delta.od_schaden_akt": ["model.dbt_ods_delta.ad_mod_schaden_coc"], "model.dbt_ods_delta.od_vertragskontext_akt": ["model.dbt_ods_delta.ad_chng_vertrag_status", "model.dbt_ods_delta.filter_vertrag_crm"], "model.dbt_ods_delta.od_vertrag_akt": ["model.dbt_ods_delta.ad_chng_vertrag_status"], "model.dbt_ods_delta.vg_anschrift_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_bankverbindung_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_beitrag_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_bonusmalus_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_coc_auftrag_partner_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_deckung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_drittrechtglaeubiger_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_externereferenz_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_externereferenz_partner_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_fremdvertrag_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_internereferenz_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_klauselnbedingungen_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_kommunikationskanal_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_kostenstelle_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt": ["model.dbt_ods_delta.ad_mod_partner", "model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_kraftfahrzeug_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_lv_bezugsrecht_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_lv_leistung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_lv_leistung_flv_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_lv_leistung_konv_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_mahnung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_marketingmassnahme_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_nutzer_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_partnerbeziehung_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_partner_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_partner_kennzeichen_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_rolle_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_schadenereignis_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schadenereignis_bez_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schadenkategorie_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schadenrolle_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schadenzahlung_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schaden_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_schaden_art_akt": ["model.dbt_ods_delta.ad_mod_schaden"], "model.dbt_ods_delta.vg_selbstbehalte_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_stufung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_typregio_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vermittlervereinbarung_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_vermittlervertrag_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_versichertesobjektkfz_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_versichertesobjekt_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertragsbeziehung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertragskontext_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertragstandard_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertragsteilbuendel_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertragsteil_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_vertrag_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_wertungsgrundlteilung_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vg_wirtschaftszweig_akt": ["model.dbt_ods_delta.ad_mod_partner"], "model.dbt_ods_delta.vg_zuschl_nachl_akt": ["model.dbt_ods_delta.ad_mod_vertrag"], "model.dbt_ods_delta.vs_vertrag": ["model.dbt_ods_delta.ad_chng_vertrag_status"], "source.dbt_ods_delta.da.vg_anschrift_akt": ["model.dbt_ods_delta.vg_anschrift_akt"], "source.dbt_ods_delta.da.vg_bankverbindung_akt": ["model.dbt_ods_delta.vg_bankverbindung_akt"], "source.dbt_ods_delta.da.vg_betriebswirtschaftdaten_akt": ["model.dbt_ods_delta.vg_betriebswirtschaftdaten_akt"], "source.dbt_ods_delta.da.vg_coc_auftrag_partner_akt": ["model.dbt_ods_delta.vg_coc_auftrag_partner_akt"], "source.dbt_ods_delta.da.vg_externereferenz_partner_akt": ["model.dbt_ods_delta.vg_externereferenz_partner_akt"], "source.dbt_ods_delta.da.vg_kommunikationskanal_akt": ["model.dbt_ods_delta.vg_kommunikationskanal_akt"], "source.dbt_ods_delta.da.vg_kostenstelle_akt": ["model.dbt_ods_delta.vg_kostenstelle_akt"], "source.dbt_ods_delta.da.vg_kostenstelle_zuordnung_akt": ["model.dbt_ods_delta.vg_kostenstelle_zuordnung_akt"], "source.dbt_ods_delta.da.vg_marketingmassnahme_akt": ["model.dbt_ods_delta.vg_marketingmassnahme_akt"], "source.dbt_ods_delta.da.vg_partner_akt": ["model.dbt_ods_delta.vg_partner_akt"], "source.dbt_ods_delta.da.vg_partner_kennzeichen_akt": ["model.dbt_ods_delta.vg_partner_kennzeichen_akt"], "source.dbt_ods_delta.da.vg_partnerbeziehung_akt": ["model.dbt_ods_delta.vg_partnerbeziehung_akt"], "source.dbt_ods_delta.da.vg_vermittlervereinbarung_akt": ["model.dbt_ods_delta.vg_vermittlervereinbarung_akt"], "source.dbt_ods_delta.da.vg_vermittlervertrag_akt": ["model.dbt_ods_delta.vg_vermittlervertrag_akt"], "source.dbt_ods_delta.da.vg_wirtschaftszweig_akt": ["model.dbt_ods_delta.vg_wirtschaftszweig_akt"], "source.dbt_ods_delta.da.vg_coc_auftrag_vertrag_akt": ["model.dbt_ods_delta.vg_coc_auftrag_vertrag_akt"], "source.dbt_ods_delta.da.vg_externereferenz_akt": ["model.dbt_ods_delta.vg_externereferenz_akt"], "source.dbt_ods_delta.da.vg_internereferenz_akt": ["model.dbt_ods_delta.vg_internereferenz_akt"], "source.dbt_ods_delta.da.vg_lv_bezugsrecht_akt": ["model.dbt_ods_delta.vg_lv_bezugsrecht_akt"], "source.dbt_ods_delta.da.vg_lv_leistung_akt": ["model.dbt_ods_delta.vg_lv_leistung_akt"], "source.dbt_ods_delta.da.vg_mahnung_akt": ["model.dbt_ods_delta.vg_mahnung_akt"], "source.dbt_ods_delta.da.vg_rolle_akt": ["model.dbt_ods_delta.vg_rolle_akt"], "source.dbt_ods_delta.da.vg_vertrag_akt": ["model.dbt_ods_delta.vg_vertrag_akt"], "source.dbt_ods_delta.da.vg_vertragsbeziehung_akt": ["model.dbt_ods_delta.vg_vertragsbeziehung_akt"], "source.dbt_ods_delta.da.vg_vertragskontext_akt": ["model.dbt_ods_delta.vg_vertragskontext_akt"], "source.dbt_ods_delta.da.vg_beitrag_akt": ["model.dbt_ods_delta.vg_beitrag_akt"], "source.dbt_ods_delta.da.vg_bonusmalus_akt": ["model.dbt_ods_delta.vg_bonusmalus_akt"], "source.dbt_ods_delta.da.vg_deckung_akt": ["model.dbt_ods_delta.vg_deckung_akt"], "source.dbt_ods_delta.da.vg_drittrechtglaeubiger_akt": ["model.dbt_ods_delta.vg_drittrechtglaeubiger_akt"], "source.dbt_ods_delta.da.vg_fremdvertrag_akt": ["model.dbt_ods_delta.vg_fremdvertrag_akt"], "source.dbt_ods_delta.da.vg_kfzspezifischemerkmale_akt": ["model.dbt_ods_delta.vg_kfzspezifischemerkmale_akt"], "source.dbt_ods_delta.da.vg_klauselnbedingungen_akt": ["model.dbt_ods_delta.vg_klauselnbedingungen_akt"], "source.dbt_ods_delta.da.vg_kraftfahrzeug_akt": ["model.dbt_ods_delta.vg_kraftfahrzeug_akt"], "source.dbt_ods_delta.da.vg_lv_leistung_flv_akt": ["model.dbt_ods_delta.vg_lv_leistung_flv_akt"], "source.dbt_ods_delta.da.vg_lv_leistung_konv_akt": ["model.dbt_ods_delta.vg_lv_leistung_konv_akt"], "source.dbt_ods_delta.da.vg_nutzer_akt": ["model.dbt_ods_delta.vg_nutzer_akt"], "source.dbt_ods_delta.da.vg_selbstbehalte_akt": ["model.dbt_ods_delta.vg_selbstbehalte_akt"], "source.dbt_ods_delta.da.vg_stufung_akt": ["model.dbt_ods_delta.vg_stufung_akt"], "source.dbt_ods_delta.da.vg_typregio_akt": ["model.dbt_ods_delta.vg_typregio_akt"], "source.dbt_ods_delta.da.vg_versichertesobjekt_akt": ["model.dbt_ods_delta.vg_versichertesobjekt_akt"], "source.dbt_ods_delta.da.vg_versichertesobjektkfz_akt": ["model.dbt_ods_delta.vg_versichertesobjektkfz_akt"], "source.dbt_ods_delta.da.vg_vertragstandard_akt": ["model.dbt_ods_delta.vg_vertragstandard_akt"], "source.dbt_ods_delta.da.vg_vertragsteil_akt": ["model.dbt_ods_delta.vg_vertragsteil_akt"], "source.dbt_ods_delta.da.vg_vertragsteilbuendel_akt": ["model.dbt_ods_delta.vg_vertragsteilbuendel_akt"], "source.dbt_ods_delta.da.vg_zuschl_nachl_akt": ["model.dbt_ods_delta.vg_zuschl_nachl_akt"], "source.dbt_ods_delta.da.vg_wertungsgrundlteilung_akt": ["model.dbt_ods_delta.vg_wertungsgrundlteilung_akt"], "source.dbt_ods_delta.da.od_vertragskontext_akt": ["model.dbt_ods_delta.od_vertragskontext_akt"], "source.dbt_ods_delta.da.od_coc_auftrag_partner_akt": ["model.dbt_ods_delta.od_coc_auftrag_partner_akt"], "source.dbt_ods_delta.da.od_coc_auftrag_vertrag_akt": ["model.dbt_ods_delta.od_coc_auftrag_vertrag_akt"], "source.dbt_ods_delta.da.od_vertrag_akt": ["model.dbt_ods_delta.od_vertrag_akt"], "source.dbt_ods_delta.da.vs_vertrag": ["model.dbt_ods_delta.vs_vertrag"], "source.dbt_ods_delta.da.vg_schaden_akt": ["model.dbt_ods_delta.vg_schaden_akt"], "source.dbt_ods_delta.da.vg_schaden_art_akt": ["model.dbt_ods_delta.vg_schaden_art_akt"], "source.dbt_ods_delta.da.vg_schadenereignis_akt": ["model.dbt_ods_delta.vg_schadenereignis_akt"], "source.dbt_ods_delta.da.vg_schadenereignis_bez_akt": ["model.dbt_ods_delta.vg_schadenereignis_bez_akt"], "source.dbt_ods_delta.da.vg_schadenkategorie_akt": ["model.dbt_ods_delta.vg_schadenkategorie_akt"], "source.dbt_ods_delta.da.vg_schadenrolle_akt": ["model.dbt_ods_delta.vg_schadenrolle_akt"], "source.dbt_ods_delta.da.vg_schadenzahlung_akt": ["model.dbt_ods_delta.vg_schadenzahlung_akt"], "source.dbt_ods_delta.da.od_schaden_akt": ["model.dbt_ods_delta.od_schaden_akt"]}}